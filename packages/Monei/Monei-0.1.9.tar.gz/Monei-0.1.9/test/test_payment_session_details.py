# coding: utf-8

"""
    MONEI API v1

    The MONEI API is organized around [REST](https://en.wikipedia.org/wiki/Representational_State_Transfer). Our API has predictable resource-oriented URLs, accepts JSON-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import MONEI PYTHON SDK
from MONEI PYTHON SDK.models.payment_session_details import PaymentSessionDetails  # noqa: E501
from MONEI PYTHON SDK.rest import ApiException

class TestPaymentSessionDetails(unittest.TestCase):
    """PaymentSessionDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test PaymentSessionDetails
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = MONEI PYTHON SDK.models.payment_session_details.PaymentSessionDetails()  # noqa: E501
        if include_optional :
            return PaymentSessionDetails(
                ip = '100.100.200.100', 
                country_code = 'ES', 
                lang = 'es', 
                device_type = 'desktop', 
                device_model = '0', 
                browser = 'Chrome', 
                browser_version = '83.0.4103.116', 
                os = 'Mac OS', 
                os_version = '10.15.4', 
                source = 'MONEI/PHP', 
                source_version = '0.1.2', 
                user_agent = 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) ...'
            )
        else :
            return PaymentSessionDetails(
        )

    def testPaymentSessionDetails(self):
        """Test PaymentSessionDetails"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
