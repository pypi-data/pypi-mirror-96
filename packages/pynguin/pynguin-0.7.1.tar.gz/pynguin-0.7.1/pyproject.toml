# SPDX-FileCopyrightText: 2019-2021 Pynguin Contributors
#
# SPDX-License-Identifier: LGPL-3.0-or-later

[tool.poetry]
name = "pynguin"
version = "0.7.1"
description = "Pynguin is a tool for automated unit test generation for Python"
authors = ["Stephan Lukasczyk <stephan@lukasczyk.me>"]
license = "LGPL-3.0-or-later"
readme = "README.md"
repository = "https://github.com/se2p/pynguin"
documentation = "https://pynguin.readthedocs.io"
keywords = [
    "unit test",
    "random testing",
    "search based",
    "test generation"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.8",
    "Topic :: Education :: Testing",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Unit",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = "^3.8"
astor = "^0.8.1"
simple-parsing = "^0.0.13"
bytecode = "^0"
typing_inspect = "^0"
jellyfish = "^0"
networkx = {extras = ["pydot"], version = "^2.5"}
pydot = "^1.4"
rich = "^9.11.1"

[tool.poetry.dev-dependencies]
coverage = "^5.4"
pytest = "^6.2"
black = {version = "^20.8b1", allow-prereleases = true}
pytest-cov = "^2.11"
pylint = "^2.7"
pytest-sugar = "^0.9"
pytest-picked = "^0.4"
pytest-xdist = "^2.2"
hypothesis = "^6.3"
pytest-mock = "^3.5"
monkeytype = "^20.5.0"
mypy = "^0.812"
isort = {extras = ["pyproject"], version = "^5.7"}
pre-commit = "^2.10"
darglint = "^1.7"
pyupgrade = "^2.10"
bandit = "^1.7"
safety = "^1.10"
sphinx = "^3.5"
sphinx-autodoc-typehints = "^1.11"
flake8 = "^3.8"

[tool.poetry.scripts]
pynguin = "pynguin.cli:main"

[tool.black]
line-length = 88
target_version = ['py38']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs          # exclude a few common directories in the
    | \.git           # root of the project
    | \.pytest_cache
    | \.mypy_cache
    | \.venv
    | _build
    | build
    | dist
    | pynguin.egg-info
  )/
)
'''

[tool.coverage.run]
branch = true
source = ["pynguin", "tests"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "def __str__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
]

[tool.coverage.html]
directory = "cov_html"

[tool.isort]
line_length=88
multi_line_output=3
include_trailing_comma=true
indent='    '

[tool.pytest.ini_options]
minversion = "6.0.0rc1"
# Always using Coverage.py disables debugging.
# addopts = "--cov=pynguin --cov-branch --cov-report html:cov_html --cov-report=term-missing"
testpaths = [
  "tests",
]
# A lot of our own classes start with Test so pytest will pick them up during test collection.
# But they don't actually contains tests, so we set an empty matcher for the class name.
python_classes = ''

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
