# noinspection SpellCheckingInspection,PyUnresolvedReferences,PyStatementEffect
{
   'TestPicklerExtensionGeom.test_picklers:BBox': BBox(xl=1, yl=2, xh=3, yh=4),
   'TestPicklerExtensionGeom.test_picklers:Brush': Brush('blue'),
   'TestPicklerExtensionGeom.test_picklers:ControlPoint': ControlPoint(Point(1, 2), Vector(3, 4), Vector(5, 6), 'sharp'),
   'TestPicklerExtensionGeom.test_picklers:ElemRectangle': ElemRectangle('r1', PenBrush(Pen('red', 0.0), None), closed=True, p1=Point(1, 2), p2=Point(-3, -4)),
   'TestPicklerExtensionGeom.test_picklers:Pen': Pen('red', 1.5),
   'TestPicklerExtensionGeom.test_picklers:PenBrush': PenBrush(Pen('green', 0.5), Brush('#808080')),
   'TestPicklerExtensionGeom.test_picklers:Point': Point(1, 2),
   'TestPicklerExtensionGeom.test_picklers:Transform': Transform((1.6, 2.5, 3.4, 4.3, 5.2, 6.1)),
   'TestPicklerExtensionGeom.test_picklers:Vector': Vector(3, 4),
   'TestPicklerExtensionGeom.test_picklers:all as dict': {
        'BBox': BBox(xl=1, yl=2, xh=3, yh=4),
        'Brush': Brush('blue'),
        'ControlPoint': ControlPoint(Point(1, 2), Vector(3, 4), Vector(5, 6), 'sharp'),
        'ElemRectangle': ElemRectangle('r1', PenBrush(Pen('red', 0.0), None), closed=True, p1=Point(1, 2), p2=Point(-3, -4)),
        'Pen': Pen('red', 1.5),
        'PenBrush': PenBrush(Pen('green', 0.5), Brush('#808080')),
        'Point': Point(1, 2),
        'Transform': Transform((1.6, 2.5, 3.4, 4.3, 5.2, 6.1)),
        'Vector': Vector(3, 4),
},
   'TestPicklerExtensionGeom.test_picklers:all as list': pickled('list', 'c$|e(TWb?R6wcn#h^aNG;JY9ZF*Nm|MTCTe(vqc1te3YC_A<#V-AkC=)kF~V!P>&S_4uH_N&kaC!AAu}&+KlpiAFquo!vR#_syL1oxE1x>uM>D0n~YQy4x6&&`%%0)lMgz!Uf!U1I8;%%To_@iOVxwWc;F_EBJ+rnw)|~C9d^DH;6NeV5ouV6EL_uoTkj-44H{QmY)$j4%q@quj&e|p^(L|%x__lmo8zztKBe&S?K*CF4;h<IeW`M0SN_Aoy(2~^x9v#vcs0QHQX-awtC_Q4sb1^CY!+W`F7}qECR0dNl+ZC'
        'SuBYt(A!+=q;GkKYbhS#j5rWkTzla<F@=NHx2(fh_q`NJx4CM02|*C5R8W0IsLquM9!Tr?RqqxwZOjO!khgQt`m&H+LTudH+ZI2>U@5hEDKRsHXcRJZ_0p5Yd*Rd2H)Eh(UOqBo=1z;60!L){jUe$SGwcW>4L|W>*JR9`p*2HB>@bL8me|4?BnTkzjljtu7oeBkLRYfj9UMblmvlu}PJuq+niJ0^M3Cgs9-N<Ld4)?4!7z;8FO2k|mtwHayN4e?i1^;h%2wO=)3}_kwf5&vBCfYbY20j=*2dQspd8v$8M?u9'
        '!Xh!BS`?f12@Hh&oAaLep+h|2oBJN|k8xVfVC<1%V7Iu;n!qdQRX!2BdFH_y>u57IZGH=3nt_LvZ7+;)T+X;QO)a7OIrWhCGU^fS)5oHR^yz8`2iTK&P3vndYW`n7>j||CYNt(*C(VETxh6ZSnch$Ih}L>Pa7l3JNaHtHFM<m'),
   'TestPicklerExtensionGeom.test_picklers:point dict': {'p1': Point(1, 2), 'p2': Point(3, 4)},
   'TestPicklerExtensionGeom.test_picklers:point list': [Point(1, 2), Point(3, 4)],
   'TestPicklerExtensionGeom.test_picklers:point-vector list': [Point(1, 2), Vector(3, 4)],
   'TestPicklerExtensionGeom.test_picklers:point-vector-str-float list': [Point(1, 2), Vector(3, 4), '5,6', 7.8],
   'TestTestCaseGeomExtended.test_assertMatchPlot:0': image('RGB', (64, 48), 'c%1E$OH0F05Jvz1R`)JkxCr<IvI!|JT_^!tNdiJ%VyoDslJu3<u>+S_ZIhb>W(IN=;r5c056;=|2Y!(xiSPSS6op|J$Fbu$p63NY0QY&GQ?IKBW*dfKn&!y1FRpGbuW#>0wq;px>AEiUx_Wj8@cbCg?_WNan-b1xnifStI!%wP*gU^x^L!0Y>Md>Xr;Ay(gu_GdS**9zbF_ik+wv!*_pjANngWPtoTTcfI0X>T^bijsPJxQ2dLu=_Q9Ots1xN8Hq$v0s4<bUrzws#eD>xMo!e7Cuc&ab3Rd7BYgtLP4@hI3T'
        'sEr5Vsh~+b3Wf?A#)B|a&@i6r`+O8=#e=X?pcRjTj{@Cz5GD#*#G~M#pj|u&2L<ioseVqVpi4Xmt%5G`C<qmFj0XV)9VND-dpwHSV%5w4XwgeNg!B>*6+Om7!VnK3Lp-z$@ene^Lx}iz-ekw~l%#Uw0m_}=@!a?Z29UI?'),
}
