{"version":3,"sources":["addIntegrationPopupView.es6.js"],"names":[],"mappings":"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","file":"addIntegrationPopupView.js","sourcesContent":["/**\n * A popup for selecting an integration to add.\n */\nDjblets.AddIntegrationPopupView = Backbone.View.extend({\n    className: 'djblets-c-integrations-popup',\n\n    /**\n     * The pre-compiled template for an integration in the popup.\n     *\n     * This will be compiled when the popup is first being built, if\n     * integrations are available.\n     */\n    integrationTemplateSource: dedent`\n        <li class=\"djblets-c-integration\">\n         <a href=\"<%- addURL %>\">\n          <% if (iconSrc) { %>\n           <img class=\"djblets-c-integration__icon\"\n                src=\"<%- iconSrc %>\"\n                srcset=\"<%- iconSrcSet %>\"\n                width=\"48\" height=\"48\" alt=\"\">\n          <% } %>\n          <div class=\"djblets-c-integration__details\">\n           <div class=\"djblets-c-integration__name\"><%- name %></div>\n           <div class=\"djblets-c-integration__description\">\n            <%- description %>\n           </div>\n          </div>\n         </a>\n        </li>\n    `,\n\n    /**\n     * The pre-compiled template for the empty integrations popup content.\n     *\n     * This will be compiled when the popup is first being built, if\n     * integrations are not available.\n     */\n    emptyIntegrationsTemplateSource: dedent`\n        <p class=\"djblets-c-integrations-popup__empty\">\n         ${_.escape(_`There are no integrations currently installed.`)}\n        </p>\n    `,\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options passed to the view.\n     *\n     * Option Args:\n     *     integrations (Array):\n     *         An array of integration data to render.\n     */\n    initialize(options) {\n        this.integrations = options.integrations;\n    },\n\n    /**\n     * Render the list of integrations in the popup.\n     *\n     * If there are integrations to display, the\n     * :js:attr:`integrationTemplateSource` attribute will be used for each\n     * item.\n     *\n     * If there aren't any integrations to display, the\n     * :js:attr:`emptyIntegrationsTemplateSource` attribute will be used\n     * for the contents.\n     *\n     * Returns:\n     *     Djblets.AddIntegrationPopupView:\n     *     This object, for chaining.\n     */\n    render() {\n        const integrations = this.integrations;\n\n        if (integrations.length > 0) {\n            /* We have integrations to show. Add each to the list. */\n            const itemTemplate =\n                _.template(this.integrationTemplateSource);\n            const $list = $('<ul>');\n\n            for (let i = 0; i < integrations.length; i++) {\n                $list.append(itemTemplate(integrations[i]));\n            }\n\n            this.$el.append($list);\n        } else {\n            /*\n             * There are no integrations installed. Display an appropriate\n             * message.\n             */\n            this.$el\n                .addClass('-is-empty')\n                .append(_.template(this.emptyIntegrationsTemplateSource)());\n        }\n\n        return this;\n    },\n\n    /**\n     * Remove the view.\n     *\n     * This will first hide the popup, unregistering any events, and will\n     * then remove the element from the DOM.\n     */\n    remove() {\n        this.hide();\n\n        Backbone.View.prototype.remove.call(this);\n    },\n\n    /**\n     * Show the popup, anchored to a button.\n     *\n     * The popup will be displayed on the screen, presenting the list of\n     * rendered integrations. The top-left of the popup will be anchored to\n     * the bottom-left of the provided button.\n     *\n     * Events are hooked up to automatically dismiss the popup when clicking\n     * away from the popup or resizing the window.\n     *\n     * Args:\n     *     $button (jQuery):\n     *         The button element to anchor to.\n     */\n    show($button) {\n        const $window = $(window);\n        const $el = this.$el;\n        const el = this.el;\n        const buttonPos = $button.position();\n\n        /*\n         * First, position the popup and set it to a small size to trigger\n         * scrolling behavior, so we can perform calculations. It does need\n         * to be big enough to fit the scrollbar, though, hence the width.\n         */\n        $el\n            .move(buttonPos.left,\n                  buttonPos.top + $button.outerHeight(),\n                  'absolute')\n            .width(100)\n            .height(1)\n            .show();\n\n        const popupBorderWidths = $el.getExtents('b', 'lr');\n        const scrollbarWidth = el.offsetWidth - el.clientWidth -\n                               popupBorderWidths;\n\n        const popupOffset = $el.offset();\n        const popupHeight = Math.floor(\n            $window.height() - popupOffset.top -\n            $el.getExtents('bm', 'tb'));\n\n        /*\n         * Set the new width and height.\n         *\n         * We're resetting the height back to \"auto\" so it's not forced to be\n         * too big, but cap around the screen boundary so it can't grow too\n         * large.\n         */\n        $el.css({\n            'height': 'auto',\n            'max-height': popupHeight,\n        });\n\n        if ($el.hasClass('-is-empty')) {\n            $el.css('width', 'auto');\n        } else {\n            /*\n             * Get the width of one of the integration tiles in the popup, so\n             * we can start to figure out how many we can fit on screen.\n             */\n            const tileWidth = $el\n                .find('.djblets-c-integration')\n                .filter(':first')\n                .outerWidth(true);\n            const winWidth = $window.width();\n            const availWidth = winWidth - popupOffset.left - scrollbarWidth -\n                               $el.getExtents('m', 'r');\n\n            let popupWidth = Math.max(Math.floor(availWidth / tileWidth), 1) *\n                             tileWidth + scrollbarWidth + popupBorderWidths;\n\n            $el.outerWidth(popupWidth);\n\n            /*\n             * Now that we have a width and height set, we might not actually\n             * be showing a scrollbar anymore. Find out how much extra space we\n             * now have here, and if it's not what we had before for the scroll\n             * bar, we can strip that out.\n             */\n            const newScrollbarWidth = el.offsetWidth -\n                                      el.clientWidth -\n                                      popupBorderWidths;\n\n            if (newScrollbarWidth === 0) {\n                popupWidth -= scrollbarWidth;\n                $el.outerWidth(popupWidth);\n            }\n\n            /*\n             * If the menu is off-screen (which might be due to a very small\n             * screen width), we'll need to shift the popup over a bit.\n             */\n            if (popupOffset.left + popupWidth > winWidth) {\n                $el.css('left', winWidth - popupWidth);\n            }\n        }\n\n        /*\n         * Wire up events to hide the popup when the document is clicked or\n         * the window resized.\n         */\n        $(document).one('click.djblets-integrations-popup',\n                        () => this.hide());\n        $(window).one('resize.djblets-integrations-popup',\n                      () => this.hide());\n    },\n\n    /**\n     * Hide the popup.\n     *\n     * This will hide the popup from the screen and disconnect all related\n     * events.\n     */\n    hide() {\n        this.$el.hide();\n\n        $(document).off('click.djblets-integrations-popup');\n        $(window).off('resize.djblets-integrations-popup');\n    },\n});\n"]}