{"version":3,"sources":["tableViewTests.es6.js"],"names":[],"mappings":";;AAAA,MAAM,qCAAN,EAA6C,YAAW;AACpD,aAAS,cAAT,EAAyB,YAAW;AAChC,YAAI,mBAAJ;AACA,YAAI,aAAJ;AACA,YAAI,kBAAJ;;AAEA,mBAAW,YAAW;AAClB,yBAAa,IAAI,SAAS,UAAb,CACT,CACI,EAAC,MAAM,QAAP,EADJ,EAEI,EAAC,MAAM,QAAP,EAFJ,EAGI,EAAC,MAAM,QAAP,EAHJ,CADS,EAKN;AACC,uBAAO,QAAQ,MAAR,CAAe;AADvB,aALM,CAAb;;AAUA,mBAAO,IAAI,QAAQ,MAAR,CAAe,IAAnB,CAAwB,EAAxB,EAA4B;AAC/B,4BAAY;AADmB,aAA5B,CAAP;;AAIA,wBAAY,IAAI,QAAQ,MAAR,CAAe,SAAnB,CAA6B;AACrC,uBAAO;AAD8B,aAA7B,CAAZ;AAGA,sBAAU,MAAV;AACH,SAnBD;;AAqBA,WAAG,WAAH,EAAgB,YAAW;AACvB,gBAAM,QAAQ,UAAU,CAAV,CAAY,IAAZ,CAAd;AACA,mBAAO,MAAM,MAAb,EAAqB,IAArB,CAA0B,CAA1B;AACA,mBAAO,MAAM,EAAN,CAAS,CAAT,EAAY,IAAZ,GAAmB,KAAnB,EAAP,EAAmC,IAAnC,CAAwC,QAAxC;AACA,mBAAO,MAAM,EAAN,CAAS,CAAT,EAAY,IAAZ,GAAmB,KAAnB,EAAP,EAAmC,IAAnC,CAAwC,QAAxC;AACA,mBAAO,MAAM,EAAN,CAAS,CAAT,EAAY,IAAZ,GAAmB,KAAnB,EAAP,EAAmC,IAAnC,CAAwC,QAAxC;AACH,SAND;;AAQA,WAAG,QAAH,EAAa,YAAW;AACpB,uBAAW,GAAX,CAAe;AACX,sBAAM;AADK,aAAf;;AAIA,gBAAM,QAAQ,UAAU,CAAV,CAAY,IAAZ,CAAd;AACA,mBAAO,MAAM,MAAb,EAAqB,IAArB,CAA0B,CAA1B;AACA,mBAAO,MAAM,EAAN,CAAS,CAAT,EAAY,IAAZ,GAAmB,KAAnB,EAAP,EAAmC,IAAnC,CAAwC,QAAxC;AACH,SARD;;AAUA,WAAG,WAAH,EAAgB,YAAW;AACvB,uBAAW,MAAX,CAAkB,WAAW,EAAX,CAAc,CAAd,CAAlB;;AAEA,gBAAM,QAAQ,UAAU,CAAV,CAAY,IAAZ,CAAd;AACA,mBAAO,MAAM,MAAb,EAAqB,IAArB,CAA0B,CAA1B;AACA,mBAAO,MAAM,EAAN,CAAS,CAAT,EAAY,IAAZ,GAAmB,KAAnB,EAAP,EAAmC,IAAnC,CAAwC,QAAxC;AACH,SAND;;AAQA,WAAG,UAAH,EAAe,YAAW;AACtB,uBAAW,KAAX,CAAiB,CACb,EAAC,MAAM,KAAP,EADa,EAEb,EAAC,MAAM,KAAP,EAFa,CAAjB;;AAKA,gBAAM,QAAQ,UAAU,CAAV,CAAY,IAAZ,CAAd;AACA,mBAAO,MAAM,MAAb,EAAqB,IAArB,CAA0B,CAA1B;AACA,mBAAO,MAAM,EAAN,CAAS,CAAT,EAAY,IAAZ,GAAmB,KAAnB,EAAP,EAAmC,IAAnC,CAAwC,KAAxC;AACA,mBAAO,MAAM,EAAN,CAAS,CAAT,EAAY,IAAZ,GAAmB,KAAnB,EAAP,EAAmC,IAAnC,CAAwC,KAAxC;AACH,SAVD;AAWH,KA/DD;AAgEH,CAjED","file":"tableViewTests.js","sourcesContent":["suite('djblets/configForms/views/TableView', function() {\n    describe('Manages rows', function() {\n        let collection;\n        let list;\n        let tableView;\n\n        beforeEach(function() {\n            collection = new Backbone.Collection(\n                [\n                    {text: 'Item 1'},\n                    {text: 'Item 2'},\n                    {text: 'Item 3'},\n                ], {\n                    model: Djblets.Config.ListItem,\n                }\n            );\n\n            list = new Djblets.Config.List({}, {\n                collection: collection,\n            });\n\n            tableView = new Djblets.Config.TableView({\n                model: list,\n            });\n            tableView.render();\n        });\n\n        it('On render', function() {\n            const $rows = tableView.$('tr');\n            expect($rows.length).toBe(3);\n            expect($rows.eq(0).text().strip()).toBe('Item 1');\n            expect($rows.eq(1).text().strip()).toBe('Item 2');\n            expect($rows.eq(2).text().strip()).toBe('Item 3');\n        });\n\n        it('On add', function() {\n            collection.add({\n                text: 'Item 4',\n            });\n\n            const $rows = tableView.$('tr');\n            expect($rows.length).toBe(4);\n            expect($rows.eq(3).text().strip()).toBe('Item 4');\n        });\n\n        it('On remove', function() {\n            collection.remove(collection.at(0));\n\n            const $rows = tableView.$('tr');\n            expect($rows.length).toBe(2);\n            expect($rows.eq(0).text().strip()).toBe('Item 2');\n        });\n\n        it('On reset', function() {\n            collection.reset([\n                {text: 'Foo'},\n                {text: 'Bar'},\n            ]);\n\n            const $rows = tableView.$('tr');\n            expect($rows.length).toBe(2);\n            expect($rows.eq(0).text().strip()).toBe('Foo');\n            expect($rows.eq(1).text().strip()).toBe('Bar');\n        });\n    });\n});\n"]}