{"version":3,"sources":["listItemView.es6.js"],"names":[],"mappings":"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","file":"listItemView.js","sourcesContent":["/**\n * Display a list item for a config page.\n *\n * The list item will show information on the item and any actions that can\n * be invoked.\n *\n * By default, this will show the text from the ListItem model, linking it\n * if the model has an editURL attribute. This can be customized by subclasses\n * by overriding `template`.\n */\nDjblets.Config.ListItemView = Backbone.View.extend({\n    tagName: 'li',\n    className: 'djblets-c-config-forms-list__item',\n    iconBaseClassName: 'djblets-icon',\n\n    /**\n     * A mapping of item states to CSS classes.\n     *\n     * Subclasses can extend this to provide custom CSS classes, or support\n     * custom item states.\n     */\n    itemStateClasses: {\n        disabled: '-is-disabled',\n        enabled: '-is-enabled',\n        error: '-has-error',\n    },\n\n    actionHandlers: {},\n\n    template: _.template(dedent`\n        <% if (editURL) { %>\n        <a href=\"<%- editURL %>\"><%- text %></a>\n        <% } else { %>\n        <%- text %>\n        <% } %>\n    `),\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        this.listenTo(this.model, 'actionsChanged', this.render);\n        this.listenTo(this.model, 'request', this.showSpinner);\n        this.listenTo(this.model, 'sync', this.hideSpinner);\n        this.listenTo(this.model, 'destroy', this.remove);\n\n        this.$spinnerParent = null;\n        this.$spinner = null;\n    },\n\n    /**\n     * Render the view.\n     *\n     * This will be called every time the list of actions change for\n     * the item.\n     *\n     * Returns:\n     *     Djblets.Config.ListItemView:\n     *     This view.\n     */\n    render() {\n        const model = this.model;\n\n        this.$el\n            .empty()\n            .append(this.template(_.defaults(\n                model.attributes,\n                this.getRenderContext()\n            )));\n\n        this._$itemState =\n            this.$('.djblets-c-config-forms-list__item-state');\n\n        this.listenTo(model, 'change:itemState', this._onItemStateChanged);\n        this._onItemStateChanged();\n\n        this.addActions(this.getActionsParent());\n\n        return this;\n    },\n\n    /**\n     * Return additional render context.\n     *\n     * By default this returns an empty object. Subclasses can use this to\n     * provide additional values to :js:attr:`template` when it is rendered.\n     *\n     * Returns:\n     *     object:\n     *     Additional rendering context for the template.\n     */\n    getRenderContext() {\n        return {};\n    },\n\n    /**\n     * Remove the item.\n     *\n     * This will fade out the item, and then remove it from view.\n     */\n    remove() {\n        this.$el.fadeOut('normal',\n                         () => Backbone.View.prototype.remove.call(this));\n    },\n\n    /**\n     * Return the container for the actions.\n     *\n     * This defaults to being this element, but it can be overridden to\n     * return a more specific element.\n     *\n     * Returns:\n     *     jQuery:\n     *     The container for the actions.\n     */\n    getActionsParent() {\n        return this.$el;\n    },\n\n    /**\n     * Display a spinner on the item.\n     *\n     * This can be used to show that the item is being loaded from the\n     * server.\n     */\n    showSpinner() {\n        if (this.$spinner) {\n            return;\n        }\n\n        this.$el.attr('aria-busy', 'true');\n        this.$spinner = $('<span>')\n            .addClass('djblets-o-spinner')\n            .attr('aria-hidden', 'true')\n            .prependTo(this.$spinnerParent)\n            .hide()\n            .css('visibility', 'visible')\n            .fadeIn();\n    },\n\n    /**\n     * Hide the currently visible spinner.\n     */\n    hideSpinner() {\n        if (!this.$spinner) {\n            return;\n        }\n\n        /*\n         * The slow fadeout does two things:\n         *\n         * 1) It prevents the spinner from disappearing too quickly\n         *    (in combination with the fadeIn above), in case the operation\n         *    is really fast, giving some feedback that something actually\n         *    happened.\n         *\n         * 2) By fading out, it doesn't look like it just simply stops.\n         *    Helps provide a sense of completion.\n         */\n        this.$spinner.fadeOut('slow', () => {\n            this.$spinner.remove();\n            this.$spinner = null;\n        });\n\n        this.$el.removeAttr('aria-busy');\n    },\n\n    /**\n     * Add all registered actions to the view.\n     *\n     * Args:\n     *     $parentEl (jQuery):\n     *         The parent element to add the actions to.\n     */\n    addActions($parentEl) {\n        const $actions = $('<span>')\n            .addClass('djblets-c-config-forms-list__item-actions');\n\n        this.model.actions.forEach(action => {\n            const $action = this._buildActionEl(action)\n                .appendTo($actions);\n\n            if (action.children) {\n                if (action.label) {\n                    $action.append(' &#9662;');\n                }\n\n                /*\n                 * Show the dropdown after we let this event propagate.\n                 */\n                $action.click(() => _.defer(\n                    () => this._showActionDropdown(action, $action)\n                ));\n            }\n        });\n\n        this.$spinnerParent = $actions;\n\n        $actions.prependTo($parentEl);\n    },\n\n    /**\n     * Show a dropdown for a menu action.\n     *\n     * Args:\n     *     action (object):\n     *         The action to show the dropdown for. See\n     *         :js:class:`Djblets.Config.ListItem`. for a list of attributes.\n     *\n     *     $action (jQuery):\n     *         The element that represents the action.\n     */\n    _showActionDropdown(action, $action) {\n        const actionPos = $action.position();\n        const $menu = $('<div/>')\n            .css({\n                minWidth: $action.outerWidth(),\n                position: 'absolute',\n            })\n            .addClass('djblets-c-config-forms-popup-menu')\n            .click(e => e.stopPropagation());\n        const $items = $('<ul/>')\n            .addClass('djblets-c-config-forms-popup-menu__items')\n            .appendTo($menu);\n        const actionLeft = actionPos.left + $action.getExtents('m', 'l');\n\n        action.children.forEach(\n            childAction => $('<li/>')\n                .addClass('djblets-c-config-forms-popup-menu__item ' +\n                          `config-forms-list-action-row-${childAction.id}`)\n                .append(this._buildActionEl(childAction))\n                .appendTo($items)\n        );\n\n        this.trigger('actionMenuPopUp', {\n            action: action,\n            $action: $action,\n            $menu: $menu,\n        });\n\n        $menu.appendTo($action.parent());\n\n        const winWidth = $(window).width();\n        const paneWidth = $menu.width();\n\n        $menu.move(($action.offset().left + paneWidth > winWidth\n                    ? actionLeft + $action.innerWidth() - paneWidth\n                    : actionLeft),\n                   actionPos.top + $action.outerHeight(),\n                   'absolute');\n\n        /* Any click outside this dropdown should close it. */\n        $(document).one('click', () => {\n            this.trigger('actionMenuPopDown', {\n                action: action,\n                $action: $action,\n                $menu: $menu,\n            });\n\n            $menu.remove();\n        });\n    },\n\n    /**\n     * Build the element for an action.\n     *\n     * If the action's type is ``'checkbox'``, a checkbox will be shown.\n     * Otherwise, the action will be shown as a button.\n     *\n     * Args:\n     *     action (object):\n     *         The action to show the dropdown for. See\n     *         :js:class:`Djblets.Config.ListItem` for a list of attributes.\n     */\n    _buildActionEl(action) {\n        const enabled = (action.enabled !== false);\n        const actionHandlerName = (enabled\n                                   ? this.actionHandlers[action.id]\n                                   : null);\n        const isCheckbox = (action.type === 'checkbox');\n        const isRadio = (action.type === 'radio');\n\n        let $action;\n        let $result;\n\n        if (isCheckbox || isRadio) {\n            const inputID = _.uniqueId('action_' + action.type);\n            $action = $('<input/>')\n                .attr({\n                    name: action.name,\n                    type: action.type,\n                    id: inputID\n                });\n            const $label = $('<label>')\n                .attr('for', inputID)\n                .text(action.label);\n\n            if (action.id) {\n                $label.addClass(`config-forms-list-action-label-${action.id}`);\n            }\n\n            $result = $('<span/>')\n                .append($action)\n                .append($label);\n\n            if (action.propName) {\n                if (isCheckbox) {\n                    $action.bindProperty('checked', this.model,\n                                         action.propName);\n                } else if (isRadio) {\n                    $action.bindProperty(\n                        'checked', this.model, action.propName, {\n                            radioValue: action.radioValue\n                        }\n                    );\n                }\n            }\n\n            if (action.enabledPropName) {\n                $action.bindProperty(\n                    'disabled', this.model, action.enabledPropName,\n                    {\n                        inverse: (action.enabledPropInverse !== true)\n                    });\n            }\n\n            if (actionHandlerName) {\n                const actionHandler = _.debounce(\n                    _.bind(this[actionHandlerName], this),\n                    50,\n                    true\n                );\n\n                $action.change(actionHandler);\n\n                if (isRadio && action.dispatchOnClick) {\n                    $action.click(actionHandler);\n                }\n            }\n        } else {\n            if (action.url) {\n                $action = $('<a class=\"btn\" role=\"button\">')\n                    .attr('href', action.url);\n            } else {\n                $action = $('<button type=\"button\">');\n            }\n\n            $result = $action;\n\n            if (action.label) {\n                $action.text(action.label);\n            }\n\n            if (action.ariaLabel) {\n                $action.attr('aria-label', action.ariaLabel);\n            }\n\n            if (action.iconName) {\n                $action.prepend($('<span>')\n                    .addClass(this.iconBaseClassName)\n                    .addClass(`${this.iconBaseClassName}-${action.iconName}`));\n            }\n\n            if (actionHandlerName) {\n                $action.click(evt => {\n                    evt.preventDefault();\n                    evt.stopPropagation();\n\n                    this._onActionButtonClicked(evt, actionHandlerName,\n                                                $action);\n                });\n            }\n        }\n\n        $action.addClass('djblets-c-config-forms-list__item-action');\n\n        if (action.id) {\n            $action.addClass(`config-forms-list-action-${action.id}`);\n        }\n\n        if (action.danger) {\n            $action.addClass('-is-danger');\n        }\n\n        if (action.primary) {\n            $action.addClass('-is-primary');\n        }\n\n        if (!enabled) {\n            $action.prop('disabled', true);\n        }\n\n        return $result;\n    },\n\n    /**\n     * Handle changes to the item state.\n     *\n     * This will update the CSS class used on the item and any relevant text\n     * contained within the item to reflect the current state.\n     */\n    _onItemStateChanged() {\n        const model = this.model;\n        const oldItemState = model.previous('itemState');\n        const itemState = model.get('itemState');\n\n        if (oldItemState) {\n            this.$el.removeClass(this.itemStateClasses[oldItemState]);\n        }\n\n        if (itemState) {\n            this.$el.addClass(this.itemStateClasses[itemState]);\n\n            /*\n             * Note that if we didn't find an element in the template for\n             * this before, this is basically a no-op.\n             */\n            this._$itemState.text(model.itemStateTexts[itemState]);\n        }\n    },\n\n    /**\n     * Handle clicks on a list item action button.\n     *\n     * This will invoke the click handler on the view. If that handler\n     * returns a Promise, this will disable the button, replace its contents\n     * with a spinner, and then wait for the promise to resolve before\n     * setting the button's contents and enabled states back to normal.\n     *\n     * Args:\n     *     evt (jQuery.Event):\n     *         The click event on the button.\n     *\n     *     actionHandlerName (string):\n     *         The name of the action handler function to call.\n     *\n     *     $action (jQuery):\n     *         The action button that was clicked.\n     */\n    _onActionButtonClicked(evt, actionHandlerName, $action) {\n        const promise = this[actionHandlerName].call(this, evt);\n\n        if (promise && typeof promise.then === 'function') {\n            $action.prop('disabled', true);\n\n            const childrenHTML = $action.html();\n            $action.empty();\n\n            const $spinner = $('<span class=\"djblets-o-spinner\">')\n                .appendTo($action);\n\n            /*\n             * This is a promise, so there's an async operation\n             * going on. Set up the spinner.\n             */\n            promise.finally(() => {\n                $spinner.remove();\n                $action.html(childrenHTML);\n                $action.prop('disabled', false);\n            });\n        }\n    },\n});\n"]}