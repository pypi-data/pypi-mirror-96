{"version":3,"sources":["listEditView.es6.js"],"names":[],"mappings":"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","file":"listEditView.js","sourcesContent":["(function() {\n\n\nconst entryTemplate = _.template(dedent`\n    <li class=\"djblets-c-list-edit-widget__entry\"\n        data-list-index=\"<%- index %>\">\n     <input type=\"text\"<%= inputAttrs %>>\n     <a href=\"#\" class=\"djblets-c-list-edit-widget__remove-item\"\n        role=\"button\" title=\"<%- removeText %>\">\n       <span class=\"fa fa-times\"></span>\n     </a>\n    </li>\n`);\n\n/**\n * A view for editing a list of elements.\n *\n * This is the JavaScript view for\n * :py:class:`djblets.forms.widgets.ListEditWidget`.\n */\nDjblets.Forms.ListEditView = Backbone.View.extend({\n    events: {\n        'click .djblets-c-list-edit-widget__add-item': '_addItem',\n        'click .djblets-c-list-edit-widget__remove-item': '_removeItem',\n        'blur .djblets-c-list-edit-widget__input': '_onBlur',\n    },\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         The view options.\n     *\n     * Option Args:\n     *     inputAttrs (string):\n     *         The attributes that should be added to each ``<input>`` element.\n     *\n     *     removeText (string):\n     *         The localized text for removing an item.\n     *\n     *     sep (string):\n     *         The list separator. It will be used to join the list of values\n     *         into a string.\n     */\n    initialize(options) {\n        this._inputAttrs = options.inputAttrs;\n        this._removeText = options.removeText;\n        this._sep = options.sep;\n        this._values = [];\n    },\n\n    /**\n     * Render the view.\n     *\n     * Since most of the view is rendered by Django, this just sets up some\n     * event listeners.\n     *\n     * Returns:\n     *     Djblets.Forms.ListEditView:\n     *     This view.\n     */\n    render() {\n        this.$el.data('djblets-list-edit-view', this);\n\n        this._$list = this.$el.children(\n            '.djblets-c-list-edit-widget__entries');\n        this._$list.find('.djblets-c-list-edit-widget__input')\n            .each((idx, el) => this._values.push($(el).val()));\n        this._$addBtn = this.$el.children(\n            '.djblets-c-list-edit-widget__add-item');\n        this._$hidden = this.$el.children(\n            '.djblets-c-list-edit-widget__value');\n\n        return this;\n    },\n\n    /**\n     * Add an item to the list.\n     *\n     * Args:\n     *     e (Event):\n     *         The click event that triggered this event handler.\n     */\n    _addItem(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const $entry = $(entryTemplate({\n                index: this._values.length,\n                inputAttrs: this._inputAttrs,\n                removeText: this._removeText,\n            }))\n            .insertBefore(this._$addBtn);\n\n        $entry\n            .find('.djblets-c-list-edit-widget__add-item')\n                .on('click', e => this._addItem(e))\n            .end()\n            .find('.djblets-c-list-edit-widget__input')\n                .on('change', e => this._onBlur(e))\n            .end();\n\n        this._values.push('');\n    },\n\n    /**\n     * Remove an item.\n     *\n     * When there is only a single item in the list, we clear it instead of\n     * removing it so there is always at least one ``<input>`` element and\n     * value in the list.\n     *\n     * Args:\n     *     e (Event):\n     *         The click event that triggered this event handler.\n     */\n    _removeItem(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const $target = $(e.target);\n        const $entry = $target.closest('.djblets-c-list-edit-widget__entry');\n        const index = $entry.attr('data-list-index');\n\n        if (this._values.length > 1) {\n            $entry.remove();\n            this._values.splice(index, 1);\n            this._$list.find('.djblets-c-list-edit-widget__entry')\n                .each((idx, el) => $(el).attr('data-list-index', idx));\n        } else {\n            this._values[index] = '';\n            $target.siblings('.djblets-c-list-edit-widget__input').val('');\n        }\n\n        this._$hidden\n            .val(this._values.filter(v => v.length > 0).join(this._sep));\n    },\n\n    /**\n     * Update the internal values when a field changes.\n     *\n     * Args:\n     *     e (Event):\n     *         The blur event.\n     */\n    _onBlur(e) {\n        const $target = $(e.target);\n        const index = $target\n            .closest('.djblets-c-list-edit-widget__entry')\n            .attr('data-list-index');\n\n        this._values[index] = $target.val();\n        this._$hidden\n            .val(this._values.filter(v => v.length > 0).join(this._sep));\n    },\n});\n\n\n})();\n"]}