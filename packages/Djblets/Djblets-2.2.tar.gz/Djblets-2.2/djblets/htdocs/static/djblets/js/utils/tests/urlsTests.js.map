{"version":3,"sources":["urlsTests.es6.js"],"names":[],"mappings":"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","file":"urlsTests.js","sourcesContent":["suite('djblets/utils/urls', function() {\n    describe('buildURL', function() {\n        it('With just baseURL', function() {\n            const url = Djblets.buildURL({\n                baseURL: 'https://example.com/abc123/',\n            });\n\n            expect(url).toBe('https://example.com/abc123/');\n        });\n\n        describe('With anchor', function() {\n            it('With leading \"#\"', function() {\n                const url = Djblets.buildURL({\n                    baseURL: 'https://example.com/abc123/',\n                    anchor: '#my-anchor',\n                });\n\n                expect(url).toBe('https://example.com/abc123/#my-anchor');\n            });\n\n            it('Without leading \"#\"', function() {\n                const url = Djblets.buildURL({\n                    baseURL: 'https://example.com/abc123/',\n                    anchor: 'my-anchor',\n                });\n\n                expect(url).toBe('https://example.com/abc123/#my-anchor');\n            });\n        });\n\n        describe('With queryData', function() {\n            describe('As string', function() {\n                it('With leading \"?\"', function() {\n                    const url = Djblets.buildURL({\n                        baseURL: 'https://example.com/abc123/',\n                        queryData: '?a=b&c=d',\n                    });\n\n                    expect(url).toBe('https://example.com/abc123/?a=b&c=d');\n                });\n\n                it('Without leading \"?\"', function() {\n                    const url = Djblets.buildURL({\n                        baseURL: 'https://example.com/abc123/',\n                        queryData: 'a=b&c=d',\n                    });\n\n                    expect(url).toBe('https://example.com/abc123/?a=b&c=d');\n                });\n\n                it('Empty', function() {\n                    const url = Djblets.buildURL({\n                        baseURL: 'https://example.com/abc123/',\n                        queryData: '',\n                    });\n\n                    expect(url).toBe('https://example.com/abc123/');\n                });\n            });\n\n            describe('As object', function() {\n                it('With value', function() {\n                    const url = Djblets.buildURL({\n                        baseURL: 'https://example.com/abc123/',\n                        queryData: {\n                            a: 'b',\n                        },\n                    });\n\n                    expect(url).toBe('https://example.com/abc123/?a=b');\n                });\n\n                it('Empty', function() {\n                    const url = Djblets.buildURL({\n                        baseURL: 'https://example.com/abc123/',\n                        queryData: {},\n                    });\n\n                    expect(url).toBe('https://example.com/abc123/');\n                });\n            });\n\n            describe('As array', function() {\n                it('With value', function() {\n                    const url = Djblets.buildURL({\n                        baseURL: 'https://example.com/abc123/',\n                        queryData: [\n                            {\n                                name: 'a',\n                                value: 'b',\n                            },\n                            {\n                                name: 'c',\n                                value: 'd',\n                            },\n                        ],\n                    });\n\n                    expect(url).toBe('https://example.com/abc123/?a=b&c=d');\n                });\n\n                it('Empty', function() {\n                    const url = Djblets.buildURL({\n                        baseURL: 'https://example.com/abc123/',\n                        queryData: [],\n                    });\n\n                    expect(url).toBe('https://example.com/abc123/');\n                });\n            });\n        });\n\n        it('With all options', function() {\n            const url = Djblets.buildURL({\n                baseURL: 'https://example.com/abc123/',\n                queryData: 'a=b&c=d',\n                anchor: 'my-anchor',\n            });\n\n            expect(url).toBe(\n                'https://example.com/abc123/?a=b&c=d#my-anchor');\n        });\n    });\n\n    describe('parseQueryString', function() {\n        it('Empty query string', function() {\n            expect(Djblets.parseQueryString('')).toEqual({});\n        });\n\n        it('Basic query strings', function() {\n            expect(Djblets.parseQueryString('?a=b&c=d&e=f')).toEqual({\n                a: 'b',\n                c: 'd',\n                e: 'f',\n            });\n        });\n\n        it('Keys without values', function() {\n            expect(Djblets.parseQueryString('?abc=def&ghi')).toEqual({\n                abc: 'def',\n                ghi: null,\n            });\n        });\n\n        describe('Multiple values for keys', function() {\n            it('With allowMultiValue=true', function() {\n                const queryString =\n                    Djblets.parseQueryString('?a=1&a=2&a=3&b=4', {\n                        allowMultiValue: true,\n                    });\n\n                expect(queryString).toEqual({\n                    a: ['1', '2', '3'],\n                    b: '4',\n                });\n            });\n\n            it('Without allowMultiValue=true', function() {\n                expect(Djblets.parseQueryString('?a=1&a=2&a=3&b=4')).toEqual({\n                    a: '3',\n                    b: '4',\n                });\n            });\n        });\n    });\n});\n"]}