{"version":3,"sources":["conditionSetViewTests.es6.js"],"names":[],"mappings":"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","file":"conditionSetViewTests.js","sourcesContent":["suite('djblets/forms/views/ConditionValueFormFieldView', function() {\n    function makeValueField(html) {\n        return {\n            model: {\n                className: 'Djblets.Forms.ConditionValueField',\n                data: {\n                    fieldHTML: html\n                }\n            },\n            view: {\n                className: 'Djblets.Forms.ConditionValueFormFieldView'\n            }\n        };\n    }\n\n    function setupConditionSetView(conditionsData) {\n        const conditionsTemplate = _.template([\n            '<div class=\"conditions-field\">\\n',\n            ' <input type=\"hidden\" name=\"my_conditions_last_id\" />\\n',\n            ' <div class=\"conditions-field-mode\"></div>\\n',\n            ' <div class=\"conditions-field-rows-container\">\\n',\n            '  <ul class=\"conditions-field-rows\"></ul>\\n',\n            '  <a href=\"#\" class=\"conditions-field-add-condition\"></a>\\n',\n            ' </div>\\n',\n            '</div>'\n        ].join(''));\n\n        const conditionSetView = new Djblets.Forms.ConditionSetView({\n            el: $(conditionsTemplate()),\n            model: new Djblets.Forms.ConditionSet({\n                fieldName: 'my_conditions',\n                choicesData: [\n                    {\n                        id: 'my-choice-1',\n                        name: 'My Choice 1',\n                        valueField: makeValueField('<input type=\"text\" />'),\n                        operators: [\n                            {\n                                id: 'my-op-1',\n                                name: 'My Op 1',\n                                useValue: true\n                            },\n                            {\n                                id: 'my-op-2',\n                                name: 'My Op 2',\n                                useValue: true,\n                                valueField: makeValueField('<input type=\"number\" />')\n                            }\n                        ]\n                    },\n                    {\n                        id: 'my-choice-2',\n                        name: 'My Choice 2',\n                        valueField: makeValueField('<input type=\"email\" />'),\n                        operators: [\n                            {\n                                id: 'my-op-3',\n                                name: 'My Op 3',\n                                useValue: true\n                            },\n                            {\n                                id: 'my-op-4',\n                                name: 'My Op 4',\n                                useValue: true\n                            }\n                        ]\n                    }\n                ],\n                conditionsData: conditionsData\n            }, {\n                parse: true\n            })\n        });\n\n        conditionSetView.render();\n\n        return conditionSetView;\n    }\n\n    describe('Rendering', function() {\n        it('Loaded rows', function() {\n            const conditionSetView = setupConditionSetView([\n                {\n                    choiceID: 'my-choice-1',\n                    operatorID: 'my-op-1',\n                    value: '<test>',\n                    valid: true\n                },\n                {\n                    choiceID: 'my-choice-2',\n                    operatorID: 'my-op-4',\n                    value: 42,\n                    valid: true\n                }\n            ]);\n\n            const $rows = conditionSetView.$('.conditions-field-row');\n            expect($rows.length).toBe(2);\n\n            const $lastID =\n                conditionSetView.$('input[name=my_conditions_last_id]');\n            expect($lastID.val()).toBe('1');\n\n            /* Check the first row. */\n            let $row = $rows.eq(0);\n            let $choice = $row.find('.conditions-field-choice');\n            expect($choice.html()).toBe([\n                '<select name=\"my_conditions_choice[0]\">',\n                '<option value=\"my-choice-1\">My Choice 1</option>',\n                '<option value=\"my-choice-2\">My Choice 2</option>',\n                '</select>'\n            ].join(''));\n            expect($choice.children('select').val()).toBe('my-choice-1');\n\n            let $operator = $row.find('.conditions-field-operator');\n            expect($operator.html()).toBe([\n                '<select name=\"my_conditions_operator[0]\">',\n                '<option value=\"my-op-1\">My Op 1</option>',\n                '<option value=\"my-op-2\">My Op 2</option>',\n                '</select>'\n            ].join(''));\n            expect($operator.children('select').val()).toBe('my-op-1');\n\n            let $value = $row.find('.conditions-field-value');\n            let $input = $value.find('input');\n            expect($input.parent().prop('tagName')).toBe('SPAN');\n            expect($input.attr('type')).toBe('text');\n            expect($input.attr('name')).toBe('my_conditions_value[0]');\n            expect($input.val()).toBe('<test>');\n\n            /* Check the second row. */\n            $row = $rows.eq(1);\n            $choice = $row.find('.conditions-field-choice');\n            expect($choice.html()).toBe([\n                '<select name=\"my_conditions_choice[1]\">',\n                '<option value=\"my-choice-1\">My Choice 1</option>',\n                '<option value=\"my-choice-2\">My Choice 2</option>',\n                '</select>'\n            ].join(''));\n            expect($choice.children('select').val()).toBe('my-choice-2');\n\n            $operator = $row.find('.conditions-field-operator');\n            expect($operator.html()).toBe([\n                '<select name=\"my_conditions_operator[1]\">',\n                '<option value=\"my-op-3\">My Op 3</option>',\n                '<option value=\"my-op-4\">My Op 4</option>',\n                '</select>'\n            ].join(''));\n            expect($operator.children('select').val()).toBe('my-op-4');\n\n            $value = $row.find('.conditions-field-value');\n            $input = $value.find('input');\n            expect($input.parent().prop('tagName')).toBe('SPAN');\n            expect($input.attr('type')).toBe('email');\n            expect($input.attr('name')).toBe('my_conditions_value[1]');\n            expect($input.val()).toBe('42');\n        });\n\n        it('Loaded rows with errors', function() {\n            const conditionSetView = setupConditionSetView([\n                {\n                    choiceID: 'my-choice-1',\n                    operatorID: 'my-op-1',\n                    value: '<test>',\n                    error: 'This is an <error>.',\n                    valid: true\n                }\n            ]);\n\n            const $rows = conditionSetView.$('.conditions-field-row');\n            expect($rows.length).toBe(1);\n\n            const $lastID =\n                conditionSetView.$('input[name=my_conditions_last_id]');\n            expect($lastID.val()).toBe('0');\n\n            const $row = $rows.eq(0);\n            const $error = $row.find('.error-list li');\n            expect($error.length).toBe(1);\n            expect($error.html()).toBe('This is an &lt;error&gt;.');\n        });\n    });\n\n    describe('Actions', function() {\n        it('Add a new condition', function() {\n            const conditionSetView = setupConditionSetView();\n\n            let $rows = conditionSetView.$('.conditions-field-row');\n            expect($rows.length).toBe(0);\n\n            const $lastID =\n                conditionSetView.$('input[name=my_conditions_last_id]');\n            expect($lastID.val()).toBe('');\n\n            spyOn(conditionSetView.model, 'addNewCondition').and.callThrough();\n            conditionSetView.$('.conditions-field-add-condition').click();\n            expect(conditionSetView.model.addNewCondition).toHaveBeenCalled();\n\n            $rows = conditionSetView.$('.conditions-field-row');\n            expect($rows.length).toBe(1);\n            expect($lastID.val()).toBe('0');\n\n            const $row = $rows.eq(0);\n            const $choice = $row.find('.conditions-field-choice');\n            expect($choice.html()).toBe([\n                '<select name=\"my_conditions_choice[0]\">',\n                '<option value=\"my-choice-1\">My Choice 1</option>',\n                '<option value=\"my-choice-2\">My Choice 2</option>',\n                '</select>'\n            ].join(''));\n            expect($choice.children('select').val()).toBe('my-choice-1');\n\n            const $operator = $row.find('.conditions-field-operator');\n            expect($operator.html()).toBe([\n                '<select name=\"my_conditions_operator[0]\">',\n                '<option value=\"my-op-1\">My Op 1</option>',\n                '<option value=\"my-op-2\">My Op 2</option>',\n                '</select>'\n            ].join(''));\n            expect($operator.children('select').val()).toBe('my-op-1');\n\n            const $value = $row.find('.conditions-field-value');\n            const $input = $value.find('input');\n            expect($input.parent().prop('tagName')).toBe('SPAN');\n            expect($input.attr('type')).toBe('text');\n            expect($input.attr('name')).toBe('my_conditions_value[0]');\n            expect($input.val()).toBe('');\n        });\n\n        it('Delete a condition', function() {\n            const conditionSetView = setupConditionSetView([\n                {\n                    choiceID: 'my-choice-1',\n                    operatorID: 'my-op-1',\n                    value: '<test>',\n                    valid: true\n                }\n            ]);\n\n            let $rows = conditionSetView.$('.conditions-field-row');\n            expect(conditionSetView.model.conditions.length).toBe(1);\n            expect($rows.length).toBe(1);\n\n            const $lastID =\n                conditionSetView.$('input[name=my_conditions_last_id]');\n            expect($lastID.val()).toBe('0');\n\n            const condition = conditionSetView.model.conditions.at(0);\n\n            spyOn(condition, 'destroy').and.callThrough();\n            $rows.eq(0).find('.conditions-field-row-delete').click();\n            expect(condition.destroy).toHaveBeenCalled();\n\n            $rows = conditionSetView.$('.conditions-field-row');\n            expect(conditionSetView.model.conditions.length).toBe(0);\n            expect($rows.length).toBe(0);\n\n            /*\n             * The last ID remains the same during deletions. It's not a row\n             * counter.\n             */\n            expect($lastID.val()).toBe('0');\n        });\n\n        it('Changing a choice updates model', function() {\n            const conditionSetView = setupConditionSetView([\n                {\n                    choiceID: 'my-choice-1',\n                    operatorID: 'my-op-1',\n                    value: '<test>',\n                    valid: true\n                }\n            ]);\n\n            const $rows = conditionSetView.$('.conditions-field-row');\n            const condition = conditionSetView.model.conditions.at(0);\n\n            $rows.eq(0).find('.conditions-field-choice select')\n                .val('my-choice-2')\n                .trigger('change');\n\n            expect(condition.get('choice').id).toBe('my-choice-2');\n        });\n\n        it('Changing an operator updates model', function() {\n            const conditionSetView = setupConditionSetView([\n                {\n                    choiceID: 'my-choice-1',\n                    operatorID: 'my-op-1',\n                    value: '<test>',\n                    valid: true\n                }\n            ]);\n\n            const $rows = conditionSetView.$('.conditions-field-row');\n            const condition = conditionSetView.model.conditions.at(0);\n\n            $rows.eq(0).find('.conditions-field-operator select')\n                .val('my-op-2')\n                .trigger('change');\n\n            expect(condition.get('operator').id).toBe('my-op-2');\n        });\n    });\n\n    describe('Model events', function() {\n        let conditionSetView,\n            conditionSet,\n            condition,\n            $row,\n            $choice,\n            $operator,\n            $valueWrapper;\n\n        beforeEach(function() {\n            conditionSetView = setupConditionSetView([\n                {\n                    choiceID: 'my-choice-1',\n                    operatorID: 'my-op-1',\n                    value: '<test>',\n                    valid: true\n                }\n            ]);\n\n            conditionSet = conditionSetView.model;\n\n            condition = conditionSet.conditions.at(0);\n            $row = conditionSetView.$('.conditions-field-row').eq(0);\n            $choice = $row.find('.conditions-field-choice select');\n            $operator = $row.find('.conditions-field-operator select');\n            $valueWrapper = $row.find('.conditions-field-value');\n\n            const $input = $valueWrapper.find('input');\n            expect($input.attr('type')).toBe('text');\n            expect($input.val()).toBe('<test>');\n        });\n\n        describe('Choice changed', function() {\n            it('Updates UI state', function() {\n                condition.set('choice',\n                              conditionSet.choices.get('my-choice-2'));\n\n                expect($choice.val()).toBe('my-choice-2');\n                expect($operator.val()).toBe('my-op-3');\n\n                const $input = $valueWrapper.find('input');\n                expect($input.attr('type')).toBe('email');\n                expect($input.val()).toBe('');\n            });\n        });\n\n        describe('Operator changed', function() {\n            it('Updates UI state', function() {\n                const choice = conditionSet.choices.get('my-choice-1');\n                condition.set('operator', choice.operators.get('my-op-2'));\n\n                expect($choice.val()).toBe('my-choice-1');\n                expect($operator.val()).toBe('my-op-2');\n\n                const $input = $valueWrapper.find('input');\n                expect($input.attr('type')).toBe('number');\n                expect($input.val()).toBe('');\n            });\n\n            it('Retains value if valueField remains', function() {\n                const choice = conditionSet.choices.get('my-choice-2');\n\n                /* Set the initial conditions. */\n                condition.set('choice', choice);\n                $valueWrapper.find('input').val('42');\n                expect($operator.val()).toBe('my-op-3');\n\n                /* Trigger the operator change. */\n                condition.set('operator', choice.operators.get('my-op-4'));\n\n                expect($valueWrapper.find('input').val()).toBe('42');\n            });\n        });\n\n        describe('Value changed', function() {\n            it('Updated UI state', function() {\n                condition.set('value', 'new-value');\n\n                expect($valueWrapper.find('input').val()).toBe('new-value');\n            });\n        });\n    });\n});\n"]}