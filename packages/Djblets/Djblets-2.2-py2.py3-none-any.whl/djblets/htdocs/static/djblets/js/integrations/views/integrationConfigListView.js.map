{"version":3,"sources":["integrationConfigListView.es6.js"],"names":[],"mappings":"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","file":"integrationConfigListView.js","sourcesContent":["(function() {\n\n\n/**\n * List item for a configuration.\n *\n * This stores basic display, actions, and API information for the\n * configuration.\n */\nconst IntegrationConfigItem = Djblets.Config.ListItem.extend({\n    defaults: _.defaults({\n        removeLabel: _`Delete`,\n        showRemove: true,\n    }, Djblets.Config.ListItem.prototype.defaults),\n\n    /**\n     * Return the API URL for the item.\n     *\n     * This is the same as the ``editURL`` attribute, and is used to\n     * perform HTTP DELETE requests.\n     *\n     * Returns:\n     *     string:\n     *     The URL to perform API operations on.\n     */\n    url() {\n        return this.get('editURL');\n    },\n\n    /**\n     * Return the attributes for this item from a provided payload.\n     *\n     * Args:\n     *     data (object):\n     *         The data for this item provided when constructing the\n     *         integrations page.\n     *\n     * Returns:\n     *     object:\n     *     The new attribute data from the item.\n     */\n    parse(data) {\n        return {\n            editURL: data.editURL,\n            id: data.id,\n            integrationID: data.integrationID,\n            itemState: data.enabled ? 'enabled' : 'disabled',\n            name: data.name,\n        };\n    },\n});\n\n\n/**\n * View for displaying information and actions for a configuration.\n *\n * This renders some basic information on the state of the configuration,\n * and provides actions for deleting configurations.\n */\nconst IntegrationConfigItemView = Djblets.Config.TableItemView.extend({\n    className:\n        'djblets-c-integration-config djblets-c-config-forms-list__item',\n\n    actionHandlers: {\n        'delete': '_onDeleteClicked',\n    },\n\n    template: _.template(dedent`\n        <td class=\"djblets-c-integration-config__name\">\n         <img src=\"<%- iconSrc %>\"\n              srcset=\"<%- iconSrcSet %>\"\n              width=\"32\" height=\"32\" alt=\"\">\n         <a href=\"<%- editURL %>\"><%- name %></a>\n        </td>\n        <td class=\"djblets-c-integration-config__integration-name\">\n         <%- integrationName %>\n        </td>\n        <td class=\"djblets-c-config-forms-list__item-state\"></td>\n        <td></td>\n    `),\n\n    /**\n     * Return context data for rendering the item's template.\n     *\n     * Returns:\n     *     object:\n     *     Context data for the render.\n     */\n    getRenderContext() {\n        const integrationID = this.model.get('integrationID');\n        const integration =\n            this.model.collection.options.integrationsMap[integrationID];\n\n        return {\n            iconSrc: integration.iconSrc,\n            iconSrcSet: integration.iconSrcSet,\n            integrationName: integration.name,\n        };\n    },\n\n    /**\n     * Handle the Delete action on the item.\n     *\n     * This will display a confirmation dialog, and then send an HTTP DELETE\n     * to remove the configuration.\n     */\n    _onDeleteClicked() {\n        $('<p>')\n            .text(_`\n                This integration will be permanently removed. This cannot\n                be undone.\n            `)\n            .modalBox({\n                title: _`Are you sure you want to delete this integration?`,\n                buttons: [\n                    $('<button>')\n                        .text(_`Cancel`),\n                    $('<button class=\"danger\">')\n                        .text(_`Delete Integration`)\n                        .click(() => this.model.destroy({\n                            beforeSend: xhr => {\n                                xhr.setRequestHeader(\n                                    'X-CSRFToken',\n                                    this.model.collection.options.csrfToken);\n                            },\n                        })),\n                ],\n            });\n    },\n});\n\n\n/**\n * View for managing the integration configurations list.\n *\n * This handles events for the Add Integration button and the resulting popup.\n */\nDjblets.IntegrationConfigListView = Backbone.View.extend({\n    events: {\n        'click .djblets-c-integration-configs__add': '_onAddIntegrationClicked',\n    },\n\n    addIntegrationPopupViewType: Djblets.AddIntegrationPopupView,\n    listItemsCollectionType: Djblets.Config.ListItems,\n    listItemType: IntegrationConfigItem,\n    listViewType: Djblets.Config.TableView,\n    listItemViewType: IntegrationConfigItemView,\n\n    /**\n     * Initialize the view.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the view.\n     *\n     * Option Args:\n     *     configs (Array):\n     *         An array of data on the configurations, in display order.\n     *\n     *     integrationIDs (Array):\n     *         An array of integration IDs, in display order.\n     *\n     *     integrationsMap (object):\n     *         A mapping of integration ID to information.\n     */\n    initialize(options) {\n        this._integrationIDs = options.integrationIDs;\n        this._integrationsMap = options.integrationsMap;\n\n        this.list = new Djblets.Config.List(\n            {},\n            {\n                collection: new this.listItemsCollectionType(\n                    options.configs,\n                    {\n                        csrfToken: options.csrfToken,\n                        integrationsMap: options.integrationsMap,\n                        model: this.listItemType,\n                        parse: true,\n                    }\n                ),\n            });\n\n        this._popup = null;\n    },\n\n    /**\n     * Render the view.\n     *\n     * Returns:\n     *     Djblets.IntegrationConfigListView:\n     *     This view, for chaining.\n     */\n    render() {\n        this.listView = new this.listViewType({\n            el: this.$('.djblets-c-config-forms-list'),\n            model: this.list,\n            ItemView: this.listItemViewType,\n        });\n        this.listView.render().$el\n            .removeAttr('aria-busy');\n\n        this._$listContainer = this.listView.$el.parent();\n\n        this.listenTo(this.list.collection, 'add remove',\n                      this._showOrHideConfigsList);\n        this._showOrHideConfigsList();\n\n        return this;\n    },\n\n    /**\n     * Show or hide the list of configurations.\n     *\n     * This will show the list's container if there's at least one item to\n     * show, or hide it if the list is empty.\n     */\n    _showOrHideConfigsList() {\n        if (this.list.collection.length > 0) {\n            this._$listContainer.show();\n        } else {\n            this._$listContainer.hide();\n        }\n    },\n\n    /**\n     * Handler for the Add Integration button.\n     *\n     * This will show the integrations list popup, allowing the user to choose\n     * an integration to add.\n     *\n     * The logic for showing the popup will align the popup with the left-hand\n     * side of the Add Integration button, and set the width to the maximum\n     * amount that will cleanly fit a row of tiles without obscuring any part\n     * of a tile or leaving extra space after a tile.\n     *\n     * Args:\n     *     e (jQuery.Event):\n     *         The click event.\n     */\n    _onAddIntegrationClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        if (!this._popup) {\n            const integrationIDs = this._integrationIDs;\n            const integrationsMap = this._integrationsMap;\n            const integrations = [];\n\n            for (let i = 0; i < integrationIDs.length; i++) {\n                integrations.push(integrationsMap[integrationIDs[i]]);\n            }\n\n            this._popup = new this.addIntegrationPopupViewType({\n                integrations: integrations,\n            });\n            this._popup.render().$el.appendTo(this.$el);\n        }\n\n        this._popup.show($(e.target));\n    },\n});\n\n\n})();\n"]}