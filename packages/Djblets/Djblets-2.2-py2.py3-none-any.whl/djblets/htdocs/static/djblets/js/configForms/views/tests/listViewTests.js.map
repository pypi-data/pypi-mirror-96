{"version":3,"sources":["listViewTests.es6.js"],"names":[],"mappings":";;AAAA,MAAM,oCAAN,EAA4C,YAAW;AACnD,aAAS,eAAT,EAA0B,YAAW;AACjC,YAAI,mBAAJ;AACA,YAAI,aAAJ;AACA,YAAI,iBAAJ;;AAEA,mBAAW,YAAW;AAClB,yBAAa,IAAI,SAAS,UAAb,CACT,CACI,EAAC,MAAM,QAAP,EADJ,EAEI,EAAC,MAAM,QAAP,EAFJ,EAGI,EAAC,MAAM,QAAP,EAHJ,CADS,EAKN;AACC,uBAAO,QAAQ,MAAR,CAAe;AADvB,aALM,CAAb;;AAUA,mBAAO,IAAI,QAAQ,MAAR,CAAe,IAAnB,CAAwB,EAAxB,EAA4B;AAC/B,4BAAY;AADmB,aAA5B,CAAP;;AAIA,uBAAW,IAAI,QAAQ,MAAR,CAAe,QAAnB,CAA4B;AACnC,uBAAO;AAD4B,aAA5B,CAAX;AAGA,qBAAS,MAAT;AACH,SAnBD;;AAqBA,WAAG,WAAH,EAAgB,YAAW;AACvB,gBAAM,SAAS,SAAS,CAAT,CAAW,IAAX,CAAf;AACA,mBAAO,OAAO,MAAd,EAAsB,IAAtB,CAA2B,CAA3B;AACA,mBAAO,OAAO,EAAP,CAAU,CAAV,EAAa,IAAb,GAAoB,KAApB,EAAP,EAAoC,IAApC,CAAyC,QAAzC;AACA,mBAAO,OAAO,EAAP,CAAU,CAAV,EAAa,IAAb,GAAoB,KAApB,EAAP,EAAoC,IAApC,CAAyC,QAAzC;AACA,mBAAO,OAAO,EAAP,CAAU,CAAV,EAAa,IAAb,GAAoB,KAApB,EAAP,EAAoC,IAApC,CAAyC,QAAzC;AACH,SAND;;AAQA,WAAG,QAAH,EAAa,YAAW;AACpB,uBAAW,GAAX,CAAe;AACX,sBAAM;AADK,aAAf;;AAIA,gBAAM,SAAS,SAAS,CAAT,CAAW,IAAX,CAAf;AACA,mBAAO,OAAO,MAAd,EAAsB,IAAtB,CAA2B,CAA3B;AACA,mBAAO,OAAO,EAAP,CAAU,CAAV,EAAa,IAAb,GAAoB,KAApB,EAAP,EAAoC,IAApC,CAAyC,QAAzC;AACH,SARD;;AAUA,WAAG,WAAH,EAAgB,YAAW;AACvB,uBAAW,MAAX,CAAkB,WAAW,EAAX,CAAc,CAAd,CAAlB;;AAEA,gBAAM,SAAS,SAAS,CAAT,CAAW,IAAX,CAAf;AACA,mBAAO,OAAO,MAAd,EAAsB,IAAtB,CAA2B,CAA3B;AACA,mBAAO,OAAO,EAAP,CAAU,CAAV,EAAa,IAAb,GAAoB,KAApB,EAAP,EAAoC,IAApC,CAAyC,QAAzC;AACH,SAND;;AAQA,WAAG,UAAH,EAAe,YAAW;AACtB,uBAAW,KAAX,CAAiB,CACb,EAAC,MAAM,KAAP,EADa,EAEb,EAAC,MAAM,KAAP,EAFa,CAAjB;;AAKA,gBAAM,SAAS,SAAS,CAAT,CAAW,IAAX,CAAf;AACA,mBAAO,OAAO,MAAd,EAAsB,IAAtB,CAA2B,CAA3B;AACA,mBAAO,OAAO,EAAP,CAAU,CAAV,EAAa,IAAb,GAAoB,KAApB,EAAP,EAAoC,IAApC,CAAyC,KAAzC;AACA,mBAAO,OAAO,EAAP,CAAU,CAAV,EAAa,IAAb,GAAoB,KAApB,EAAP,EAAoC,IAApC,CAAyC,KAAzC;AACH,SAVD;AAWH,KA/DD;AAgEH,CAjED","file":"listViewTests.js","sourcesContent":["suite('djblets/configForms/views/ListView', function() {\n    describe('Manages items', function() {\n        let collection;\n        let list;\n        let listView;\n\n        beforeEach(function() {\n            collection = new Backbone.Collection(\n                [\n                    {text: 'Item 1'},\n                    {text: 'Item 2'},\n                    {text: 'Item 3'},\n                ], {\n                    model: Djblets.Config.ListItem,\n                }\n            );\n\n            list = new Djblets.Config.List({}, {\n                collection: collection,\n            });\n\n            listView = new Djblets.Config.ListView({\n                model: list,\n            });\n            listView.render();\n        });\n\n        it('On render', function() {\n            const $items = listView.$('li');\n            expect($items.length).toBe(3);\n            expect($items.eq(0).text().strip()).toBe('Item 1');\n            expect($items.eq(1).text().strip()).toBe('Item 2');\n            expect($items.eq(2).text().strip()).toBe('Item 3');\n        });\n\n        it('On add', function() {\n            collection.add({\n                text: 'Item 4',\n            });\n\n            const $items = listView.$('li');\n            expect($items.length).toBe(4);\n            expect($items.eq(3).text().strip()).toBe('Item 4');\n        });\n\n        it('On remove', function() {\n            collection.remove(collection.at(0));\n\n            const $items = listView.$('li');\n            expect($items.length).toBe(2);\n            expect($items.eq(0).text().strip()).toBe('Item 2');\n        });\n\n        it('On reset', function() {\n            collection.reset([\n                {text: 'Foo'},\n                {text: 'Bar'},\n            ]);\n\n            const $items = listView.$('li');\n            expect($items.length).toBe(2);\n            expect($items.eq(0).text().strip()).toBe('Foo');\n            expect($items.eq(1).text().strip()).toBe('Bar');\n        });\n    });\n});\n"]}