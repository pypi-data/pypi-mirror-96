{"version":3,"sources":["listItemViewTests.es6.js"],"names":[],"mappings":"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","file":"listItemViewTests.js","sourcesContent":["suite('djblets/configForms/views/ListItemView', function() {\n    describe('Rendering', function() {\n        describe('General item display', function() {\n            it('With editURL', function() {\n                const item = new Djblets.Config.ListItem({\n                    editURL: 'http://example.com/',\n                    text: 'Label',\n                });\n                const itemView = new Djblets.Config.ListItemView({\n                    model: item,\n                });\n\n                itemView.render();\n                expect(itemView.$el.html().strip()).toBe([\n                    '<span class=\"djblets-c-config-forms-list__item-actions\">',\n                    '</span>\\n',\n                    '<a href=\"http://example.com/\">Label</a>',\n                ].join(''));\n            });\n\n            it('Without editURL', function() {\n                const item = new Djblets.Config.ListItem({\n                    text: 'Label',\n                });\n                const itemView = new Djblets.Config.ListItemView({\n                    model: item,\n                });\n\n                itemView.render();\n                expect(itemView.$el.html().strip()).toBe([\n                    '<span class=\"djblets-c-config-forms-list__item-actions\">',\n                    '</span>\\n',\n                    'Label',\n                ].join(''));\n            });\n        });\n\n        describe('Item states', function() {\n            const CustomItemView = Djblets.Config.ListItemView.extend({\n                template: _.template(dedent`\n                    <div><%- text %></div>\n                    <div class=\"djblets-c-config-forms-list__item-state\">\n                    </div>\n                `),\n            });\n\n            it('Initial render', function() {\n                const item = new Djblets.Config.ListItem({\n                    itemState: 'enabled',\n                });\n                const itemView = new CustomItemView({\n                    model: item,\n                });\n\n                itemView.render();\n\n                expect(itemView.el).toHaveClass('-is-enabled');\n\n                const $stateText =\n                    itemView.$('.djblets-c-config-forms-list__item-state');\n                expect($stateText.text()).toBe('Enabled');\n            });\n\n            it('When changed', function() {\n                const item = new Djblets.Config.ListItem({\n                    itemState: 'enabled',\n                });\n                const itemView = new CustomItemView({\n                    model: item,\n                });\n\n                itemView.render();\n\n                item.set('itemState', 'disabled');\n\n                expect(itemView.el).toHaveClass('-is-disabled');\n                expect(itemView.el).not.toHaveClass('-is-enabled');\n\n                const $stateText =\n                    itemView.$('.djblets-c-config-forms-list__item-state');\n                expect($stateText.text()).toBe('Disabled');\n            });\n        });\n\n        describe('Actions', function() {\n            it('Checkboxes', function() {\n                const item = new Djblets.Config.ListItem({\n                    text: 'Label',\n                    checkboxAttr: false,\n                    actions: [\n                        {\n                            id: 'mycheckbox',\n                            type: 'checkbox',\n                            label: 'Checkbox',\n                            propName: 'checkboxAttr',\n                        },\n                    ],\n                });\n                const itemView = new Djblets.Config.ListItemView({\n                    model: item,\n                });\n\n                itemView.render();\n\n                expect(itemView.$('input[type=checkbox]').length).toBe(1);\n                expect(itemView.$('label').length).toBe(1);\n            });\n\n            describe('Buttons', function() {\n                it('Simple', function() {\n                    const item = new Djblets.Config.ListItem({\n                        text: 'Label',\n                        actions: [\n                            {\n                                id: 'mybutton',\n                                label: 'Button',\n                            },\n                        ],\n                    });\n                    const itemView = new Djblets.Config.ListItemView({\n                        model: item,\n                    });\n\n                    itemView.render();\n\n                    const $button = itemView.$(\n                        'button.djblets-c-config-forms-list__item-action');\n                    expect($button.length).toBe(1);\n                    const buttonEl = $button[0];\n\n                    expect($button.text()).toBe('Button');\n                    expect(buttonEl)\n                        .toHaveClass('config-forms-list-action-mybutton');\n                    expect(buttonEl).not.toHaveClass('rb-icon');\n                    expect(buttonEl).not.toHaveClass('-is-danger');\n                    expect(buttonEl).not.toHaveClass('-is-primary');\n                });\n\n                it('Danger', function() {\n                    const item = new Djblets.Config.ListItem({\n                        text: 'Label',\n                        actions: [\n                            {\n                                id: 'mybutton',\n                                label: 'Button',\n                                danger: true,\n                            },\n                        ],\n                    });\n                    const itemView = new Djblets.Config.ListItemView({\n                        model: item,\n                    });\n\n                    itemView.render();\n\n                    const $button = itemView.$(\n                        'button.djblets-c-config-forms-list__item-action');\n                    expect($button.length).toBe(1);\n                    const buttonEl = $button[0];\n\n                    expect($button.text()).toBe('Button');\n                    expect(buttonEl)\n                        .toHaveClass('config-forms-list-action-mybutton');\n                    expect(buttonEl).not.toHaveClass('rb-icon');\n                    expect(buttonEl).not.toHaveClass('-is-primary');\n                    expect(buttonEl).toHaveClass('-is-danger');\n                });\n\n                it('Primary', function() {\n                    const item = new Djblets.Config.ListItem({\n                        text: 'Label',\n                        actions: [\n                            {\n                                id: 'mybutton',\n                                label: 'Button',\n                                primary: true,\n                            },\n                        ],\n                    });\n                    const itemView = new Djblets.Config.ListItemView({\n                        model: item,\n                    });\n\n                    itemView.render();\n\n                    const $button = itemView.$(\n                        'button.djblets-c-config-forms-list__item-action');\n                    expect($button.length).toBe(1);\n                    const buttonEl = $button[0];\n\n                    expect($button.text()).toBe('Button');\n                    expect(buttonEl)\n                        .toHaveClass('config-forms-list-action-mybutton');\n                    expect(buttonEl).not.toHaveClass('rb-icon');\n                    expect(buttonEl).not.toHaveClass('-is-danger');\n                    expect(buttonEl).toHaveClass('-is-primary');\n                });\n\n                it('Icon names', function() {\n                    const item = new Djblets.Config.ListItem({\n                        text: 'Label',\n                        actions: [\n                            {\n                                id: 'mybutton',\n                                label: 'Button',\n                                danger: false,\n                                iconName: 'foo',\n                            },\n                        ],\n                    });\n                    const itemView = new Djblets.Config.ListItemView({\n                        model: item,\n                    });\n\n                    itemView.render();\n\n                    const $button = itemView.$(\n                        'button.djblets-c-config-forms-list__item-action');\n                    expect($button.length).toBe(1);\n                    const buttonEl = $button[0];\n\n                    expect($button.text()).toBe('Button');\n                    expect(buttonEl)\n                        .toHaveClass('config-forms-list-action-mybutton');\n                    expect(buttonEl).not.toHaveClass('-is-danger');\n                    expect(buttonEl).not.toHaveClass('-is-primary');\n\n                    const $span = $button.find('span');\n                    expect($span.length).toBe(1);\n                    expect($span.hasClass('djblets-icon')).toBe(true);\n                    expect($span.hasClass('djblets-icon-foo')).toBe(true);\n                });\n            });\n\n            describe('Menus', function() {\n                let item;\n                let itemView;\n\n                beforeEach(function() {\n                    item = new Djblets.Config.ListItem({\n                        text: 'Label',\n                        actions: [\n                            {\n                                id: 'mymenu',\n                                label: 'Menu',\n                                children: [\n                                    {\n                                        id: 'mymenuitem',\n                                        label: 'My menu item',\n                                    },\n                                ],\n                            },\n                        ],\n                    });\n\n                    itemView = new Djblets.Config.ListItemView({\n                        model: item,\n                    });\n\n                    itemView.render();\n                });\n\n                it('Initial display', function() {\n                    const $button = itemView.$(\n                        'button.djblets-c-config-forms-list__item-action');\n\n                    expect($button.length).toBe(1);\n                    expect($button.text()).toBe('Menu ▾');\n                });\n\n                it('Opening', function() {\n                    /* Prevent deferring. */\n                    spyOn(_, 'defer').and.callFake(function(cb) {\n                        cb();\n                    });\n\n                    spyOn(itemView, 'trigger');\n\n                    const $action = itemView\n                        .$('.config-forms-list-action-mymenu');\n                    $action.click();\n\n                    const $menu =\n                        itemView.$('.djblets-c-config-forms-popup-menu');\n                    expect($menu.length).toBe(1);\n                    expect(itemView.trigger.calls.mostRecent().args[0]).toBe(\n                        'actionMenuPopUp');\n                });\n\n                it('Closing', function() {\n                    /* Prevent deferring. */\n                    spyOn(_, 'defer').and.callFake(cb => cb());\n\n                    const $action = itemView\n                        .$('.config-forms-list-action-mymenu');\n                    $action.click();\n\n                    spyOn(itemView, 'trigger');\n                    $(document.body).click();\n\n                    expect(itemView.trigger.calls.mostRecent().args[0]).toBe(\n                        'actionMenuPopDown');\n\n                    const $menu = itemView.$('.action-menu');\n                    expect($menu.length).toBe(0);\n                });\n            });\n        });\n\n        describe('Action properties', function() {\n            describe('enabledPropName', function() {\n                it('value == undefined', function() {\n                    const item = new Djblets.Config.ListItem({\n                        text: 'Label',\n                        actions: [\n                            {\n                                id: 'mycheckbox',\n                                type: 'checkbox',\n                                label: 'Checkbox',\n                                enabledPropName: 'isEnabled',\n                            },\n                        ],\n                    });\n                    const itemView = new Djblets.Config.ListItemView({\n                        model: item,\n                    });\n\n                    itemView.render();\n\n                    const $action = itemView\n                        .$('.config-forms-list-action-mycheckbox');\n\n                    expect($action.prop('disabled')).toBe(true);\n                });\n\n                it('value == true', function() {\n                    const item = new Djblets.Config.ListItem({\n                        text: 'Label',\n                        isEnabled: true,\n                        actions: [\n                            {\n                                id: 'mycheckbox',\n                                type: 'checkbox',\n                                label: 'Checkbox',\n                                enabledPropName: 'isEnabled',\n                            },\n                        ],\n                    });\n                    const itemView = new Djblets.Config.ListItemView({\n                        model: item,\n                    });\n\n                    itemView.render();\n\n                    const $action = itemView\n                        .$('.config-forms-list-action-mycheckbox');\n\n                    expect($action.prop('disabled')).toBe(false);\n                });\n\n                it('value == false', function() {\n                    const item = new Djblets.Config.ListItem({\n                        text: 'Label',\n                        isEnabled: false,\n                        actions: [\n                            {\n                                id: 'mycheckbox',\n                                type: 'checkbox',\n                                label: 'Checkbox',\n                                enabledPropName: 'isEnabled',\n                            },\n                        ],\n                    });\n                    const itemView = new Djblets.Config.ListItemView({\n                        model: item\n                    });\n\n                    itemView.render();\n\n                    const $action = itemView\n                        .$('.config-forms-list-action-mycheckbox');\n\n                    expect($action.prop('disabled')).toBe(true);\n                });\n\n                describe('with enabledPropInverse == true', function() {\n                    it('value == undefined', function() {\n                        const item = new Djblets.Config.ListItem({\n                            text: 'Label',\n                            actions: [\n                                {\n                                    id: 'mycheckbox',\n                                    type: 'checkbox',\n                                    label: 'Checkbox',\n                                    enabledPropName: 'isDisabled',\n                                    enabledPropInverse: true,\n                                },\n                            ],\n                        });\n                        const itemView = new Djblets.Config.ListItemView({\n                            model: item\n                        });\n\n                        itemView.render();\n\n                        const $action = itemView\n                            .$('.config-forms-list-action-mycheckbox');\n\n                        expect($action.prop('disabled')).toBe(false);\n                    });\n\n                    it('value == true', function() {\n                        const item = new Djblets.Config.ListItem({\n                            text: 'Label',\n                            isDisabled: true,\n                            actions: [\n                                {\n                                    id: 'mycheckbox',\n                                    type: 'checkbox',\n                                    label: 'Checkbox',\n                                    enabledPropName: 'isDisabled',\n                                    enabledPropInverse: true,\n                                },\n                            ],\n                        });\n                        const itemView = new Djblets.Config.ListItemView({\n                            model: item,\n                        });\n\n                        itemView.render();\n\n                        const $action = itemView\n                            .$('.config-forms-list-action-mycheckbox');\n\n                        expect($action.prop('disabled')).toBe(true);\n                    });\n\n                    it('value == false', function() {\n                        var item = new Djblets.Config.ListItem({\n                                text: 'Label',\n                                isDisabled: false,\n                                actions: [\n                                    {\n                                        id: 'mycheckbox',\n                                        type: 'checkbox',\n                                        label: 'Checkbox',\n                                        enabledPropName: 'isDisabled',\n                                        enabledPropInverse: true\n                                    }\n                                ]\n                            }),\n                            itemView = new Djblets.Config.ListItemView({\n                                model: item\n                            }),\n                            $action;\n\n                        itemView.render();\n\n                        $action =\n                            itemView.$('.config-forms-list-action-mycheckbox');\n\n                        expect($action.prop('disabled')).toBe(false);\n                    });\n                });\n            });\n        });\n    });\n\n    describe('Action handlers', function() {\n        it('Buttons', function() {\n            var item = new Djblets.Config.ListItem({\n                text: 'Label',\n                actions: [\n                    {\n                        id: 'mybutton',\n                        label: 'Button',\n                    },\n                ],\n            });\n            const itemView = new Djblets.Config.ListItemView({\n                model: item\n            });\n\n            itemView.actionHandlers = {\n                mybutton: '_onMyButtonClick'\n            };\n            itemView._onMyButtonClick = () => {};\n            spyOn(itemView, '_onMyButtonClick');\n\n            itemView.render();\n\n            const $button = itemView.$(\n                'button.djblets-c-config-forms-list__item-action');\n            expect($button.length).toBe(1);\n            $button.click();\n\n            expect(itemView._onMyButtonClick).toHaveBeenCalled();\n        });\n\n        it('Checkboxes', function() {\n            const item = new Djblets.Config.ListItem({\n                text: 'Label',\n                checkboxAttr: false,\n                actions: [\n                    {\n                        id: 'mycheckbox',\n                        type: 'checkbox',\n                        label: 'Checkbox',\n                        propName: 'checkboxAttr',\n                    },\n                ],\n            });\n            const itemView = new Djblets.Config.ListItemView({\n                model: item,\n            });\n\n            itemView.actionHandlers = {\n                mybutton: '_onMyButtonClick',\n            };\n            itemView._onMyButtonClick = () => {};\n            spyOn(itemView, '_onMyButtonClick');\n\n            itemView.render();\n\n            const $checkbox = itemView.$('input[type=checkbox]');\n            expect($checkbox.length).toBe(1);\n            expect($checkbox.prop('checked')).toBe(false);\n            $checkbox\n                .prop('checked', true)\n                .triggerHandler('change');\n\n            expect(item.get('checkboxAttr')).toBe(true);\n        });\n    });\n});\n"]}