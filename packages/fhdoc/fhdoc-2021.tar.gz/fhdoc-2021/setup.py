# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['fhdoc',
 'fhdoc.ast_parser',
 'fhdoc.ast_parser.analyzers',
 'fhdoc.ast_parser.node_records',
 'fhdoc.processors',
 'fhdoc.utils']

package_data = \
{'': ['*']}

entry_points = \
{'console_scripts': ['fhdoc = fhdoc:main.main']}

setup_kwargs = {
    'name': 'fhdoc',
    'version': '2021',
    'description': 'Python docstring-based documentation generator for lazy perfectionists',
    'long_description': '[![GitHub top language](https://img.shields.io/github/languages/top/FHPythonUtils/FHDoc.svg?style=for-the-badge)](../../)\n[![Repository size](https://img.shields.io/github/repo-size/FHPythonUtils/FHDoc.svg?style=for-the-badge)](../../)\n[![Issues](https://img.shields.io/github/issues/FHPythonUtils/FHDoc.svg?style=for-the-badge)](../../issues)\n[![License](https://img.shields.io/github/license/FHPythonUtils/FHDoc.svg?style=for-the-badge)](/LICENSE.md)\n[![Commit activity](https://img.shields.io/github/commit-activity/m/FHPythonUtils/FHDoc.svg?style=for-the-badge)](../../commits/master)\n[![Last commit](https://img.shields.io/github/last-commit/FHPythonUtils/FHDoc.svg?style=for-the-badge)](../../commits/master)\n[![PyPI Downloads](https://img.shields.io/pypi/dm/fhdoc.svg?style=for-the-badge)](https://pypistats.org/packages/fhdoc)\n[![PyPI Total Downloads](https://img.shields.io/badge/dynamic/json?style=for-the-badge&label=total%20downloads&query=%24.total_downloads&url=https%3A%2F%2Fapi.pepy.tech%2Fapi%2Fprojects%2Ffhdoc)](https://pepy.tech/project/fhdoc)\n[![PyPI Version](https://img.shields.io/pypi/v/fhdoc.svg?style=for-the-badge)](https://pypi.org/project/fhdoc)\n\n<!-- omit in TOC -->\n# FHDoc - Python documentation generator\n\n<img src="readme-assets/icons/name.png" alt="Project Icon" width="750">\n\n\nPython docstring-based documentation generator for lazy perfectionists.\n\nForked from vemel/handsdown\n\n- [Features](#features)\n- [Do you need fhdoc?](#do-you-need-fhdoc)\n- [Examples](#examples)\n- [Using](#using)\n\t- [From command line](#from-command-line)\n\t- [As a GitHub Pages manager](#as-a-github-pages-manager)\n\t- [Deploy on Read the Docs](#deploy-on-read-the-docs)\n\t- [Build static HTML](#build-static-html)\n\t- [As a module](#as-a-module)\n- [Installation](#installation)\n- [Documentation](#documentation)\n- [Install With PIP](#install-with-pip)\n- [Language information](#language-information)\n\t- [Built for](#built-for)\n- [Install Python on Windows](#install-python-on-windows)\n\t- [Chocolatey](#chocolatey)\n\t- [Download](#download)\n- [Install Python on Linux](#install-python-on-linux)\n\t- [Apt](#apt)\n- [How to run](#how-to-run)\n\t- [With VSCode](#with-vscode)\n\t- [From the Terminal](#from-the-terminal)\n- [Download Project](#download-project)\n\t- [Clone](#clone)\n\t\t- [Using The Command Line](#using-the-command-line)\n\t\t- [Using GitHub Desktop](#using-github-desktop)\n\t- [Download Zip File](#download-zip-file)\n- [Community Files](#community-files)\n\t- [Licence](#licence)\n\t- [Changelog](#changelog)\n\t- [Code of Conduct](#code-of-conduct)\n\t- [Contributing](#contributing)\n\t- [Security](#security)\n\t- [Support](#support)\n\t- [Rationale](#rationale)\n\n## Features\n\n- [PEP 257](https://www.python.org/dev/peps/pep-0257/),\n  [Google](http://google.github.io/styleguide/pyguide.html#38-comments-and-docstrings),\n  [Sphinx](https://sphinx-rtd-tutorial.readthedocs.io/en/latest/docstrings.html)\n  and [reStructuredText](https://www.python.org/dev/peps/pep-0287/)\n  docstrings support. All of them are converted to a valid Markdown.\n- Works with [Django](https://www.djangoproject.com/) and [Flask](https://palletsprojects.com/p/flask/) apps\n- Can be used locally, or\n  [right on GitHub](https://github.com/FHPythonUtils/fhdoc/blob/master/DOCS/README.md) or even deployed on\n- Signatures for every class, function, property and method.\n- Support for type annotations. Even for the ones from the `__future__`!\n- Nice list of all modules in [Modules](https://github.com/FHPythonUtils/fhdoc/blob/master/DOCS/MODULES.md)\n- Gather all scattered `README.md` in submodules to one place\n- Find related source code from every doc section.\n- Make links by just adding `module.import.String` to docs.\n- Do you use type annotations? Well, you get auto-discovery of related modules for free!\n\n## Do you need fhdoc?\n\nYou definitely *do* if you:\n\n- prefer to automate documentation builds\n- work with a team and plan to simplify knowledge sharing\n- want to show your project without navigating through a source code\n- build `Django` or `Flask` applications, and even if you do not\n- are proud of your project and not afraid to show it\n- love Open Source\n\nAnd probably *do not* if you:\n\n- not very into docstrings and type annotations\n- like to abstract a documentation away from the way things really are\n- use [Pandas docstrings](https://pandas.pydata.org/pandas-DOCS/stable/development/contributing_docstring.html)\n  as they are not supported yet\n\n## Examples\n\n- [Main](https://github.com/FHPythonUtils/fhdoc/blob/master/examples/main_example.py) with [generated output](https://github.com/FHPythonUtils/fhdoc/tree/master/DOCS/examples/main_example.md)\n- [RST docstrings](https://github.com/FHPythonUtils/fhdoc/blob/master/examples/rst_docstrings.py) with [generated output](https://github.com/FHPythonUtils/fhdoc/tree/master/DOCS/examples/rst_docstrings.md)\n- [Google docstrings](https://github.com/FHPythonUtils/fhdoc/blob/master/examples/google_docstrings.py) with [generated output](https://github.com/FHPythonUtils/fhdoc/tree/master/DOCS/examples/google_docstrings.md)\n- [PEP 257 docstrings](https://github.com/FHPythonUtils/fhdoc/blob/master/examples/pep257_docstrings.py) with [generated output](https://github.com/FHPythonUtils/fhdoc/tree/master/DOCS/examples/pep257_docstrings.md)\n- [Sphinx docstrings](https://github.com/FHPythonUtils/fhdoc/blob/master/examples/sphinx_docstrings.py) with [generated output](https://github.com/FHPythonUtils/fhdoc/tree/master/DOCS/examples/sphinx_docstrings.md)\n- [Type annotations](https://github.com/FHPythonUtils/fhdoc/blob/master/examples/typed.py) with [generated output](https://github.com/FHPythonUtils/fhdoc/tree/master/DOCS/examples/typed.md)\n- [Comment-style type annotations](https://github.com/FHPythonUtils/fhdoc/blob/master/examples/comment_typed.py) with [generated output](https://github.com/FHPythonUtils/fhdoc/tree/master/DOCS/examples/comment_typed.md)\n\n## Using\n\n### From command line\n\nJust go to your favorite project that has lots of docstrings but missing\nauto-generated docs and let `fhdoc` do the thing.\n\n```bash\ncd ~/my/project\n\n# build documentation *.md* files in DOCS/* directory\nfhdoc\n\n# or provide custom output directory: output_dir/*\nfhdoc -o output_dir\n\n# generate docs only for my_module, but exclude migrations\nfhdoc my_module --exclude my_module/migrations\n\n# generate documentation for deployment\nfhdoc --external `git config --get remote.origin.url` -n ProjectName\n```\n\nNavigate to `DOCS/README.md` to check your new documentation!\n\n### As a GitHub Pages manager\n\nWith `--external` CLI flag, `fhdoc` generates all required configuration\nfor [GitHub Pages](https://pages.github.com/), so you just need to setup your\nGitHub repository.\n\n```bash\n# Generate documentation that points to master branch\n# do not use custom output location, as `GitHub Pages`\n# works only with `docs` directory\nfhdoc --external `git config --get remote.origin.url`\n\n# or specify GitHub url directly\nfhdoc --external https://github.com/<user>/<project>/blob/master/\n```\n\n- Generate documentation with `--external` flag as shown above, do not use `--output`\n  flag, only `docs` folder is supported by `GitHub Pages`\n- Commit and push all changes a to `master` branch.\n- Set your GitHub project `Settings` > `GitHub Pages` > `Source` to `master branch /docs folder`\n\nAll set! You can change `DOCS/_config.yml` to add your own touch.\n\nWith `--external` flag links to your source are absolute and point to your GitHub repo. If you\nstill want to have relative links to source, e.g. for using docs locally,\ngenerate docs to another folder\n\n```bash\n# `docs_local` folder will be created in your project root\n# you probably want to add it to .gitignore\nfhdoc -o docs_local\n```\n\n### Deploy on Read the Docs\n\nWith `--external` CLI flag, `fhdoc` generates all required configuration\nfor [Read the Docs](https://readthedocs.org/), so you just need to to add your\nGitHub repository to `Read the Docs`.\n\n```bash\n# Generate documentation that points to master branch\n# do not use custom output location, as `GitHub Pages`\n# works only with `docs` directory\nfhdoc --external `git config --get remote.origin.url`\n\n# or specify GitHub url directly\nfhdoc --external https://github.com/<user>/<project>/blob/master/\n```\n\n- Generate documentation with `--external` flag as shown above, do not use `--output`\n  flag, only `docs` folder is supported by `Read the Docs`\n- Commit and push all changes a to `master` branch.\n- Add your repository on [Read the Docs](https://readthedocs.org/)\n\nAll set! You can change `.readthedocs.yml` and `mkdocs.yml` to add your own touch.\n\n### Build static HTML\n\n```bash\n# Generate documentation that points to master branch\n# with source links pointing to your repository\n# this command also creates `mkdocs.yml`\nfhdoc --external `git config --get remote.origin.url`\n\n# Run mkdocs to build HTML\nmkdocs build\n```\n\n### As a module\n\n```python\nfrom fhdoc.generator import Generator\nfrom fhdoc.utils.path_finder import PathFinder\n\n# this is our project root directory\nrepo_path = Path.cwd()\n\n# this little tool works like `pathlib.Path.glob` with some extra magic\n# but in this case `repo_path.glob("**/*.py")` would do as well\npath_finder = PathFinder(repo_path, "**/*.py")\n\n# no docs for tests and build\npath_finder.exclude("tests/*", "build/*")\n\n# initialize generator\nfhdoc = Generator(\n\tinput_path=repo_path,\n\toutput_path=repo_path / \'output\',\n\tsource_paths=path_finder.glob("**/*.py")\n)\n\n# generate all docs at once\nfhdoc.generate_docs()\n\n# or generate just for one doc\nfhdoc.generate_doc(repo_path / \'my_module\' / \'source.py\')\n\n# and generate index.md file\nfhdoc.generate_index()\n\n# navigate to `output` dir and check results\n```\n\n## Installation\n\nInstall using `pip` from PyPI\n\n```bash\npip install fhdoc\n```\n\n## Documentation\nSee the [Docs](/DOCS/) for more information.\n\n## Install With PIP\n```python\npip install fhdoc\n```\n\nHead to https://pypi.org/project/fhdoc/ for more info\n\n## Language information\n### Built for\nThis program has been written for Python 3 and has been tested with\nPython version 3.9.0 <https://www.python.org/downloads/release/python-380/>.\n\n## Install Python on Windows\n### Chocolatey\n```powershell\nchoco install python\n```\n### Download\nTo install Python, go to <https://www.python.org/> and download the latest\nversion.\n\n## Install Python on Linux\n### Apt\n```bash\nsudo apt install python3.9\n```\n\n## How to run\n### With VSCode\n1. Open the .py file in vscode\n2. Ensure a python 3.9 interpreter is selected (Ctrl+Shift+P > Python:Select\nInterpreter > Python 3.9)\n3. Run by pressing Ctrl+F5 (if you are prompted to install any modules, accept)\n### From the Terminal\n```bash\n./[file].py\n```\n\n## Download Project\n### Clone\n#### Using The Command Line\n1. Press the Clone or download button in the top right\n2. Copy the URL (link)\n3. Open the command line and change directory to where you wish to\nclone to\n4. Type \'git clone\' followed by URL in step 2\n```bash\n$ git clone https://github.com/FHPythonUtils/FHDoc\n```\n\nMore information can be found at\n<https://help.github.com/en/articles/cloning-a-repository>\n\n#### Using GitHub Desktop\n1. Press the Clone or download button in the top right\n2. Click open in desktop\n3. Choose the path for where you want and click Clone\n\nMore information can be found at\n<https://help.github.com/en/desktop/contributing-to-projects/cloning-a-repository-from-github-to-github-desktop>\n\n### Download Zip File\n\n1. Download this GitHub repository\n2. Extract the zip archive\n3. Copy/ move to the desired location\n\n## Community Files\n### Licence\nMIT License\nCopyright (c) FredHappyface\n(See the [LICENSE](/LICENSE.md) for more information.)\n\n### Changelog\nSee the [Changelog](/CHANGELOG.md) for more information.\n\n### Code of Conduct\nOnline communities include people from many backgrounds. The *Project*\ncontributors are committed to providing a friendly, safe and welcoming\nenvironment for all. Please see the\n[Code of Conduct](https://github.com/FHPythonUtils/.github/blob/master/CODE_OF_CONDUCT.md)\n for more information.\n\n### Contributing\nContributions are welcome, please see the\n[Contributing Guidelines](https://github.com/FHPythonUtils/.github/blob/master/CONTRIBUTING.md)\nfor more information.\n\n### Security\nThank you for improving the security of the project, please see the\n[Security Policy](https://github.com/FHPythonUtils/.github/blob/master/SECURITY.md)\nfor more information.\n\n### Support\nThank you for using this project, I hope it is of use to you. Please be aware that\nthose involved with the project often do so for fun along with other commitments\n(such as work, family, etc). Please see the\n[Support Policy](https://github.com/FHPythonUtils/.github/blob/master/SUPPORT.md)\nfor more information.\n\n### Rationale\nThe rationale acts as a guide to various processes regarding projects such as\nthe versioning scheme and the programming styles used. Please see the\n[Rationale](https://github.com/FHPythonUtils/.github/blob/master/RATIONALE.md)\nfor more information.\n',
    'author': 'FredHappyface',
    'author_email': None,
    'maintainer': None,
    'maintainer_email': None,
    'url': 'https://github.com/FHPythonUtils/fhdoc',
    'packages': packages,
    'package_data': package_data,
    'entry_points': entry_points,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
