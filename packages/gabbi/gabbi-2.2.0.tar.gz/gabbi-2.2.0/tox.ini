[tox]
minversion = 3.1.1
skipsdist = True
envlist = py36,py37,py38,py39,pypy3,pep8,limit,failskip,docs,py38-prefix,py38-limit,py38-verbosity,py38-failskip,py36-pytest,py37-pytest,py38-pytest,py39-pytest

[testenv]
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
whitelist_externals = rm
usedevelop = True
install_command = pip install --no-cache -U {opts} {packages}
commands =
    stestr run {posargs}
setenv = GABBI_PREFIX=
passenv = GABBI_* HOME

[testenv:venv]
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands = {posargs}

[testenv:py36-pytest]
commands = py.test gabbi

[testenv:py37-pytest]
commands = py.test gabbi

[testenv:py38-pytest]
commands = py.test gabbi

[testenv:py39-pytest]
commands = py.test gabbi

[testenv:py38-prefix]
setenv = GABBI_PREFIX=/snoopy

[testenv:pep8]
basepython = python3
deps = hacking
commands =
    flake8

[testenv:py38-limit]
commands = {toxinidir}/test-limit.sh

[testenv:py38-verbosity]
commands = {toxinidir}/test-verbosity.sh

[testenv:py38-failskip]
commands = {toxinidir}/test-failskip.sh

# Use pytest when in pypy3 because stestr fails on loading readline.
[testenv:pypy3]
commands = py.test gabbi

[testenv:cover]
basepython = python3
setenv =
    {[testenv]setenv}
    PYTHON=coverage run --source gabbi --parallel-mode
commands =
    coverage erase
    find . -type f -name "*.pyc" -delete
    stestr run {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml
    coverage report

[testenv:pytest-cov]
basepython = python3
commands = py.test --cov=gabbi gabbi/tests --cov-config .coveragerc --cov-report html

[testenv:placement]
basepython = python3.7
deps = tox
commands = -mkdir {envdir}/src
           -rm -r {envdir}/src/*
           bash -c "curl -L https://tarballs.opendev.org/openstack/placement/placement-master.tar.gz | tar -C {envdir}/src -zx --strip-components 1 -f - "
           tox -c {envdir}/src -e functional-py37 --notest  # ensure a virtualenv is built
           # nova shares tox envs so it's just luck that we know the tox dir is different from name
           {envdir}/src/.tox/py37/bin/pip install -U {toxinidir}  # install gabbi
           tox -c {envdir}/src -e functional-py37 test_api
whitelist_externals =
    mkdir
    curl
    tar
    rm
    bash

[testenv:docs]
commands =
    rm -rf doc/build
    python setup.py build_sphinx
whitelist_externals =
    rm

[flake8]
exclude=.venv,.git,.tox,dist,*egg,*.egg-info,build,examples,docs
show-source = True
