from typing import Any, Optional

class HistoryL2ServiceStub:
    GetHistoryTicks: Any = ...
    GetHistoryBars: Any = ...
    GetHistoryOrders: Any = ...
    GetHistoryOrderQueues: Any = ...
    GetHistoryTransactions: Any = ...
    def __init__(self, channel: Any) -> None: ...

class HistoryL2ServiceServicer:
    def GetHistoryTicks(self, request: Any, context: Any) -> None: ...
    def GetHistoryBars(self, request: Any, context: Any) -> None: ...
    def GetHistoryOrders(self, request: Any, context: Any) -> None: ...
    def GetHistoryOrderQueues(self, request: Any, context: Any) -> None: ...
    def GetHistoryTransactions(self, request: Any, context: Any) -> None: ...

def add_HistoryL2ServiceServicer_to_server(servicer: Any, server: Any) -> None: ...

class HistoryL2Service:
    @staticmethod
    def GetHistoryTicks(request: Any, target: Any, options: Any = ..., channel_credentials: Optional[Any] = ..., call_credentials: Optional[Any] = ..., compression: Optional[Any] = ..., wait_for_ready: Optional[Any] = ..., timeout: Optional[Any] = ..., metadata: Optional[Any] = ...): ...
    @staticmethod
    def GetHistoryBars(request: Any, target: Any, options: Any = ..., channel_credentials: Optional[Any] = ..., call_credentials: Optional[Any] = ..., compression: Optional[Any] = ..., wait_for_ready: Optional[Any] = ..., timeout: Optional[Any] = ..., metadata: Optional[Any] = ...): ...
    @staticmethod
    def GetHistoryOrders(request: Any, target: Any, options: Any = ..., channel_credentials: Optional[Any] = ..., call_credentials: Optional[Any] = ..., compression: Optional[Any] = ..., wait_for_ready: Optional[Any] = ..., timeout: Optional[Any] = ..., metadata: Optional[Any] = ...): ...
    @staticmethod
    def GetHistoryOrderQueues(request: Any, target: Any, options: Any = ..., channel_credentials: Optional[Any] = ..., call_credentials: Optional[Any] = ..., compression: Optional[Any] = ..., wait_for_ready: Optional[Any] = ..., timeout: Optional[Any] = ..., metadata: Optional[Any] = ...): ...
    @staticmethod
    def GetHistoryTransactions(request: Any, target: Any, options: Any = ..., channel_credentials: Optional[Any] = ..., call_credentials: Optional[Any] = ..., compression: Optional[Any] = ..., wait_for_ready: Optional[Any] = ..., timeout: Optional[Any] = ..., metadata: Optional[Any] = ...): ...
