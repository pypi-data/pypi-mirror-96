# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: intentionet/bfe/proto/auth/metadata.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='intentionet/bfe/proto/auth/metadata.proto',
  package='com.intentionet.bfe.proto.auth',
  syntax='proto3',
  serialized_options=b'\n\036com.intentionet.bfe.proto.authP\001Z\036intentionet.com/bfe/proto/auth',
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n)intentionet/bfe/proto/auth/metadata.proto\x12\x1e\x63om.intentionet.bfe.proto.auth\"\x17\n\x15\x41uthorizationMetadataBB\n\x1e\x63om.intentionet.bfe.proto.authP\x01Z\x1eintentionet.com/bfe/proto/authb\x06proto3'
)




_AUTHORIZATIONMETADATA = _descriptor.Descriptor(
  name='AuthorizationMetadata',
  full_name='com.intentionet.bfe.proto.auth.AuthorizationMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=77,
  serialized_end=100,
)

DESCRIPTOR.message_types_by_name['AuthorizationMetadata'] = _AUTHORIZATIONMETADATA
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AuthorizationMetadata = _reflection.GeneratedProtocolMessageType('AuthorizationMetadata', (_message.Message,), {
  'DESCRIPTOR' : _AUTHORIZATIONMETADATA,
  '__module__' : 'intentionet.bfe.proto.auth.metadata_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.proto.auth.AuthorizationMetadata)
  })
_sym_db.RegisterMessage(AuthorizationMetadata)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
