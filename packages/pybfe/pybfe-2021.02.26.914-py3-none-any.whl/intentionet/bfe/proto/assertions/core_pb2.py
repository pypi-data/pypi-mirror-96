# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: intentionet/bfe/proto/assertions/core.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from intentionet.bfe.proto.assertions import parameters_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2
from intentionet.bfe.proto.assertions import bgp_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_bgp__pb2
from intentionet.bfe.proto.assertions import filters_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_filters__pb2
from intentionet.bfe.proto.assertions import mlag_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_mlag__pb2
from intentionet.bfe.proto.assertions import snmp_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_snmp__pb2
from intentionet.bfe.proto.assertions import reachability_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_reachability__pb2
from intentionet.bfe.proto.assertions import reference_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_reference__pb2
from intentionet.bfe.proto.assertions import route_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_route__pb2
from intentionet.bfe.proto.assertions import violations_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_violations__pb2
from intentionet.bfe.proto.datamodel.aws import aws_primitives_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2
from intentionet.bfe.proto.datamodel import device_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_device__pb2
from intentionet.bfe.proto.datamodel import flow_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_flow__pb2
from intentionet.bfe.proto.datamodel import bgp_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_bgp__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='intentionet/bfe/proto/assertions/core.proto',
  package='com.intentionet.bfe.assertions',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n+intentionet/bfe/proto/assertions/core.proto\x12\x1e\x63om.intentionet.bfe.assertions\x1a\x31intentionet/bfe/proto/assertions/parameters.proto\x1a*intentionet/bfe/proto/assertions/bgp.proto\x1a.intentionet/bfe/proto/assertions/filters.proto\x1a+intentionet/bfe/proto/assertions/mlag.proto\x1a+intentionet/bfe/proto/assertions/snmp.proto\x1a\x33intentionet/bfe/proto/assertions/reachability.proto\x1a\x30intentionet/bfe/proto/assertions/reference.proto\x1a,intentionet/bfe/proto/assertions/route.proto\x1a\x31intentionet/bfe/proto/assertions/violations.proto\x1a\x38intentionet/bfe/proto/datamodel/aws/aws_primitives.proto\x1a,intentionet/bfe/proto/datamodel/device.proto\x1a*intentionet/bfe/proto/datamodel/flow.proto\x1a)intentionet/bfe/proto/datamodel/bgp.proto\"\xae\x12\n\x0e\x41ssertionInput\x12t\n\x14\x64\x65vices_have_servers\x18\x01 \x01(\x0b\x32@.com.intentionet.bfe.assertions.DevicesHaveServersAssertionInputH\x00R\x12\x64\x65vicesHaveServers\x12\x95\x01\n!security_group_does_not_have_rule\x18\x10 \x01(\x0b\x32J.com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionInputH\x00R\x1csecurityGroupDoesNotHaveRule\x12s\n\x18sg_rules_blocked_by_nacl\x18\x11 \x01(\x0b\x32\x39.com.intentionet.bfe.assertions.SgRulesBlockedByNaclInputH\x00R\x14sgRulesBlockedByNacl\x12\x91\x01\n\x1f\x63ross_zone_policy_filters_flows\x18\x12 \x01(\x0b\x32I.com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionInputH\x00R\x1b\x63rossZonePolicyFiltersFlows\x12q\n\x13\x64\x65vices_have_routes\x18\x13 \x01(\x0b\x32?.com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionInputH\x00R\x11\x64\x65vicesHaveRoutes\x12\x66\n\x13vpc_endpoint_for_s3\x18\x14 \x01(\x0b\x32\x35.com.intentionet.bfe.assertions.VpcEndpointForS3InputH\x00R\x10vpcEndpointForS3\x12\x61\n\x10public_instances\x18\x15 \x01(\x0b\x32\x34.com.intentionet.bfe.assertions.PublicInstancesInputH\x00R\x0fpublicInstances\x12\x86\x01\n\x1fpublic_ip_not_in_private_subnet\x18\x16 \x01(\x0b\x32?.com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetInputH\x00R\x1apublicIpNotInPrivateSubnet\x12v\n\x19lb_targets_with_public_ip\x18\x17 \x01(\x0b\x32:.com.intentionet.bfe.assertions.LbTargetsWithPublicIpInputH\x00R\x15lbTargetsWithPublicIp\x12^\n\x0fstepping_stones\x18\x18 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.SteppingStonesInputH\x00R\x0esteppingStones\x12z\n\x16snmp_community_clients\x18\x19 \x01(\x0b\x32\x42.com.intentionet.bfe.assertions.SnmpCommunityClientsAssertionInputH\x00R\x14snmpCommunityClients\x12u\n\x15passive_bgp_no_subnet\x18\x1a \x01(\x0b\x32@.com.intentionet.bfe.assertions.PassiveBgpNoSubnetAssertionInputH\x00R\x12passiveBgpNoSubnet\x12g\n\x0f\x66ilter_behavior\x18\x1b \x01(\x0b\x32<.com.intentionet.bfe.assertions.FilterBehaviorAssertionInputH\x00R\x0e\x66ilterBehavior\x12s\n\x13undefined_reference\x18\x1c \x01(\x0b\x32@.com.intentionet.bfe.assertions.UndefinedReferenceAssertionInputH\x00R\x12undefinedReference\x12\x83\x01\n\x19\x62gp_session_establishment\x18\x1d \x01(\x0b\x32\x45.com.intentionet.bfe.assertions.BgpSessionEstablishmentAssertionInputH\x00R\x17\x62gpSessionEstablishment\x12t\n\x14\x61rista_mlag_analyzer\x18\x1e \x01(\x0b\x32@.com.intentionet.bfe.assertions.AristaMlagAnalyzerAssertionInputH\x00R\x12\x61ristaMlagAnalyzer\x12y\n\x15service_accessibility\x18* \x01(\x0b\x32\x42.com.intentionet.bfe.assertions.ServiceAccessibilityAssertionInputH\x00R\x14serviceAccessibility\x12p\n\x12service_protection\x18+ \x01(\x0b\x32?.com.intentionet.bfe.assertions.ServiceProtectionAssertionInputH\x00R\x11serviceProtection\x12k\n\x11\x64uplicate_bgp_asn\x18, \x01(\x0b\x32=.com.intentionet.bfe.assertions.DuplicateBgpAsnAssertionInputH\x00R\x0f\x64uplicateBgpAsn\x12 \n\x0b\x64\x65scription\x18\x03 \x01(\tR\x0b\x64\x65scription\x12\x14\n\x05title\x18\x04 \x01(\tR\x05titleB\x07\n\x05input\"\xe0\x12\n\x0f\x41ssertionResult\x12u\n\x14\x64\x65vices_have_servers\x18\x01 \x01(\x0b\x32\x41.com.intentionet.bfe.assertions.DevicesHaveServersAssertionResultH\x00R\x12\x64\x65vicesHaveServers\x12\x96\x01\n!security_group_does_not_have_rule\x18\x10 \x01(\x0b\x32K.com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResultH\x00R\x1csecurityGroupDoesNotHaveRule\x12t\n\x18sg_rules_blocked_by_nacl\x18\x11 \x01(\x0b\x32:.com.intentionet.bfe.assertions.SgRulesBlockedByNaclResultH\x00R\x14sgRulesBlockedByNacl\x12\x92\x01\n\x1f\x63ross_zone_policy_filters_flows\x18\x12 \x01(\x0b\x32J.com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResultH\x00R\x1b\x63rossZonePolicyFiltersFlows\x12r\n\x13\x64\x65vices_have_routes\x18\x13 \x01(\x0b\x32@.com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResultH\x00R\x11\x64\x65vicesHaveRoutes\x12g\n\x13vpc_endpoint_for_s3\x18\x14 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.VpcEndpointForS3ResultH\x00R\x10vpcEndpointForS3\x12\x62\n\x10public_instances\x18\x15 \x01(\x0b\x32\x35.com.intentionet.bfe.assertions.PublicInstancesResultH\x00R\x0fpublicInstances\x12\x87\x01\n\x1fpublic_ip_not_in_private_subnet\x18\x16 \x01(\x0b\x32@.com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetResultH\x00R\x1apublicIpNotInPrivateSubnet\x12w\n\x19lb_targets_with_public_ip\x18\x17 \x01(\x0b\x32;.com.intentionet.bfe.assertions.LbTargetsWithPublicIpResultH\x00R\x15lbTargetsWithPublicIp\x12_\n\x0fstepping_stones\x18\x18 \x01(\x0b\x32\x34.com.intentionet.bfe.assertions.SteppingStonesResultH\x00R\x0esteppingStones\x12{\n\x16snmp_community_clients\x18\x19 \x01(\x0b\x32\x43.com.intentionet.bfe.assertions.SnmpCommunityClientsAssertionResultH\x00R\x14snmpCommunityClients\x12v\n\x15passive_bgp_no_subnet\x18\x1a \x01(\x0b\x32\x41.com.intentionet.bfe.assertions.PassiveBgpNoSubnetAssertionResultH\x00R\x12passiveBgpNoSubnet\x12h\n\x0f\x66ilter_behavior\x18\x1b \x01(\x0b\x32=.com.intentionet.bfe.assertions.FilterBehaviorAssertionResultH\x00R\x0e\x66ilterBehavior\x12t\n\x13undefined_reference\x18\x1c \x01(\x0b\x32\x41.com.intentionet.bfe.assertions.UndefinedReferenceAssertionResultH\x00R\x12undefinedReference\x12\x84\x01\n\x19\x62gp_session_establishment\x18\x1d \x01(\x0b\x32\x46.com.intentionet.bfe.assertions.BgpSessionEstablishmentAssertionResultH\x00R\x17\x62gpSessionEstablishment\x12u\n\x14\x61rista_mlag_analyzer\x18\x1e \x01(\x0b\x32\x41.com.intentionet.bfe.assertions.AristaMlagAnalyzerAssertionResultH\x00R\x12\x61ristaMlagAnalyzer\x12z\n\x15service_accessibility\x18* \x01(\x0b\x32\x43.com.intentionet.bfe.assertions.ServiceAccessibilityAssertionResultH\x00R\x14serviceAccessibility\x12q\n\x12service_protection\x18+ \x01(\x0b\x32@.com.intentionet.bfe.assertions.ServiceProtectionAssertionResultH\x00R\x11serviceProtection\x12l\n\x11\x64uplicate_bgp_asn\x18, \x01(\x0b\x32>.com.intentionet.bfe.assertions.DuplicateBgpAsnAssertionResultH\x00R\x0f\x64uplicateBgpAsn\x12S\n\x08metadata\x18\x02 \x01(\x0b\x32\x37.com.intentionet.bfe.assertions.AssertionResultMetadataR\x08metadataB\x08\n\x06result\"\xcc\x02\n\x17\x41ssertionResultMetadata\x12G\n\x06status\x18\x01 \x01(\x0e\x32/.com.intentionet.bfe.assertions.AssertionStatusR\x06status\x12M\n\x05\x65rror\x18\x02 \x01(\x0b\x32\x37.com.intentionet.bfe.assertions.AssertionExecutionErrorR\x05\x65rror\x12\x44\n\x05stats\x18\x03 \x01(\x0b\x32..com.intentionet.bfe.assertions.AssertionStatsR\x05stats\x12S\n\x08warnings\x18\x04 \x01(\x0b\x32\x37.com.intentionet.bfe.assertions.AssertionResultWarningsR\x08warnings\"5\n\x17\x41ssertionResultWarnings\x12\x1a\n\x08warnings\x18\x01 \x03(\tR\x08warnings\"{\n\x17\x41ssertionExecutionError\x12\x46\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x32.com.intentionet.bfe.assertions.AssertionErrorCodeR\x04\x63ode\x12\x18\n\x07message\x18\x02 \x01(\tR\x07message\"x\n\x0e\x41ssertionStats\x12\x12\n\x04pass\x18\x01 \x01(\rR\x04pass\x12\x12\n\x04\x66\x61il\x18\x02 \x01(\rR\x04\x66\x61il\x12\x12\n\x04skip\x18\x03 \x01(\rR\x04skip\x12\x14\n\x05\x65rror\x18\x04 \x01(\rR\x05\x65rror\x12\x14\n\x05total\x18\x05 \x01(\rR\x05total\"M\n\x15RemediationSuggestion\x12 \n\x0b\x64\x65scription\x18\x01 \x01(\tR\x0b\x64\x65scription\x12\x12\n\x04link\x18\x02 \x01(\tR\x04link\"\xb6\x01\n DevicesHaveServersAssertionInput\x12J\n\x07\x64\x65vices\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DeviceFilterExprR\x07\x64\x65vices\x12\x46\n\x07servers\x18\x02 \x01(\x0b\x32,.com.intentionet.bfe.assertions.MatchServersR\x07servers\"\x81\x03\n!DevicesHaveServersAssertionResult\x12g\n\tviolators\x18\x01 \x03(\x0b\x32I.com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult.ElementR\tviolators\x12\x33\n\x15violator_descriptions\x18\x02 \x03(\tR\x14violatorDescriptions\x1a\xbd\x01\n\x07\x45lement\x12\x39\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.DeviceR\x06\x64\x65vice\x12\x18\n\x07servers\x18\x02 \x03(\tR\x07servers\x12]\n\x11\x64\x65scription_index\x18\x03 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndex\"\x8b\x01\n\x1fPublicIpNotInPrivateSubnetInput\x12h\n\x12network_interfaces\x18\x01 \x01(\x0b\x32\x39.com.intentionet.bfe.assertions.AwsNetworkInterfaceFilterR\x11networkInterfaces\"\x85\x05\n PublicIpNotInPrivateSubnetResult\x12g\n\tviolators\x18\x01 \x03(\x0b\x32I.com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetResult.ViolatorR\tviolators\x12\x33\n\x15violator_descriptions\x18\x02 \x03(\tR\x14violatorDescriptions\x1a\xc2\x03\n\x08Violator\x12J\n\x06subnet\x18\x01 \x01(\x0b\x32\x32.com.intentionet.bfe.proto.datamodel.aws.AwsSubnetR\x06subnet\x12N\n\x03\x65ni\x18\x02 \x01(\x0b\x32<.com.intentionet.bfe.proto.datamodel.aws.AwsNetworkInterfaceR\x03\x65ni\x12P\n\x08instance\x18\x05 \x01(\x0b\x32\x34.com.intentionet.bfe.proto.datamodel.aws.AwsInstanceR\x08instance\x12Q\n\x08location\x18\x08 \x01(\x0b\x32\x35.com.intentionet.bfe.proto.datamodel.aws.AwsAccRegVpcR\x08location\x12]\n\x11\x64\x65scription_index\x18\t \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndexJ\x04\x08\x03\x10\x04J\x04\x08\x04\x10\x05J\x04\x08\x06\x10\x07J\x04\x08\x07\x10\x08\"m\n\x1aLbTargetsWithPublicIpInput\x12O\n\tinstances\x18\x01 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.AwsInstanceFilterR\tinstances\"\xcf\x05\n\x1bLbTargetsWithPublicIpResult\x12\x62\n\tviolators\x18\x01 \x03(\x0b\x32\x44.com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult.ViolatorR\tviolators\x12\x33\n\x15violator_descriptions\x18\x02 \x03(\tR\x14violatorDescriptions\x1a\x9e\x02\n\x08Violator\x12P\n\x08instance\x18\x01 \x01(\x0b\x32\x34.com.intentionet.bfe.proto.datamodel.aws.AwsInstanceR\x08instance\x12\x61\n\tlb_detail\x18\x02 \x03(\x0b\x32\x44.com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult.LBDetailR\x08lbDetail\x12]\n\x11\x64\x65scription_index\x18\x03 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndex\x1a\xf5\x01\n\x08LBDetail\x12]\n\rload_balancer\x18\x01 \x01(\x0b\x32\x38.com.intentionet.bfe.proto.datamodel.aws.AwsLoadBalancerR\x0cloadBalancer\x12Z\n\x0ctarget_group\x18\x02 \x01(\x0b\x32\x37.com.intentionet.bfe.proto.datamodel.aws.AwsTargetGroupR\x0btargetGroup\x12\x1a\n\x08protocol\x18\x03 \x01(\tR\x08protocol\x12\x12\n\x04port\x18\x04 \x01(\rR\x04port\"\xba\x01\n\x14PublicInstancesInput\x12Q\n\rexpected_tags\x18\x01 \x03(\x0b\x32,.com.intentionet.bfe.proto.datamodel.aws.TagR\x0c\x65xpectedTags\x12O\n\tinstances\x18\x02 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.AwsInstanceFilterR\tinstances\"\xb9\x03\n\x15PublicInstancesResult\x12\\\n\tviolators\x18\x01 \x03(\x0b\x32>.com.intentionet.bfe.assertions.PublicInstancesResult.ViolatorR\tviolators\x12\x33\n\x15violator_descriptions\x18\x02 \x03(\tR\x14violatorDescriptions\x1a\x8c\x02\n\x08Violator\x12P\n\x08instance\x18\x01 \x01(\x0b\x32\x34.com.intentionet.bfe.proto.datamodel.aws.AwsInstanceR\x08instance\x12O\n\x0cmissing_tags\x18\x02 \x03(\x0b\x32,.com.intentionet.bfe.proto.datamodel.aws.TagR\x0bmissingTags\x12]\n\x11\x64\x65scription_index\x18\x03 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndex\"\"\n PassiveBgpNoSubnetAssertionInput\"\xde\x01\n!PassiveBgpNoSubnetAssertionResult\x12g\n\tviolators\x18\x01 \x03(\x0b\x32I.com.intentionet.bfe.assertions.PassiveBgpNoSubnetAssertionResult.ElementR\tviolators\x1aP\n\x07\x45lement\x12\x45\n\x0cpassive_peer\x18\x01 \x01(\x0b\x32\".com.intentionet.datamodel.BgpPeerR\x0bpassivePeer\"\xae\x02\n*SecurityGroupDoesNotHaveRuleAssertionInput\x12\\\n\x0fsecurity_groups\x18\x05 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.SecurityGroupFilterR\x0esecurityGroups\x12G\n\trule_type\x18\x03 \x01(\x0e\x32*.com.intentionet.bfe.assertions.SgRuleTypeR\x08ruleType\x12M\n\x05rules\x18\x04 \x03(\x0b\x32\x37.com.intentionet.bfe.assertions.MatchSecurityGroupRulesR\x05rulesJ\x04\x08\x01\x10\x02J\x04\x08\x02\x10\x03\"\xa2\x03\n+SecurityGroupDoesNotHaveRuleAssertionResult\x12q\n\tviolators\x18\x01 \x03(\x0b\x32S.com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResult.ElementR\tviolators\x12\x33\n\x15violator_descriptions\x18\x02 \x03(\tR\x14violatorDescriptions\x1a\xca\x01\n\x07\x45lement\x12`\n\x0esecurity_group\x18\x01 \x01(\x0b\x32\x39.com.intentionet.bfe.proto.datamodel.aws.AwsSecurityGroupR\rsecurityGroup\x12]\n\x11\x64\x65scription_index\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndex\"\x1b\n\x19SgRulesBlockedByNaclInput\"\xe7\x05\n\x1aSgRulesBlockedByNaclResult\x12`\n\tviolators\x18\x01 \x03(\x0b\x32\x42.com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.ElementR\tviolators\x12\x33\n\x15violator_descriptions\x18\x02 \x03(\tR\x14violatorDescriptions\x1a\xb1\x04\n\x07\x45lement\x12`\n\x0esecurity_group\x18\x02 \x01(\x0b\x32\x39.com.intentionet.bfe.proto.datamodel.aws.AwsSecurityGroupR\rsecurityGroup\x12\x17\n\x07nacl_id\x18\x04 \x01(\tR\x06naclId\x12t\n\x16inbound_security_rules\x18\x06 \x03(\x0b\x32>.com.intentionet.bfe.proto.datamodel.aws.AwsSecurityGroup.RuleR\x14inboundSecurityRules\x12v\n\x17outbound_security_rules\x18\x07 \x03(\x0b\x32>.com.intentionet.bfe.proto.datamodel.aws.AwsSecurityGroup.RuleR\x15outboundSecurityRules\x12L\n\x07subnets\x18\x08 \x03(\x0b\x32\x32.com.intentionet.bfe.proto.datamodel.aws.AwsSubnetR\x07subnets\x12]\n\x11\x64\x65scription_index\x18\t \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndexJ\x04\x08\x01\x10\x02J\x04\x08\x03\x10\x04J\x04\x08\x05\x10\x06\"\x81\x01\n\x13SteppingStonesInput\x12\x17\n\x07\x64st_ips\x18\x01 \x01(\tR\x06\x64stIps\x12Q\n\rincluded_tags\x18\x02 \x03(\x0b\x32,.com.intentionet.bfe.proto.datamodel.aws.TagR\x0cincludedTags\"\x9d\x03\n\x14SteppingStonesResult\x12[\n\tviolators\x18\x01 \x03(\x0b\x32=.com.intentionet.bfe.assertions.SteppingStonesResult.ViolatorR\tviolators\x12\x33\n\x15violator_descriptions\x18\x02 \x03(\tR\x14violatorDescriptions\x1a\xf2\x01\n\x08Violator\x12P\n\x08instance\x18\x01 \x01(\x0b\x32\x34.com.intentionet.bfe.proto.datamodel.aws.AwsInstanceR\x08instance\x12\x35\n\x05\x66lows\x18\x02 \x03(\x0b\x32\x1f.com.intentionet.datamodel.FlowR\x05\x66lows\x12]\n\x11\x64\x65scription_index\x18\x03 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndex\"h\n\x15VpcEndpointForS3Input\x12O\n\tinstances\x18\x01 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.AwsInstanceFilterR\tinstances\"\xc6\x03\n\x16VpcEndpointForS3Result\x12]\n\tviolators\x18\x01 \x03(\x0b\x32?.com.intentionet.bfe.assertions.VpcEndpointForS3Result.ViolatorR\tviolators\x12\x33\n\x15violator_descriptions\x18\x02 \x03(\tR\x14violatorDescriptions\x1a\x97\x02\n\x08Violator\x12P\n\x08instance\x18\x01 \x01(\x0b\x32\x34.com.intentionet.bfe.proto.datamodel.aws.AwsInstanceR\x08instance\x12\x35\n\x05\x66lows\x18\x02 \x03(\x0b\x32\x1f.com.intentionet.datamodel.FlowR\x05\x66lows\x12#\n\rvpc_endpoints\x18\x03 \x03(\tR\x0cvpcEndpoints\x12]\n\x11\x64\x65scription_index\x18\x04 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DescriptionIndexR\x10\x64\x65scriptionIndex*\xa1\x01\n\x0f\x41ssertionStatus\x12\x1c\n\x18\x41SSERTION_STATUS_UNKNOWN\x10\x00\x12\x19\n\x15\x41SSERTION_STATUS_PASS\x10\x01\x12\x19\n\x15\x41SSERTION_STATUS_FAIL\x10\x02\x12\x1a\n\x16\x41SSERTION_STATUS_ERROR\x10\x03\x12\x1e\n\x1a\x41SSERTION_STATUS_PASS_WARN\x10\x04*d\n\x12\x41ssertionErrorCode\x12\x0b\n\x07UNKNOWN\x10\x00\x12\r\n\tBFE_ERROR\x10\x01\x12\x1c\n\x18UNSATISFIED_PRECONDITION\x10\x02\x12\x14\n\x10INVALID_ARGUMENT\x10\x03*Z\n\nSgRuleType\x12\x17\n\x13SG_RULE_TYPE_EITHER\x10\x00\x12\x18\n\x14SG_RULE_TYPE_INBOUND\x10\x01\x12\x19\n\x15SG_RULE_TYPE_OUTBOUND\x10\x02\x62\x06proto3'
  ,
  dependencies=[intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_assertions_dot_bgp__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_assertions_dot_filters__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_assertions_dot_mlag__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_assertions_dot_snmp__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_assertions_dot_reachability__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_assertions_dot_reference__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_assertions_dot_route__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_assertions_dot_violations__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_datamodel_dot_device__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_datamodel_dot_flow__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_datamodel_dot_bgp__pb2.DESCRIPTOR,])

_ASSERTIONSTATUS = _descriptor.EnumDescriptor(
  name='AssertionStatus',
  full_name='com.intentionet.bfe.assertions.AssertionStatus',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ASSERTION_STATUS_UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ASSERTION_STATUS_PASS', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ASSERTION_STATUS_FAIL', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ASSERTION_STATUS_ERROR', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ASSERTION_STATUS_PASS_WARN', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=11878,
  serialized_end=12039,
)
_sym_db.RegisterEnumDescriptor(_ASSERTIONSTATUS)

AssertionStatus = enum_type_wrapper.EnumTypeWrapper(_ASSERTIONSTATUS)
_ASSERTIONERRORCODE = _descriptor.EnumDescriptor(
  name='AssertionErrorCode',
  full_name='com.intentionet.bfe.assertions.AssertionErrorCode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='BFE_ERROR', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='UNSATISFIED_PRECONDITION', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INVALID_ARGUMENT', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=12041,
  serialized_end=12141,
)
_sym_db.RegisterEnumDescriptor(_ASSERTIONERRORCODE)

AssertionErrorCode = enum_type_wrapper.EnumTypeWrapper(_ASSERTIONERRORCODE)
_SGRULETYPE = _descriptor.EnumDescriptor(
  name='SgRuleType',
  full_name='com.intentionet.bfe.assertions.SgRuleType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SG_RULE_TYPE_EITHER', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SG_RULE_TYPE_INBOUND', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SG_RULE_TYPE_OUTBOUND', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=12143,
  serialized_end=12233,
)
_sym_db.RegisterEnumDescriptor(_SGRULETYPE)

SgRuleType = enum_type_wrapper.EnumTypeWrapper(_SGRULETYPE)
ASSERTION_STATUS_UNKNOWN = 0
ASSERTION_STATUS_PASS = 1
ASSERTION_STATUS_FAIL = 2
ASSERTION_STATUS_ERROR = 3
ASSERTION_STATUS_PASS_WARN = 4
UNKNOWN = 0
BFE_ERROR = 1
UNSATISFIED_PRECONDITION = 2
INVALID_ARGUMENT = 3
SG_RULE_TYPE_EITHER = 0
SG_RULE_TYPE_INBOUND = 1
SG_RULE_TYPE_OUTBOUND = 2



_ASSERTIONINPUT = _descriptor.Descriptor(
  name='AssertionInput',
  full_name='com.intentionet.bfe.assertions.AssertionInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='devices_have_servers', full_name='com.intentionet.bfe.assertions.AssertionInput.devices_have_servers', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='devicesHaveServers', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='security_group_does_not_have_rule', full_name='com.intentionet.bfe.assertions.AssertionInput.security_group_does_not_have_rule', index=1,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='securityGroupDoesNotHaveRule', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sg_rules_blocked_by_nacl', full_name='com.intentionet.bfe.assertions.AssertionInput.sg_rules_blocked_by_nacl', index=2,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='sgRulesBlockedByNacl', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cross_zone_policy_filters_flows', full_name='com.intentionet.bfe.assertions.AssertionInput.cross_zone_policy_filters_flows', index=3,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='crossZonePolicyFiltersFlows', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='devices_have_routes', full_name='com.intentionet.bfe.assertions.AssertionInput.devices_have_routes', index=4,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='devicesHaveRoutes', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='vpc_endpoint_for_s3', full_name='com.intentionet.bfe.assertions.AssertionInput.vpc_endpoint_for_s3', index=5,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='vpcEndpointForS3', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='public_instances', full_name='com.intentionet.bfe.assertions.AssertionInput.public_instances', index=6,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='publicInstances', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='public_ip_not_in_private_subnet', full_name='com.intentionet.bfe.assertions.AssertionInput.public_ip_not_in_private_subnet', index=7,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='publicIpNotInPrivateSubnet', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='lb_targets_with_public_ip', full_name='com.intentionet.bfe.assertions.AssertionInput.lb_targets_with_public_ip', index=8,
      number=23, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='lbTargetsWithPublicIp', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='stepping_stones', full_name='com.intentionet.bfe.assertions.AssertionInput.stepping_stones', index=9,
      number=24, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='steppingStones', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='snmp_community_clients', full_name='com.intentionet.bfe.assertions.AssertionInput.snmp_community_clients', index=10,
      number=25, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='snmpCommunityClients', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='passive_bgp_no_subnet', full_name='com.intentionet.bfe.assertions.AssertionInput.passive_bgp_no_subnet', index=11,
      number=26, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='passiveBgpNoSubnet', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='filter_behavior', full_name='com.intentionet.bfe.assertions.AssertionInput.filter_behavior', index=12,
      number=27, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='filterBehavior', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='undefined_reference', full_name='com.intentionet.bfe.assertions.AssertionInput.undefined_reference', index=13,
      number=28, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='undefinedReference', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bgp_session_establishment', full_name='com.intentionet.bfe.assertions.AssertionInput.bgp_session_establishment', index=14,
      number=29, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='bgpSessionEstablishment', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='arista_mlag_analyzer', full_name='com.intentionet.bfe.assertions.AssertionInput.arista_mlag_analyzer', index=15,
      number=30, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='aristaMlagAnalyzer', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='service_accessibility', full_name='com.intentionet.bfe.assertions.AssertionInput.service_accessibility', index=16,
      number=42, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='serviceAccessibility', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='service_protection', full_name='com.intentionet.bfe.assertions.AssertionInput.service_protection', index=17,
      number=43, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='serviceProtection', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='duplicate_bgp_asn', full_name='com.intentionet.bfe.assertions.AssertionInput.duplicate_bgp_asn', index=18,
      number=44, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='duplicateBgpAsn', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='description', full_name='com.intentionet.bfe.assertions.AssertionInput.description', index=19,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='description', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='title', full_name='com.intentionet.bfe.assertions.AssertionInput.title', index=20,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='title', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='input', full_name='com.intentionet.bfe.assertions.AssertionInput.input',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=704,
  serialized_end=3054,
)


_ASSERTIONRESULT = _descriptor.Descriptor(
  name='AssertionResult',
  full_name='com.intentionet.bfe.assertions.AssertionResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='devices_have_servers', full_name='com.intentionet.bfe.assertions.AssertionResult.devices_have_servers', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='devicesHaveServers', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='security_group_does_not_have_rule', full_name='com.intentionet.bfe.assertions.AssertionResult.security_group_does_not_have_rule', index=1,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='securityGroupDoesNotHaveRule', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sg_rules_blocked_by_nacl', full_name='com.intentionet.bfe.assertions.AssertionResult.sg_rules_blocked_by_nacl', index=2,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='sgRulesBlockedByNacl', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cross_zone_policy_filters_flows', full_name='com.intentionet.bfe.assertions.AssertionResult.cross_zone_policy_filters_flows', index=3,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='crossZonePolicyFiltersFlows', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='devices_have_routes', full_name='com.intentionet.bfe.assertions.AssertionResult.devices_have_routes', index=4,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='devicesHaveRoutes', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='vpc_endpoint_for_s3', full_name='com.intentionet.bfe.assertions.AssertionResult.vpc_endpoint_for_s3', index=5,
      number=20, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='vpcEndpointForS3', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='public_instances', full_name='com.intentionet.bfe.assertions.AssertionResult.public_instances', index=6,
      number=21, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='publicInstances', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='public_ip_not_in_private_subnet', full_name='com.intentionet.bfe.assertions.AssertionResult.public_ip_not_in_private_subnet', index=7,
      number=22, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='publicIpNotInPrivateSubnet', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='lb_targets_with_public_ip', full_name='com.intentionet.bfe.assertions.AssertionResult.lb_targets_with_public_ip', index=8,
      number=23, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='lbTargetsWithPublicIp', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='stepping_stones', full_name='com.intentionet.bfe.assertions.AssertionResult.stepping_stones', index=9,
      number=24, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='steppingStones', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='snmp_community_clients', full_name='com.intentionet.bfe.assertions.AssertionResult.snmp_community_clients', index=10,
      number=25, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='snmpCommunityClients', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='passive_bgp_no_subnet', full_name='com.intentionet.bfe.assertions.AssertionResult.passive_bgp_no_subnet', index=11,
      number=26, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='passiveBgpNoSubnet', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='filter_behavior', full_name='com.intentionet.bfe.assertions.AssertionResult.filter_behavior', index=12,
      number=27, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='filterBehavior', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='undefined_reference', full_name='com.intentionet.bfe.assertions.AssertionResult.undefined_reference', index=13,
      number=28, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='undefinedReference', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='bgp_session_establishment', full_name='com.intentionet.bfe.assertions.AssertionResult.bgp_session_establishment', index=14,
      number=29, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='bgpSessionEstablishment', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='arista_mlag_analyzer', full_name='com.intentionet.bfe.assertions.AssertionResult.arista_mlag_analyzer', index=15,
      number=30, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='aristaMlagAnalyzer', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='service_accessibility', full_name='com.intentionet.bfe.assertions.AssertionResult.service_accessibility', index=16,
      number=42, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='serviceAccessibility', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='service_protection', full_name='com.intentionet.bfe.assertions.AssertionResult.service_protection', index=17,
      number=43, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='serviceProtection', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='duplicate_bgp_asn', full_name='com.intentionet.bfe.assertions.AssertionResult.duplicate_bgp_asn', index=18,
      number=44, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='duplicateBgpAsn', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='metadata', full_name='com.intentionet.bfe.assertions.AssertionResult.metadata', index=19,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='metadata', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='result', full_name='com.intentionet.bfe.assertions.AssertionResult.result',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=3057,
  serialized_end=5457,
)


_ASSERTIONRESULTMETADATA = _descriptor.Descriptor(
  name='AssertionResultMetadata',
  full_name='com.intentionet.bfe.assertions.AssertionResultMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='com.intentionet.bfe.assertions.AssertionResultMetadata.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='status', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='error', full_name='com.intentionet.bfe.assertions.AssertionResultMetadata.error', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='error', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='stats', full_name='com.intentionet.bfe.assertions.AssertionResultMetadata.stats', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='stats', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='warnings', full_name='com.intentionet.bfe.assertions.AssertionResultMetadata.warnings', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='warnings', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5460,
  serialized_end=5792,
)


_ASSERTIONRESULTWARNINGS = _descriptor.Descriptor(
  name='AssertionResultWarnings',
  full_name='com.intentionet.bfe.assertions.AssertionResultWarnings',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='warnings', full_name='com.intentionet.bfe.assertions.AssertionResultWarnings.warnings', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='warnings', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5794,
  serialized_end=5847,
)


_ASSERTIONEXECUTIONERROR = _descriptor.Descriptor(
  name='AssertionExecutionError',
  full_name='com.intentionet.bfe.assertions.AssertionExecutionError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='com.intentionet.bfe.assertions.AssertionExecutionError.code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='code', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='message', full_name='com.intentionet.bfe.assertions.AssertionExecutionError.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='message', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5849,
  serialized_end=5972,
)


_ASSERTIONSTATS = _descriptor.Descriptor(
  name='AssertionStats',
  full_name='com.intentionet.bfe.assertions.AssertionStats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='pass', full_name='com.intentionet.bfe.assertions.AssertionStats.pass', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='pass', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='fail', full_name='com.intentionet.bfe.assertions.AssertionStats.fail', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='fail', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='skip', full_name='com.intentionet.bfe.assertions.AssertionStats.skip', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='skip', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='error', full_name='com.intentionet.bfe.assertions.AssertionStats.error', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='error', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='total', full_name='com.intentionet.bfe.assertions.AssertionStats.total', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='total', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5974,
  serialized_end=6094,
)


_REMEDIATIONSUGGESTION = _descriptor.Descriptor(
  name='RemediationSuggestion',
  full_name='com.intentionet.bfe.assertions.RemediationSuggestion',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='description', full_name='com.intentionet.bfe.assertions.RemediationSuggestion.description', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='description', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='link', full_name='com.intentionet.bfe.assertions.RemediationSuggestion.link', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='link', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6096,
  serialized_end=6173,
)


_DEVICESHAVESERVERSASSERTIONINPUT = _descriptor.Descriptor(
  name='DevicesHaveServersAssertionInput',
  full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='devices', full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionInput.devices', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='devices', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='servers', full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionInput.servers', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='servers', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6176,
  serialized_end=6358,
)


_DEVICESHAVESERVERSASSERTIONRESULT_ELEMENT = _descriptor.Descriptor(
  name='Element',
  full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult.Element',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='device', full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult.Element.device', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='device', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='servers', full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult.Element.servers', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='servers', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='description_index', full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult.Element.description_index', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='descriptionIndex', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6557,
  serialized_end=6746,
)

_DEVICESHAVESERVERSASSERTIONRESULT = _descriptor.Descriptor(
  name='DevicesHaveServersAssertionResult',
  full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='violators', full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult.violators', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violators', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='violator_descriptions', full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult.violator_descriptions', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violatorDescriptions', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_DEVICESHAVESERVERSASSERTIONRESULT_ELEMENT, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6361,
  serialized_end=6746,
)


_PUBLICIPNOTINPRIVATESUBNETINPUT = _descriptor.Descriptor(
  name='PublicIpNotInPrivateSubnetInput',
  full_name='com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='network_interfaces', full_name='com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetInput.network_interfaces', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='networkInterfaces', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6749,
  serialized_end=6888,
)


_PUBLICIPNOTINPRIVATESUBNETRESULT_VIOLATOR = _descriptor.Descriptor(
  name='Violator',
  full_name='com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetResult.Violator',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='subnet', full_name='com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetResult.Violator.subnet', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='subnet', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='eni', full_name='com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetResult.Violator.eni', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='eni', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='instance', full_name='com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetResult.Violator.instance', index=2,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='instance', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='location', full_name='com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetResult.Violator.location', index=3,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='location', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='description_index', full_name='com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetResult.Violator.description_index', index=4,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='descriptionIndex', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7086,
  serialized_end=7536,
)

_PUBLICIPNOTINPRIVATESUBNETRESULT = _descriptor.Descriptor(
  name='PublicIpNotInPrivateSubnetResult',
  full_name='com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='violators', full_name='com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetResult.violators', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violators', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='violator_descriptions', full_name='com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetResult.violator_descriptions', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violatorDescriptions', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_PUBLICIPNOTINPRIVATESUBNETRESULT_VIOLATOR, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6891,
  serialized_end=7536,
)


_LBTARGETSWITHPUBLICIPINPUT = _descriptor.Descriptor(
  name='LbTargetsWithPublicIpInput',
  full_name='com.intentionet.bfe.assertions.LbTargetsWithPublicIpInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instances', full_name='com.intentionet.bfe.assertions.LbTargetsWithPublicIpInput.instances', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='instances', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7538,
  serialized_end=7647,
)


_LBTARGETSWITHPUBLICIPRESULT_VIOLATOR = _descriptor.Descriptor(
  name='Violator',
  full_name='com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult.Violator',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance', full_name='com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult.Violator.instance', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='instance', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='lb_detail', full_name='com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult.Violator.lb_detail', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='lbDetail', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='description_index', full_name='com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult.Violator.description_index', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='descriptionIndex', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7835,
  serialized_end=8121,
)

_LBTARGETSWITHPUBLICIPRESULT_LBDETAIL = _descriptor.Descriptor(
  name='LBDetail',
  full_name='com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult.LBDetail',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='load_balancer', full_name='com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult.LBDetail.load_balancer', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='loadBalancer', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='target_group', full_name='com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult.LBDetail.target_group', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='targetGroup', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='protocol', full_name='com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult.LBDetail.protocol', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='protocol', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='port', full_name='com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult.LBDetail.port', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='port', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8124,
  serialized_end=8369,
)

_LBTARGETSWITHPUBLICIPRESULT = _descriptor.Descriptor(
  name='LbTargetsWithPublicIpResult',
  full_name='com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='violators', full_name='com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult.violators', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violators', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='violator_descriptions', full_name='com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult.violator_descriptions', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violatorDescriptions', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LBTARGETSWITHPUBLICIPRESULT_VIOLATOR, _LBTARGETSWITHPUBLICIPRESULT_LBDETAIL, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7650,
  serialized_end=8369,
)


_PUBLICINSTANCESINPUT = _descriptor.Descriptor(
  name='PublicInstancesInput',
  full_name='com.intentionet.bfe.assertions.PublicInstancesInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='expected_tags', full_name='com.intentionet.bfe.assertions.PublicInstancesInput.expected_tags', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='expectedTags', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='instances', full_name='com.intentionet.bfe.assertions.PublicInstancesInput.instances', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='instances', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8372,
  serialized_end=8558,
)


_PUBLICINSTANCESRESULT_VIOLATOR = _descriptor.Descriptor(
  name='Violator',
  full_name='com.intentionet.bfe.assertions.PublicInstancesResult.Violator',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance', full_name='com.intentionet.bfe.assertions.PublicInstancesResult.Violator.instance', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='instance', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='missing_tags', full_name='com.intentionet.bfe.assertions.PublicInstancesResult.Violator.missing_tags', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='missingTags', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='description_index', full_name='com.intentionet.bfe.assertions.PublicInstancesResult.Violator.description_index', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='descriptionIndex', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8734,
  serialized_end=9002,
)

_PUBLICINSTANCESRESULT = _descriptor.Descriptor(
  name='PublicInstancesResult',
  full_name='com.intentionet.bfe.assertions.PublicInstancesResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='violators', full_name='com.intentionet.bfe.assertions.PublicInstancesResult.violators', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violators', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='violator_descriptions', full_name='com.intentionet.bfe.assertions.PublicInstancesResult.violator_descriptions', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violatorDescriptions', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_PUBLICINSTANCESRESULT_VIOLATOR, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8561,
  serialized_end=9002,
)


_PASSIVEBGPNOSUBNETASSERTIONINPUT = _descriptor.Descriptor(
  name='PassiveBgpNoSubnetAssertionInput',
  full_name='com.intentionet.bfe.assertions.PassiveBgpNoSubnetAssertionInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9004,
  serialized_end=9038,
)


_PASSIVEBGPNOSUBNETASSERTIONRESULT_ELEMENT = _descriptor.Descriptor(
  name='Element',
  full_name='com.intentionet.bfe.assertions.PassiveBgpNoSubnetAssertionResult.Element',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='passive_peer', full_name='com.intentionet.bfe.assertions.PassiveBgpNoSubnetAssertionResult.Element.passive_peer', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='passivePeer', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9183,
  serialized_end=9263,
)

_PASSIVEBGPNOSUBNETASSERTIONRESULT = _descriptor.Descriptor(
  name='PassiveBgpNoSubnetAssertionResult',
  full_name='com.intentionet.bfe.assertions.PassiveBgpNoSubnetAssertionResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='violators', full_name='com.intentionet.bfe.assertions.PassiveBgpNoSubnetAssertionResult.violators', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violators', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_PASSIVEBGPNOSUBNETASSERTIONRESULT_ELEMENT, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9041,
  serialized_end=9263,
)


_SECURITYGROUPDOESNOTHAVERULEASSERTIONINPUT = _descriptor.Descriptor(
  name='SecurityGroupDoesNotHaveRuleAssertionInput',
  full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='security_groups', full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionInput.security_groups', index=0,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='securityGroups', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rule_type', full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionInput.rule_type', index=1,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='ruleType', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='rules', full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionInput.rules', index=2,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='rules', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9266,
  serialized_end=9568,
)


_SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT_ELEMENT = _descriptor.Descriptor(
  name='Element',
  full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResult.Element',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='security_group', full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResult.Element.security_group', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='securityGroup', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='description_index', full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResult.Element.description_index', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='descriptionIndex', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9787,
  serialized_end=9989,
)

_SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT = _descriptor.Descriptor(
  name='SecurityGroupDoesNotHaveRuleAssertionResult',
  full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='violators', full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResult.violators', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violators', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='violator_descriptions', full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResult.violator_descriptions', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violatorDescriptions', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT_ELEMENT, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9571,
  serialized_end=9989,
)


_SGRULESBLOCKEDBYNACLINPUT = _descriptor.Descriptor(
  name='SgRulesBlockedByNaclInput',
  full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9991,
  serialized_end=10018,
)


_SGRULESBLOCKEDBYNACLRESULT_ELEMENT = _descriptor.Descriptor(
  name='Element',
  full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.Element',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='security_group', full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.Element.security_group', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='securityGroup', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='nacl_id', full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.Element.nacl_id', index=1,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='naclId', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='inbound_security_rules', full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.Element.inbound_security_rules', index=2,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='inboundSecurityRules', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='outbound_security_rules', full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.Element.outbound_security_rules', index=3,
      number=7, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='outboundSecurityRules', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='subnets', full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.Element.subnets', index=4,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='subnets', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='description_index', full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.Element.description_index', index=5,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='descriptionIndex', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10203,
  serialized_end=10764,
)

_SGRULESBLOCKEDBYNACLRESULT = _descriptor.Descriptor(
  name='SgRulesBlockedByNaclResult',
  full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='violators', full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.violators', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violators', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='violator_descriptions', full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.violator_descriptions', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violatorDescriptions', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_SGRULESBLOCKEDBYNACLRESULT_ELEMENT, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10021,
  serialized_end=10764,
)


_STEPPINGSTONESINPUT = _descriptor.Descriptor(
  name='SteppingStonesInput',
  full_name='com.intentionet.bfe.assertions.SteppingStonesInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='dst_ips', full_name='com.intentionet.bfe.assertions.SteppingStonesInput.dst_ips', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='dstIps', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='included_tags', full_name='com.intentionet.bfe.assertions.SteppingStonesInput.included_tags', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='includedTags', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10767,
  serialized_end=10896,
)


_STEPPINGSTONESRESULT_VIOLATOR = _descriptor.Descriptor(
  name='Violator',
  full_name='com.intentionet.bfe.assertions.SteppingStonesResult.Violator',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance', full_name='com.intentionet.bfe.assertions.SteppingStonesResult.Violator.instance', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='instance', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='flows', full_name='com.intentionet.bfe.assertions.SteppingStonesResult.Violator.flows', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='flows', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='description_index', full_name='com.intentionet.bfe.assertions.SteppingStonesResult.Violator.description_index', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='descriptionIndex', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11070,
  serialized_end=11312,
)

_STEPPINGSTONESRESULT = _descriptor.Descriptor(
  name='SteppingStonesResult',
  full_name='com.intentionet.bfe.assertions.SteppingStonesResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='violators', full_name='com.intentionet.bfe.assertions.SteppingStonesResult.violators', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violators', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='violator_descriptions', full_name='com.intentionet.bfe.assertions.SteppingStonesResult.violator_descriptions', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violatorDescriptions', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_STEPPINGSTONESRESULT_VIOLATOR, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10899,
  serialized_end=11312,
)


_VPCENDPOINTFORS3INPUT = _descriptor.Descriptor(
  name='VpcEndpointForS3Input',
  full_name='com.intentionet.bfe.assertions.VpcEndpointForS3Input',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instances', full_name='com.intentionet.bfe.assertions.VpcEndpointForS3Input.instances', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='instances', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11314,
  serialized_end=11418,
)


_VPCENDPOINTFORS3RESULT_VIOLATOR = _descriptor.Descriptor(
  name='Violator',
  full_name='com.intentionet.bfe.assertions.VpcEndpointForS3Result.Violator',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance', full_name='com.intentionet.bfe.assertions.VpcEndpointForS3Result.Violator.instance', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='instance', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='flows', full_name='com.intentionet.bfe.assertions.VpcEndpointForS3Result.Violator.flows', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='flows', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='vpc_endpoints', full_name='com.intentionet.bfe.assertions.VpcEndpointForS3Result.Violator.vpc_endpoints', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='vpcEndpoints', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='description_index', full_name='com.intentionet.bfe.assertions.VpcEndpointForS3Result.Violator.description_index', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='descriptionIndex', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11596,
  serialized_end=11875,
)

_VPCENDPOINTFORS3RESULT = _descriptor.Descriptor(
  name='VpcEndpointForS3Result',
  full_name='com.intentionet.bfe.assertions.VpcEndpointForS3Result',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='violators', full_name='com.intentionet.bfe.assertions.VpcEndpointForS3Result.violators', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violators', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='violator_descriptions', full_name='com.intentionet.bfe.assertions.VpcEndpointForS3Result.violator_descriptions', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='violatorDescriptions', file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_VPCENDPOINTFORS3RESULT_VIOLATOR, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11421,
  serialized_end=11875,
)

_ASSERTIONINPUT.fields_by_name['devices_have_servers'].message_type = _DEVICESHAVESERVERSASSERTIONINPUT
_ASSERTIONINPUT.fields_by_name['security_group_does_not_have_rule'].message_type = _SECURITYGROUPDOESNOTHAVERULEASSERTIONINPUT
_ASSERTIONINPUT.fields_by_name['sg_rules_blocked_by_nacl'].message_type = _SGRULESBLOCKEDBYNACLINPUT
_ASSERTIONINPUT.fields_by_name['cross_zone_policy_filters_flows'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_filters__pb2._CROSSZONEPOLICYFILTERSFLOWSASSERTIONINPUT
_ASSERTIONINPUT.fields_by_name['devices_have_routes'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_route__pb2._DEVICESHAVEROUTESASSERTIONINPUT
_ASSERTIONINPUT.fields_by_name['vpc_endpoint_for_s3'].message_type = _VPCENDPOINTFORS3INPUT
_ASSERTIONINPUT.fields_by_name['public_instances'].message_type = _PUBLICINSTANCESINPUT
_ASSERTIONINPUT.fields_by_name['public_ip_not_in_private_subnet'].message_type = _PUBLICIPNOTINPRIVATESUBNETINPUT
_ASSERTIONINPUT.fields_by_name['lb_targets_with_public_ip'].message_type = _LBTARGETSWITHPUBLICIPINPUT
_ASSERTIONINPUT.fields_by_name['stepping_stones'].message_type = _STEPPINGSTONESINPUT
_ASSERTIONINPUT.fields_by_name['snmp_community_clients'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_snmp__pb2._SNMPCOMMUNITYCLIENTSASSERTIONINPUT
_ASSERTIONINPUT.fields_by_name['passive_bgp_no_subnet'].message_type = _PASSIVEBGPNOSUBNETASSERTIONINPUT
_ASSERTIONINPUT.fields_by_name['filter_behavior'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_filters__pb2._FILTERBEHAVIORASSERTIONINPUT
_ASSERTIONINPUT.fields_by_name['undefined_reference'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_reference__pb2._UNDEFINEDREFERENCEASSERTIONINPUT
_ASSERTIONINPUT.fields_by_name['bgp_session_establishment'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_bgp__pb2._BGPSESSIONESTABLISHMENTASSERTIONINPUT
_ASSERTIONINPUT.fields_by_name['arista_mlag_analyzer'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_mlag__pb2._ARISTAMLAGANALYZERASSERTIONINPUT
_ASSERTIONINPUT.fields_by_name['service_accessibility'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_reachability__pb2._SERVICEACCESSIBILITYASSERTIONINPUT
_ASSERTIONINPUT.fields_by_name['service_protection'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_reachability__pb2._SERVICEPROTECTIONASSERTIONINPUT
_ASSERTIONINPUT.fields_by_name['duplicate_bgp_asn'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_bgp__pb2._DUPLICATEBGPASNASSERTIONINPUT
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['devices_have_servers'])
_ASSERTIONINPUT.fields_by_name['devices_have_servers'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['security_group_does_not_have_rule'])
_ASSERTIONINPUT.fields_by_name['security_group_does_not_have_rule'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['sg_rules_blocked_by_nacl'])
_ASSERTIONINPUT.fields_by_name['sg_rules_blocked_by_nacl'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['cross_zone_policy_filters_flows'])
_ASSERTIONINPUT.fields_by_name['cross_zone_policy_filters_flows'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['devices_have_routes'])
_ASSERTIONINPUT.fields_by_name['devices_have_routes'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['vpc_endpoint_for_s3'])
_ASSERTIONINPUT.fields_by_name['vpc_endpoint_for_s3'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['public_instances'])
_ASSERTIONINPUT.fields_by_name['public_instances'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['public_ip_not_in_private_subnet'])
_ASSERTIONINPUT.fields_by_name['public_ip_not_in_private_subnet'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['lb_targets_with_public_ip'])
_ASSERTIONINPUT.fields_by_name['lb_targets_with_public_ip'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['stepping_stones'])
_ASSERTIONINPUT.fields_by_name['stepping_stones'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['snmp_community_clients'])
_ASSERTIONINPUT.fields_by_name['snmp_community_clients'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['passive_bgp_no_subnet'])
_ASSERTIONINPUT.fields_by_name['passive_bgp_no_subnet'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['filter_behavior'])
_ASSERTIONINPUT.fields_by_name['filter_behavior'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['undefined_reference'])
_ASSERTIONINPUT.fields_by_name['undefined_reference'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['bgp_session_establishment'])
_ASSERTIONINPUT.fields_by_name['bgp_session_establishment'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['arista_mlag_analyzer'])
_ASSERTIONINPUT.fields_by_name['arista_mlag_analyzer'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['service_accessibility'])
_ASSERTIONINPUT.fields_by_name['service_accessibility'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['service_protection'])
_ASSERTIONINPUT.fields_by_name['service_protection'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['duplicate_bgp_asn'])
_ASSERTIONINPUT.fields_by_name['duplicate_bgp_asn'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONRESULT.fields_by_name['devices_have_servers'].message_type = _DEVICESHAVESERVERSASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['security_group_does_not_have_rule'].message_type = _SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['sg_rules_blocked_by_nacl'].message_type = _SGRULESBLOCKEDBYNACLRESULT
_ASSERTIONRESULT.fields_by_name['cross_zone_policy_filters_flows'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_filters__pb2._CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['devices_have_routes'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_route__pb2._DEVICESHAVEROUTESASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['vpc_endpoint_for_s3'].message_type = _VPCENDPOINTFORS3RESULT
_ASSERTIONRESULT.fields_by_name['public_instances'].message_type = _PUBLICINSTANCESRESULT
_ASSERTIONRESULT.fields_by_name['public_ip_not_in_private_subnet'].message_type = _PUBLICIPNOTINPRIVATESUBNETRESULT
_ASSERTIONRESULT.fields_by_name['lb_targets_with_public_ip'].message_type = _LBTARGETSWITHPUBLICIPRESULT
_ASSERTIONRESULT.fields_by_name['stepping_stones'].message_type = _STEPPINGSTONESRESULT
_ASSERTIONRESULT.fields_by_name['snmp_community_clients'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_snmp__pb2._SNMPCOMMUNITYCLIENTSASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['passive_bgp_no_subnet'].message_type = _PASSIVEBGPNOSUBNETASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['filter_behavior'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_filters__pb2._FILTERBEHAVIORASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['undefined_reference'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_reference__pb2._UNDEFINEDREFERENCEASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['bgp_session_establishment'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_bgp__pb2._BGPSESSIONESTABLISHMENTASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['arista_mlag_analyzer'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_mlag__pb2._ARISTAMLAGANALYZERASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['service_accessibility'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_reachability__pb2._SERVICEACCESSIBILITYASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['service_protection'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_reachability__pb2._SERVICEPROTECTIONASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['duplicate_bgp_asn'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_bgp__pb2._DUPLICATEBGPASNASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['metadata'].message_type = _ASSERTIONRESULTMETADATA
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['devices_have_servers'])
_ASSERTIONRESULT.fields_by_name['devices_have_servers'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['security_group_does_not_have_rule'])
_ASSERTIONRESULT.fields_by_name['security_group_does_not_have_rule'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['sg_rules_blocked_by_nacl'])
_ASSERTIONRESULT.fields_by_name['sg_rules_blocked_by_nacl'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['cross_zone_policy_filters_flows'])
_ASSERTIONRESULT.fields_by_name['cross_zone_policy_filters_flows'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['devices_have_routes'])
_ASSERTIONRESULT.fields_by_name['devices_have_routes'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['vpc_endpoint_for_s3'])
_ASSERTIONRESULT.fields_by_name['vpc_endpoint_for_s3'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['public_instances'])
_ASSERTIONRESULT.fields_by_name['public_instances'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['public_ip_not_in_private_subnet'])
_ASSERTIONRESULT.fields_by_name['public_ip_not_in_private_subnet'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['lb_targets_with_public_ip'])
_ASSERTIONRESULT.fields_by_name['lb_targets_with_public_ip'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['stepping_stones'])
_ASSERTIONRESULT.fields_by_name['stepping_stones'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['snmp_community_clients'])
_ASSERTIONRESULT.fields_by_name['snmp_community_clients'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['passive_bgp_no_subnet'])
_ASSERTIONRESULT.fields_by_name['passive_bgp_no_subnet'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['filter_behavior'])
_ASSERTIONRESULT.fields_by_name['filter_behavior'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['undefined_reference'])
_ASSERTIONRESULT.fields_by_name['undefined_reference'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['bgp_session_establishment'])
_ASSERTIONRESULT.fields_by_name['bgp_session_establishment'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['arista_mlag_analyzer'])
_ASSERTIONRESULT.fields_by_name['arista_mlag_analyzer'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['service_accessibility'])
_ASSERTIONRESULT.fields_by_name['service_accessibility'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['service_protection'])
_ASSERTIONRESULT.fields_by_name['service_protection'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['duplicate_bgp_asn'])
_ASSERTIONRESULT.fields_by_name['duplicate_bgp_asn'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULTMETADATA.fields_by_name['status'].enum_type = _ASSERTIONSTATUS
_ASSERTIONRESULTMETADATA.fields_by_name['error'].message_type = _ASSERTIONEXECUTIONERROR
_ASSERTIONRESULTMETADATA.fields_by_name['stats'].message_type = _ASSERTIONSTATS
_ASSERTIONRESULTMETADATA.fields_by_name['warnings'].message_type = _ASSERTIONRESULTWARNINGS
_ASSERTIONEXECUTIONERROR.fields_by_name['code'].enum_type = _ASSERTIONERRORCODE
_DEVICESHAVESERVERSASSERTIONINPUT.fields_by_name['devices'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._DEVICEFILTEREXPR
_DEVICESHAVESERVERSASSERTIONINPUT.fields_by_name['servers'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._MATCHSERVERS
_DEVICESHAVESERVERSASSERTIONRESULT_ELEMENT.fields_by_name['device'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_device__pb2._DEVICE
_DEVICESHAVESERVERSASSERTIONRESULT_ELEMENT.fields_by_name['description_index'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_violations__pb2._DESCRIPTIONINDEX
_DEVICESHAVESERVERSASSERTIONRESULT_ELEMENT.containing_type = _DEVICESHAVESERVERSASSERTIONRESULT
_DEVICESHAVESERVERSASSERTIONRESULT.fields_by_name['violators'].message_type = _DEVICESHAVESERVERSASSERTIONRESULT_ELEMENT
_PUBLICIPNOTINPRIVATESUBNETINPUT.fields_by_name['network_interfaces'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._AWSNETWORKINTERFACEFILTER
_PUBLICIPNOTINPRIVATESUBNETRESULT_VIOLATOR.fields_by_name['subnet'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSSUBNET
_PUBLICIPNOTINPRIVATESUBNETRESULT_VIOLATOR.fields_by_name['eni'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSNETWORKINTERFACE
_PUBLICIPNOTINPRIVATESUBNETRESULT_VIOLATOR.fields_by_name['instance'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSINSTANCE
_PUBLICIPNOTINPRIVATESUBNETRESULT_VIOLATOR.fields_by_name['location'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSACCREGVPC
_PUBLICIPNOTINPRIVATESUBNETRESULT_VIOLATOR.fields_by_name['description_index'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_violations__pb2._DESCRIPTIONINDEX
_PUBLICIPNOTINPRIVATESUBNETRESULT_VIOLATOR.containing_type = _PUBLICIPNOTINPRIVATESUBNETRESULT
_PUBLICIPNOTINPRIVATESUBNETRESULT.fields_by_name['violators'].message_type = _PUBLICIPNOTINPRIVATESUBNETRESULT_VIOLATOR
_LBTARGETSWITHPUBLICIPINPUT.fields_by_name['instances'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._AWSINSTANCEFILTER
_LBTARGETSWITHPUBLICIPRESULT_VIOLATOR.fields_by_name['instance'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSINSTANCE
_LBTARGETSWITHPUBLICIPRESULT_VIOLATOR.fields_by_name['lb_detail'].message_type = _LBTARGETSWITHPUBLICIPRESULT_LBDETAIL
_LBTARGETSWITHPUBLICIPRESULT_VIOLATOR.fields_by_name['description_index'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_violations__pb2._DESCRIPTIONINDEX
_LBTARGETSWITHPUBLICIPRESULT_VIOLATOR.containing_type = _LBTARGETSWITHPUBLICIPRESULT
_LBTARGETSWITHPUBLICIPRESULT_LBDETAIL.fields_by_name['load_balancer'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSLOADBALANCER
_LBTARGETSWITHPUBLICIPRESULT_LBDETAIL.fields_by_name['target_group'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSTARGETGROUP
_LBTARGETSWITHPUBLICIPRESULT_LBDETAIL.containing_type = _LBTARGETSWITHPUBLICIPRESULT
_LBTARGETSWITHPUBLICIPRESULT.fields_by_name['violators'].message_type = _LBTARGETSWITHPUBLICIPRESULT_VIOLATOR
_PUBLICINSTANCESINPUT.fields_by_name['expected_tags'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._TAG
_PUBLICINSTANCESINPUT.fields_by_name['instances'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._AWSINSTANCEFILTER
_PUBLICINSTANCESRESULT_VIOLATOR.fields_by_name['instance'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSINSTANCE
_PUBLICINSTANCESRESULT_VIOLATOR.fields_by_name['missing_tags'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._TAG
_PUBLICINSTANCESRESULT_VIOLATOR.fields_by_name['description_index'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_violations__pb2._DESCRIPTIONINDEX
_PUBLICINSTANCESRESULT_VIOLATOR.containing_type = _PUBLICINSTANCESRESULT
_PUBLICINSTANCESRESULT.fields_by_name['violators'].message_type = _PUBLICINSTANCESRESULT_VIOLATOR
_PASSIVEBGPNOSUBNETASSERTIONRESULT_ELEMENT.fields_by_name['passive_peer'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_bgp__pb2._BGPPEER
_PASSIVEBGPNOSUBNETASSERTIONRESULT_ELEMENT.containing_type = _PASSIVEBGPNOSUBNETASSERTIONRESULT
_PASSIVEBGPNOSUBNETASSERTIONRESULT.fields_by_name['violators'].message_type = _PASSIVEBGPNOSUBNETASSERTIONRESULT_ELEMENT
_SECURITYGROUPDOESNOTHAVERULEASSERTIONINPUT.fields_by_name['security_groups'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._SECURITYGROUPFILTER
_SECURITYGROUPDOESNOTHAVERULEASSERTIONINPUT.fields_by_name['rule_type'].enum_type = _SGRULETYPE
_SECURITYGROUPDOESNOTHAVERULEASSERTIONINPUT.fields_by_name['rules'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._MATCHSECURITYGROUPRULES
_SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT_ELEMENT.fields_by_name['security_group'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSSECURITYGROUP
_SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT_ELEMENT.fields_by_name['description_index'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_violations__pb2._DESCRIPTIONINDEX
_SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT_ELEMENT.containing_type = _SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT
_SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT.fields_by_name['violators'].message_type = _SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT_ELEMENT
_SGRULESBLOCKEDBYNACLRESULT_ELEMENT.fields_by_name['security_group'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSSECURITYGROUP
_SGRULESBLOCKEDBYNACLRESULT_ELEMENT.fields_by_name['inbound_security_rules'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSSECURITYGROUP_RULE
_SGRULESBLOCKEDBYNACLRESULT_ELEMENT.fields_by_name['outbound_security_rules'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSSECURITYGROUP_RULE
_SGRULESBLOCKEDBYNACLRESULT_ELEMENT.fields_by_name['subnets'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSSUBNET
_SGRULESBLOCKEDBYNACLRESULT_ELEMENT.fields_by_name['description_index'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_violations__pb2._DESCRIPTIONINDEX
_SGRULESBLOCKEDBYNACLRESULT_ELEMENT.containing_type = _SGRULESBLOCKEDBYNACLRESULT
_SGRULESBLOCKEDBYNACLRESULT.fields_by_name['violators'].message_type = _SGRULESBLOCKEDBYNACLRESULT_ELEMENT
_STEPPINGSTONESINPUT.fields_by_name['included_tags'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._TAG
_STEPPINGSTONESRESULT_VIOLATOR.fields_by_name['instance'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSINSTANCE
_STEPPINGSTONESRESULT_VIOLATOR.fields_by_name['flows'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_flow__pb2._FLOW
_STEPPINGSTONESRESULT_VIOLATOR.fields_by_name['description_index'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_violations__pb2._DESCRIPTIONINDEX
_STEPPINGSTONESRESULT_VIOLATOR.containing_type = _STEPPINGSTONESRESULT
_STEPPINGSTONESRESULT.fields_by_name['violators'].message_type = _STEPPINGSTONESRESULT_VIOLATOR
_VPCENDPOINTFORS3INPUT.fields_by_name['instances'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._AWSINSTANCEFILTER
_VPCENDPOINTFORS3RESULT_VIOLATOR.fields_by_name['instance'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSINSTANCE
_VPCENDPOINTFORS3RESULT_VIOLATOR.fields_by_name['flows'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_flow__pb2._FLOW
_VPCENDPOINTFORS3RESULT_VIOLATOR.fields_by_name['description_index'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_violations__pb2._DESCRIPTIONINDEX
_VPCENDPOINTFORS3RESULT_VIOLATOR.containing_type = _VPCENDPOINTFORS3RESULT
_VPCENDPOINTFORS3RESULT.fields_by_name['violators'].message_type = _VPCENDPOINTFORS3RESULT_VIOLATOR
DESCRIPTOR.message_types_by_name['AssertionInput'] = _ASSERTIONINPUT
DESCRIPTOR.message_types_by_name['AssertionResult'] = _ASSERTIONRESULT
DESCRIPTOR.message_types_by_name['AssertionResultMetadata'] = _ASSERTIONRESULTMETADATA
DESCRIPTOR.message_types_by_name['AssertionResultWarnings'] = _ASSERTIONRESULTWARNINGS
DESCRIPTOR.message_types_by_name['AssertionExecutionError'] = _ASSERTIONEXECUTIONERROR
DESCRIPTOR.message_types_by_name['AssertionStats'] = _ASSERTIONSTATS
DESCRIPTOR.message_types_by_name['RemediationSuggestion'] = _REMEDIATIONSUGGESTION
DESCRIPTOR.message_types_by_name['DevicesHaveServersAssertionInput'] = _DEVICESHAVESERVERSASSERTIONINPUT
DESCRIPTOR.message_types_by_name['DevicesHaveServersAssertionResult'] = _DEVICESHAVESERVERSASSERTIONRESULT
DESCRIPTOR.message_types_by_name['PublicIpNotInPrivateSubnetInput'] = _PUBLICIPNOTINPRIVATESUBNETINPUT
DESCRIPTOR.message_types_by_name['PublicIpNotInPrivateSubnetResult'] = _PUBLICIPNOTINPRIVATESUBNETRESULT
DESCRIPTOR.message_types_by_name['LbTargetsWithPublicIpInput'] = _LBTARGETSWITHPUBLICIPINPUT
DESCRIPTOR.message_types_by_name['LbTargetsWithPublicIpResult'] = _LBTARGETSWITHPUBLICIPRESULT
DESCRIPTOR.message_types_by_name['PublicInstancesInput'] = _PUBLICINSTANCESINPUT
DESCRIPTOR.message_types_by_name['PublicInstancesResult'] = _PUBLICINSTANCESRESULT
DESCRIPTOR.message_types_by_name['PassiveBgpNoSubnetAssertionInput'] = _PASSIVEBGPNOSUBNETASSERTIONINPUT
DESCRIPTOR.message_types_by_name['PassiveBgpNoSubnetAssertionResult'] = _PASSIVEBGPNOSUBNETASSERTIONRESULT
DESCRIPTOR.message_types_by_name['SecurityGroupDoesNotHaveRuleAssertionInput'] = _SECURITYGROUPDOESNOTHAVERULEASSERTIONINPUT
DESCRIPTOR.message_types_by_name['SecurityGroupDoesNotHaveRuleAssertionResult'] = _SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT
DESCRIPTOR.message_types_by_name['SgRulesBlockedByNaclInput'] = _SGRULESBLOCKEDBYNACLINPUT
DESCRIPTOR.message_types_by_name['SgRulesBlockedByNaclResult'] = _SGRULESBLOCKEDBYNACLRESULT
DESCRIPTOR.message_types_by_name['SteppingStonesInput'] = _STEPPINGSTONESINPUT
DESCRIPTOR.message_types_by_name['SteppingStonesResult'] = _STEPPINGSTONESRESULT
DESCRIPTOR.message_types_by_name['VpcEndpointForS3Input'] = _VPCENDPOINTFORS3INPUT
DESCRIPTOR.message_types_by_name['VpcEndpointForS3Result'] = _VPCENDPOINTFORS3RESULT
DESCRIPTOR.enum_types_by_name['AssertionStatus'] = _ASSERTIONSTATUS
DESCRIPTOR.enum_types_by_name['AssertionErrorCode'] = _ASSERTIONERRORCODE
DESCRIPTOR.enum_types_by_name['SgRuleType'] = _SGRULETYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AssertionInput = _reflection.GeneratedProtocolMessageType('AssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _ASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AssertionInput)
  })
_sym_db.RegisterMessage(AssertionInput)

AssertionResult = _reflection.GeneratedProtocolMessageType('AssertionResult', (_message.Message,), {
  'DESCRIPTOR' : _ASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AssertionResult)
  })
_sym_db.RegisterMessage(AssertionResult)

AssertionResultMetadata = _reflection.GeneratedProtocolMessageType('AssertionResultMetadata', (_message.Message,), {
  'DESCRIPTOR' : _ASSERTIONRESULTMETADATA,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AssertionResultMetadata)
  })
_sym_db.RegisterMessage(AssertionResultMetadata)

AssertionResultWarnings = _reflection.GeneratedProtocolMessageType('AssertionResultWarnings', (_message.Message,), {
  'DESCRIPTOR' : _ASSERTIONRESULTWARNINGS,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AssertionResultWarnings)
  })
_sym_db.RegisterMessage(AssertionResultWarnings)

AssertionExecutionError = _reflection.GeneratedProtocolMessageType('AssertionExecutionError', (_message.Message,), {
  'DESCRIPTOR' : _ASSERTIONEXECUTIONERROR,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AssertionExecutionError)
  })
_sym_db.RegisterMessage(AssertionExecutionError)

AssertionStats = _reflection.GeneratedProtocolMessageType('AssertionStats', (_message.Message,), {
  'DESCRIPTOR' : _ASSERTIONSTATS,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AssertionStats)
  })
_sym_db.RegisterMessage(AssertionStats)

RemediationSuggestion = _reflection.GeneratedProtocolMessageType('RemediationSuggestion', (_message.Message,), {
  'DESCRIPTOR' : _REMEDIATIONSUGGESTION,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.RemediationSuggestion)
  })
_sym_db.RegisterMessage(RemediationSuggestion)

DevicesHaveServersAssertionInput = _reflection.GeneratedProtocolMessageType('DevicesHaveServersAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _DEVICESHAVESERVERSASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveServersAssertionInput)
  })
_sym_db.RegisterMessage(DevicesHaveServersAssertionInput)

DevicesHaveServersAssertionResult = _reflection.GeneratedProtocolMessageType('DevicesHaveServersAssertionResult', (_message.Message,), {

  'Element' : _reflection.GeneratedProtocolMessageType('Element', (_message.Message,), {
    'DESCRIPTOR' : _DEVICESHAVESERVERSASSERTIONRESULT_ELEMENT,
    '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult.Element)
    })
  ,
  'DESCRIPTOR' : _DEVICESHAVESERVERSASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult)
  })
_sym_db.RegisterMessage(DevicesHaveServersAssertionResult)
_sym_db.RegisterMessage(DevicesHaveServersAssertionResult.Element)

PublicIpNotInPrivateSubnetInput = _reflection.GeneratedProtocolMessageType('PublicIpNotInPrivateSubnetInput', (_message.Message,), {
  'DESCRIPTOR' : _PUBLICIPNOTINPRIVATESUBNETINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetInput)
  })
_sym_db.RegisterMessage(PublicIpNotInPrivateSubnetInput)

PublicIpNotInPrivateSubnetResult = _reflection.GeneratedProtocolMessageType('PublicIpNotInPrivateSubnetResult', (_message.Message,), {

  'Violator' : _reflection.GeneratedProtocolMessageType('Violator', (_message.Message,), {
    'DESCRIPTOR' : _PUBLICIPNOTINPRIVATESUBNETRESULT_VIOLATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetResult.Violator)
    })
  ,
  'DESCRIPTOR' : _PUBLICIPNOTINPRIVATESUBNETRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.PublicIpNotInPrivateSubnetResult)
  })
_sym_db.RegisterMessage(PublicIpNotInPrivateSubnetResult)
_sym_db.RegisterMessage(PublicIpNotInPrivateSubnetResult.Violator)

LbTargetsWithPublicIpInput = _reflection.GeneratedProtocolMessageType('LbTargetsWithPublicIpInput', (_message.Message,), {
  'DESCRIPTOR' : _LBTARGETSWITHPUBLICIPINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.LbTargetsWithPublicIpInput)
  })
_sym_db.RegisterMessage(LbTargetsWithPublicIpInput)

LbTargetsWithPublicIpResult = _reflection.GeneratedProtocolMessageType('LbTargetsWithPublicIpResult', (_message.Message,), {

  'Violator' : _reflection.GeneratedProtocolMessageType('Violator', (_message.Message,), {
    'DESCRIPTOR' : _LBTARGETSWITHPUBLICIPRESULT_VIOLATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult.Violator)
    })
  ,

  'LBDetail' : _reflection.GeneratedProtocolMessageType('LBDetail', (_message.Message,), {
    'DESCRIPTOR' : _LBTARGETSWITHPUBLICIPRESULT_LBDETAIL,
    '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult.LBDetail)
    })
  ,
  'DESCRIPTOR' : _LBTARGETSWITHPUBLICIPRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.LbTargetsWithPublicIpResult)
  })
_sym_db.RegisterMessage(LbTargetsWithPublicIpResult)
_sym_db.RegisterMessage(LbTargetsWithPublicIpResult.Violator)
_sym_db.RegisterMessage(LbTargetsWithPublicIpResult.LBDetail)

PublicInstancesInput = _reflection.GeneratedProtocolMessageType('PublicInstancesInput', (_message.Message,), {
  'DESCRIPTOR' : _PUBLICINSTANCESINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.PublicInstancesInput)
  })
_sym_db.RegisterMessage(PublicInstancesInput)

PublicInstancesResult = _reflection.GeneratedProtocolMessageType('PublicInstancesResult', (_message.Message,), {

  'Violator' : _reflection.GeneratedProtocolMessageType('Violator', (_message.Message,), {
    'DESCRIPTOR' : _PUBLICINSTANCESRESULT_VIOLATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.PublicInstancesResult.Violator)
    })
  ,
  'DESCRIPTOR' : _PUBLICINSTANCESRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.PublicInstancesResult)
  })
_sym_db.RegisterMessage(PublicInstancesResult)
_sym_db.RegisterMessage(PublicInstancesResult.Violator)

PassiveBgpNoSubnetAssertionInput = _reflection.GeneratedProtocolMessageType('PassiveBgpNoSubnetAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _PASSIVEBGPNOSUBNETASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.PassiveBgpNoSubnetAssertionInput)
  })
_sym_db.RegisterMessage(PassiveBgpNoSubnetAssertionInput)

PassiveBgpNoSubnetAssertionResult = _reflection.GeneratedProtocolMessageType('PassiveBgpNoSubnetAssertionResult', (_message.Message,), {

  'Element' : _reflection.GeneratedProtocolMessageType('Element', (_message.Message,), {
    'DESCRIPTOR' : _PASSIVEBGPNOSUBNETASSERTIONRESULT_ELEMENT,
    '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.PassiveBgpNoSubnetAssertionResult.Element)
    })
  ,
  'DESCRIPTOR' : _PASSIVEBGPNOSUBNETASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.PassiveBgpNoSubnetAssertionResult)
  })
_sym_db.RegisterMessage(PassiveBgpNoSubnetAssertionResult)
_sym_db.RegisterMessage(PassiveBgpNoSubnetAssertionResult.Element)

SecurityGroupDoesNotHaveRuleAssertionInput = _reflection.GeneratedProtocolMessageType('SecurityGroupDoesNotHaveRuleAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYGROUPDOESNOTHAVERULEASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionInput)
  })
_sym_db.RegisterMessage(SecurityGroupDoesNotHaveRuleAssertionInput)

SecurityGroupDoesNotHaveRuleAssertionResult = _reflection.GeneratedProtocolMessageType('SecurityGroupDoesNotHaveRuleAssertionResult', (_message.Message,), {

  'Element' : _reflection.GeneratedProtocolMessageType('Element', (_message.Message,), {
    'DESCRIPTOR' : _SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT_ELEMENT,
    '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResult.Element)
    })
  ,
  'DESCRIPTOR' : _SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResult)
  })
_sym_db.RegisterMessage(SecurityGroupDoesNotHaveRuleAssertionResult)
_sym_db.RegisterMessage(SecurityGroupDoesNotHaveRuleAssertionResult.Element)

SgRulesBlockedByNaclInput = _reflection.GeneratedProtocolMessageType('SgRulesBlockedByNaclInput', (_message.Message,), {
  'DESCRIPTOR' : _SGRULESBLOCKEDBYNACLINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SgRulesBlockedByNaclInput)
  })
_sym_db.RegisterMessage(SgRulesBlockedByNaclInput)

SgRulesBlockedByNaclResult = _reflection.GeneratedProtocolMessageType('SgRulesBlockedByNaclResult', (_message.Message,), {

  'Element' : _reflection.GeneratedProtocolMessageType('Element', (_message.Message,), {
    'DESCRIPTOR' : _SGRULESBLOCKEDBYNACLRESULT_ELEMENT,
    '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.Element)
    })
  ,
  'DESCRIPTOR' : _SGRULESBLOCKEDBYNACLRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult)
  })
_sym_db.RegisterMessage(SgRulesBlockedByNaclResult)
_sym_db.RegisterMessage(SgRulesBlockedByNaclResult.Element)

SteppingStonesInput = _reflection.GeneratedProtocolMessageType('SteppingStonesInput', (_message.Message,), {
  'DESCRIPTOR' : _STEPPINGSTONESINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SteppingStonesInput)
  })
_sym_db.RegisterMessage(SteppingStonesInput)

SteppingStonesResult = _reflection.GeneratedProtocolMessageType('SteppingStonesResult', (_message.Message,), {

  'Violator' : _reflection.GeneratedProtocolMessageType('Violator', (_message.Message,), {
    'DESCRIPTOR' : _STEPPINGSTONESRESULT_VIOLATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SteppingStonesResult.Violator)
    })
  ,
  'DESCRIPTOR' : _STEPPINGSTONESRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SteppingStonesResult)
  })
_sym_db.RegisterMessage(SteppingStonesResult)
_sym_db.RegisterMessage(SteppingStonesResult.Violator)

VpcEndpointForS3Input = _reflection.GeneratedProtocolMessageType('VpcEndpointForS3Input', (_message.Message,), {
  'DESCRIPTOR' : _VPCENDPOINTFORS3INPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.VpcEndpointForS3Input)
  })
_sym_db.RegisterMessage(VpcEndpointForS3Input)

VpcEndpointForS3Result = _reflection.GeneratedProtocolMessageType('VpcEndpointForS3Result', (_message.Message,), {

  'Violator' : _reflection.GeneratedProtocolMessageType('Violator', (_message.Message,), {
    'DESCRIPTOR' : _VPCENDPOINTFORS3RESULT_VIOLATOR,
    '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.VpcEndpointForS3Result.Violator)
    })
  ,
  'DESCRIPTOR' : _VPCENDPOINTFORS3RESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.VpcEndpointForS3Result)
  })
_sym_db.RegisterMessage(VpcEndpointForS3Result)
_sym_db.RegisterMessage(VpcEndpointForS3Result.Violator)


# @@protoc_insertion_point(module_scope)
