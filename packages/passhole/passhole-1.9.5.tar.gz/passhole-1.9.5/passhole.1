.\" Automatically generated by Pandoc 2.9.2.1
.\"
.TH "passhole" "" "February 23, 2021" "" ""
.hy
.SH SYNOPSIS
.PP
\f[B]ph\f[R] [OPTIONAL ARGS] [COMMAND] [COMMAND OPTIONS] [COMMAND ARGS]
.SH COMMANDS
.TP
show [-h] [--field FIELD] PATH
Show the contents of an entry, where \f[I]PATH\f[R] is the full path to
the entry.
The password field is spoilered and must be highlighted to reveal the
plaintext password.
Use --field \f[I]FIELD\f[R] to print only the specified field, where
\f[I]FIELD\f[R] is one of \[aq]title\[aq], \[aq]username\[aq],
\[aq]password\[aq], \[aq]url\[aq], or a custom field.
.TP
type [-h] [--prog PROG] [--tabbed] [--username] [--xdotool] [name]
Automatically type out the password as if the user had typed it on the
keyboard, where \f[I]PROG\f[R] is a dmenu-like program for selecting an
entry.
\f[I]PROG\f[R] defaults to \[aq]dmenu\[aq].
This is useful when you want to automatically fill a selected password
field in any application.
\f[I]name\f[R] is the name of the database to type from.
If not given, type from all databases.
Use the --tabbed option to type out the username then password,
separated by a tab.
Use the --username option to show entry username in parenthesis during
selection.
Use the --xdotool option to use xdotool instead of the Python keyboard
library.
Useful for handling unicode input.
Note that this command is intended to be invoked via keyboard shortcut.
.TP
add [-h] [-w [LENGTH] | -a [LENGTH] | -s [LENGTH]] [--append STR] [--fields FIELD1,...] PATH
Add a new entry/group to the database, where \f[I]PATH\f[R] is the full
path to the entry or group.
Use -w, -a, or -s to generate a correct horse battery
staple (http://xkcd.com/936), alphanumeric, or alphanumeric + symbolic
password, respectively.
\f[I]LENGTH\f[R] defaults to 5 words for -w and 32 characters for -a and
-s unless otherwise specified.
Use --append to append \f[I]STR\f[R] to the end of the generated
password to meet specific password requirements.
Use --fields to specify a comma separated list of custom fields to
prompt for during entry creation.
.TP
remove [-h] PATH
Remove an entry/group from the database, where \f[I]PATH\f[R] is the
full path to the entry or group.
.TP
edit [-h] [--field FIELD | --set FIELD VALUE | --remove FIELD] PATH
Edit the contents of an entry or group, where \f[I]PATH\f[R] is the full
path to the entry or group.
You will be prompted to edit each field value.
Use --field \f[I]FIELD\f[R] to edit only the specified field, where
\f[I]FIELD\f[R] is one of \f[I]title\f[R], \f[I]username\f[R],
\f[I]password\f[R], \f[I]url\f[R], or a custom field when editing
entries.
This option has no effect for groups.
Use --set \f[I]FIELD VALUE\f[R] to set the value of a field,
noninteractively for entries.
Only \f[I]name\f[R] is supported for groups.
Use --remove \f[I]FIELD\f[R] to remove an existing custom entry field.
This option has no effect for groups.
.TP
move [-h] SRC_PATH DEST_PATH
Move an entry/group to another path, where \f[I]SRC_PATH\f[R] and
\f[I]DEST_PATH\f[R] are the full paths to the source and destination
items.
Providing two entry paths or two group paths will move and rename the
entry or group.
.TP
list [-h] [--username] [PATH]
List entries/groups in the database, where \f[I]PATH\f[R] is an optional
path to a entry or group.
Use the --username option to show entry username in addition to title.
.TP
grep [-h] [-i] [--field FIELD] PATTERN
List entries with titles matching a regex pattern, where
\f[I]PATTERN\f[R] is an XSLT
style (https://www.xml.com/pub/a/2003/06/04/tr.html) regular expression.
Use the --field \f[I]FIELD\f[R] option to search other string fields,
where \f[I]FIELD\f[R] is one of \f[I]title\f[R], \f[I]username\f[R],
\f[I]password\f[R], \f[I]url\f[R], or a custom field.
Use the -i option to enable case insensitive searching.
.TP
kill [-h]
Kill the background server.
.TP
init [-h]
Create a new database.
You will be prompted for the database password and whether or not to use
a keyfile.
See --database and --keyfile to initialize in a non-default location.
.TP
dump [-h]
Pretty print database XML to console.
Passwords will appear in plaintext.
.SH OPTIONAL ARGS
.TP
-h, --help
Print out a help message and exit.
Use in conjunction with a command for command-specific help.
.TP
--debug
Enable debug messages.
.TP
--database PATH
Specify the path to the KeePass database when initializing, accessing or
modifying the database.
The config is ignored when this is given.
.TP
--keyfile PATH
Specify the path to the keyfile when initializing, accessing or
modifying the database.
No effect if --database is not given.
.TP
--no-password
Don\[aq]t prompt for a password when accessing or modifying the
database.
No effect if --database is not given.
.TP
--no-cache
Don\[aq]t read from or write to cache while opening this database.
.TP
--cache-timeout
Timeout to read from or write to cache while opening this database.
No effect if --no-cache=True
.TP
--config PATH
Specify path to config.
.TP
-v, --version
Print out version information.
.SH Files
.TP
\[ti]/.config/passhole.ini
Default location of config.
Specify multiple databases here or edit database options.
See the config section for supported directives.
.TP
\[ti]/.local/passhole.kdbx
Default location of KeePass database.
Override with --database \f[I]PATH\f[R]
.TP
\[ti]/.local/passhole.key
Default location KeePass key.
Override with --keyfile \f[I]PATH\f[R] or in config.
.SH Config
.PP
Located at \f[I]\[ti]/.config/passhole.ini\f[R] by default.
Can be overriden with the --config option.
Each section in the config corresponds to a database.
The supported options are:
.TP
database: /path/to/example.kdbx
Required.
The path to the kdbx file.
.TP
keyfile: /path/to/example.key
Optional.
Path to keyfile.
If not given, assume database has no keyfile.
.TP
no-password: True
Optional.
Assume database has no password and don\[aq]t prompt for it.
If not given, the password will be loaded from cache or the user
prompted.
.TP
no-cache: True
Optional.
Don\[aq]t read from or write to cache when opening this database.
.TP
cache-timeout: 300
Seconds to keep databases open in cache.
Cache timeout is the same for all open databases and should be set in
the first section in the config.
The timeout timer resets with each passhole invocation.
No effect if no-cache=True
.TP
default: True
Optional.
Set this database as default.
When using multiple databases, entry or group paths with no
\f[B]\[at][Name]\f[R] database prefix are assumed to refer to this
database.
.SH Multiple Databases
.PP
All commands support multiple databases.
Prefix entry or group paths with \f[B]\[at][Name]/\f[R], where
\f[I][Name]\f[R] is the database name given in the config.
A path with no prefix is assumed to be the default database.
.IP
.nf
\f[C]
# move an entry in the *test* database to the default database.
$ ph mv \[at]test/foobar_group/foobar_entry root_entry

# list the test database
$ ph ls \[at]test/
\f[R]
.fi
.PP
More databases may be added using the init command or manually specified
in the config:
.IP
.nf
\f[C]
[test]
# Use this database as the default
# default: True
# Path to database (required)
database: /path/to/test.kdbx
# Path to keyfile.  if absent, assume no keyfile
keyfile: /path/to/test.key
# Does the database have a password?
# no-password: True
# Path to password cache.  If absent, don\[aq]t cache password.
# Must be unique for each database
cache: \[ti]/.cache/test_cache
\f[R]
.fi
.SH Python Scripts
.PP
The \f[I]open_databases\f[R] function is available for import for
conveniently opening your database with password caching enabled.
It returns an OrderedDict with database names as keys (as given in the
config) and PyKeePass objects as values.
The default database is the first element in this dictionary.
.IP
.nf
\f[C]
from passhole.passhole import open_databases
kp = list(open_databases().values()[0]
\f[R]
.fi
.SH Examples
.SS add a new entry with manually created password
.IP
.nf
\f[C]
$ ph add github
Username: Evidlo
Password: 
Confirm: 
URL: github.com
\f[R]
.fi
.SS add an entry with a generated alphanumeric password
.IP
.nf
\f[C]
$ ph add neopets -a
Username: Evidlo
URL: neopets.com
\f[R]
.fi
.SS add a new group
.IP
.nf
\f[C]
$ ph add social/
\f[R]
.fi
.SS add an entry to social/ with a 32 character password (alphanumeric + symbols)
.IP
.nf
\f[C]
$ ph add social/facebook -s 32
Username: evan\[at]evanw.org
URL: facebook.com
\f[R]
.fi
.SS add an entry to social/ with a correct-horse-battery-staple type password
.IP
.nf
\f[C]
$ ph add social/twitter -w
Username: evan\[at]evanw.org
URL: twitter.com
\f[R]
.fi
.SS list all entries
.IP
.nf
\f[C]
$ ph list
github
neopets
[social]
\[u251C]\[u2500]\[u2500] facebook
\[u2514]\[u2500]\[u2500] twitter
\f[R]
.fi
.SS display contents of entry
.IP
.nf
\f[C]
$ ph show social/twitter
Title: twitter
Username: Evidlo
Password: inns.ambien.travelling.throw.force
URL: twitter.com
\f[R]
.fi
.SS retrieve contents of specific field for use in scripts
.IP
.nf
\f[C]
$ ph show social/twitter --field password
inns.ambien.travelling.throw.force
\f[R]
.fi
.SH AUTHORS
Evan Widloski.
