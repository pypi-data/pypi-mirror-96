# coding: utf-8

"""
    XTRF Home Portal API

    XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here:   # noqa: E501

    OpenAPI spec version: 2.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import xtrf_api
from xtrf_api.api.subscription_api import SubscriptionApi  # noqa: E501
from xtrf_api.rest import ApiException


class TestSubscriptionApi(unittest.TestCase):
    """SubscriptionApi unit test stubs"""

    def setUp(self):
        self.api = SubscriptionApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_are_hooks_supported(self):
        """Test case for are_hooks_supported

        This method can be used to determine if hooks are supported.  # noqa: E501
        """
        pass

    def test_get_all4(self):
        """Test case for get_all4

        Returns all subscriptions  # noqa: E501
        """
        pass

    def test_subscribe(self):
        """Test case for subscribe

        Subscribe to event  # noqa: E501
        """
        pass

    def test_unsubscribe(self):
        """Test case for unsubscribe

        Unsubscribe from event  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
