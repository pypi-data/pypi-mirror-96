#
######## xlOil Settings #########
#
# This is a TOML file.
#
#################################
#
[Addin]

##### Plugins to load
#
# Load these plugins. The directory containing xloil.dll is searched
# first, then the normal DLL search path order.
#
Plugins=["xlOil_Python", "xlOil_SQL", "xlOil_Utils"]
#
# Load any plugins in the same directory as the core dll which 
# match this pattern.
#
#PluginSearchPattern="xloil_*.dll"


##### Log file settings 
#
# Intensity of logging, choose from:
# "trace", "debug", "info", "warning", "error", "critical", "off"
#
LogLevel="debug"
#
# Level at which xlOil will pop up a log window to display recent 
# log entries
#
LogPopupLevel="error"
#
# The log file is created at <name-of-ini-file>.log and in the same 
# directory unless specified below
#
#LogFile="my.log"
#
# Log file rotation is controlled by these two parameters. A single
# log file can grow to the *LogMaxSize* in Kb. Once this limit is
# reached, a new blank log file is started, existing old log files
# are renamed and the oldest is deleted to ensure maximum of 
# *LogNumberOfFiles* files.
# 
#LogMaxSize="512"
#LogNumberOfFiles="2"
#
# Enable this to help diagnose problems with loading xlOil.dll
# from the xll loader
# 
#StartupTrace=true


##### Date
#
# The date formats xlOil will attempt to parse for a string to date
# conversion. Syntax follows C++ get_time here: 
# https://en.cppreference.com/w/cpp/io/manip/get_time
# Note the date parsing is case sensitive because get_time is case 
# sensitive on Windows.
#
DateFormats=["%Y-%m-%d", "%Y%b%d"]

#
# Use [[]] syntax because the order of Environment variables matters
# The key XLOIL_PATH is edited by the xlOil_Install powershell script
#
[[Addin.Environment]]
XLOIL_PATH=""
[[Addin.Environment]]
PATH='''%PATH%;%XLOIL_PATH%'''


##### Python Plugin Settings
#
[xlOil_Python]

#
# Python modules to load on start up. Must be on python's sys.path
#
#LoadModules=["xloil.jupyter"]

#
# On workbook open, look for a python file matching this template 
# where * is replaced by the Excel workbook name
#
WorkbookModule="*.py"

#
# Look for a module matching this pattern in the directory of the 
# XLL when it is loaded where '*' is replaced with the addin name.
# The default is "*.py" which means an ini file is optional for a 
# simple addin
#
#AddinModule="*.py"

##### Python Environment
#
# Use [[]] syntax because the order of Environment variables matters
#
[[xlOil_Python.Environment]]
    #
	# Sets the python version to use. Required.
	#
	xlOilPythonVersion="3.6"

	#
	# Tells python to do case-insensitve module name lookup and so minimises 
	# surprises on windows when creating workbook and addin modules. Recommended!
	#
    PYTHONCASEOK=1

[[xlOil_Python.Environment]]
	PYTHONPATH='''<HKLM\SOFTWARE\Python\PythonCore\%xlOilPythonVersion%\PythonPath\>;C:\Users\x460365\dev'''
	PYTHON_LIB='''<HKLM\SOFTWARE\Python\PythonCore\%xlOilPythonVersion%\InstallPath\>'''
[[xlOil_Python.Environment]]
	PATH='''%PATH%;%PYTHON_LIB%;%PYTHON_LIB%\Library\bin'''
