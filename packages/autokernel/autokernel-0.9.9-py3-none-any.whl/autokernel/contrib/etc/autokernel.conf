# vim: set ft=ruby ts=4 sw=4 sts=-1 noet:

include_module_dir "modules.d";

module base {
	# Begin with the kernel defconfig
	merge "{KERNEL_DIR}/arch/{ARCH}/configs/{UNAME_ARCH}_defconfig";

	# Enable expert options
	set EXPERT y;
	# Enable modules
	set MODULES y;

	# Enable 32-bit emulation
	set IA32_EMULATION y;
}

kernel {
	use base;
	use hardening;
	use local_detected;

	use acpi;
	use pci;
	use crypto;
	use nvme;

	use fs_ntfs;
	use fs_fuse;
	use fs_cifs;
	#use fs_btrfs;
	#use fs_f2fs;

	use virt_kvm;
	use systemd;
	use net;
	use usb;
	use audio;
	use bluetooth;
	use console;

	use usb_extra;
	use audio_extra;

	use misc;

	# ... Your configuration here
	#use local_extra;

	# Enable efi
	set EFI y;
	set EFI_STUB y;
	set EFIVAR_FS y;

	# Enable and use LZ4 as compression algorithm for built-in initramfs
	set RD_LZ4 y if BLK_DEV_INITRD;
	set INITRAMFS_COMPRESSION_LZ4 y if INITRAMFS_SOURCE;
}

initramfs {
	# Build an initramfs
	enabled false;
	# Integrate it into the kernel
	builtin true;

	# Use dracut to build the initramfs
	build_command "dracut"
		"--conf"          "/dev/null"
		"--confdir"       "/dev/null"
		"--kmoddir"       "{MODULES_PREFIX}/lib/modules/{KERNEL_VERSION}"
		"--kver"          "{KERNEL_VERSION}"
		"--no-compress"
		"--no-hostonly"
		"--ro-mnt"
		"--add"           "bash crypt crypt-gpg"
		"--force"
		"{INITRAMFS_OUTPUT}";

	## Alternative: Use genkernel to build the initramfs
	## If you need any modules, remove --no-install and --no-ramdisk-modules
	## Then the output will land in /boot/... instead of /var/tmp/
	# build_command "genkernel"
	# 	"--kernel-modules-prefix={MODULES_PREFIX}"
	# 	"--cachedir=/var/tmp/genkernel/cache"
	# 	"--tmpdir=/var/tmp/genkernel"
	# 	"--logfile=/var/tmp/genkernel/genkernel.log"
	# 	"--kerneldir={KERNEL_DIR}"
	# 	"--no-install"
	# 	"--no-mountboot"
	# 	"--no-compress-initramfs"
	# 	"--no-ramdisk-modules"
	# 	"--luks"
	# 	"--gpg"
	# 	"initramfs";

	# build_output "/var/tmp/genkernel/initramfs-{UNAME_ARCH}-{KERNEL_VERSION}";
}

build {
	hooks {
		# Execute a pre or post hook if you like that
		#pre "echo" "you might want to check, if we use the freshest kernel from kernel.org";
	}

	# Required for vanilla gentoo compatibility, as portage must have access to the
	# build files to create modules. There are better ways to do this.
	umask 0022;
}

install {
	# Enable this if you want to automount the boot directory (requires fstab entry)
	#mount "/boot";

	target_dir "/boot";

	# We don't need the initramfs intalled separately when it is built into the kernel.
	target_initramfs false;
	# We also don't need the config.
	target_config false;

	# Keep the last two kernel builds, and purge the rest from the target directory.
	# By default purging is disabled.
	#keep_old 2;

	hooks {
		# Execute a pre or post hook, e.g. to install the bzImage
		#post "cp" "-v"
		#   "/boot/bzImage-{KERNEL_VERSION}"
		#   "{{ '/boot/efi/EFI/vmlinuz.efi' if is_efi else '/boot/bios/bzImage' }}";
	}
}
