# vim: set ft=ruby ts=4 sw=4 sts=-1 noet:

module nftables {
	# Enables advanced netfilter configurations
	set NETFILTER_ADVANCED y;
	# Enables nftables framework which replaces {ip,ip6,arp,eb}_tables
	set NF_TABLES y;
	# ARP nftables support
	set NF_TABLES_ARP y;
	# IPV4/IPV6 nftables support
	set NF_TABLES_INET y;
	# Bridge tables support
	set NF_TABLES_BRIDGE y;
	# Allows building sets for action lookup
	set NF_TABLES_SET y if $kernel_version <= 5.6;
	# Number generation for incremental counting
	set NFT_NUMGEN y;
	# Conntrack for nftables
	set NF_CONNTRACK y;
	set NFT_CT y;
	# Allows counting expressions
	set NFT_COUNTER y;
	# Allows ratelimiting per connection
	set NFT_CONNLIMIT y;
	# Allows packet logging
	set NFT_LOG y;
	# Allows ratelimiting per rule
	set NFT_LIMIT y;
	# Allows masquerade-style NAT
	set NFT_MASQ y;
	# Allows redirect-style NAT
	set NFT_REDIR y;
	# Allows typical NAT
	set NFT_NAT y;
	# Allows tunnel policies
	set NFT_TUNNEL y;
	# Allows refering to stateful objects
	set NFT_OBJREF y;
	# Allows setting byte quotas
	set NFT_QUOTA y;
	# Allows to explicitly reject traffic, optionally with corresponding informational packets
	set NFT_REJECT y;
	# Allows xtables over nftables (e.g. old iptables / ip6tables)
	set NFT_COMPAT y;
	# Allows hashing in expressions
	set NFT_HASH y;
	# Allows extracting information of a packets security association
	set NFT_XFRM y;
	# Allows matching for presence or absence of specific sockets
	set NFT_SOCKET y;
	# Allows passive os fingerprinting
	set NFT_OSF y;
	# Allows transparent proxying
	set NFT_TPROXY y;
	# Allows tcp intercepting as syncookies (useful for avoiding
	# conntrack and resource usage in syn-flood attack scenarios)
	set NFT_SYNPROXY y;
	# Allows ipv4 packet duplication
	set NFT_DUP_IPV4 y;
	# Allows ipv6 packet duplication
	set NFT_DUP_IPV6 y;
	# Allows ipv4 reverse path lookups
	set NFT_FIB_IPV4 y;
	# Allows ipv6 reverse path lookups
	set NFT_FIB_IPV6 y;
	# Allows reverse path lookups in inet table (dispatched to ipv4/ipv6 dynamically)
	set NFT_FIB_INET y;
	# Allows rejecting bridged packets
	set NFT_BRIDGE_REJECT y;
}

module net {
	# Enable basic networking support.
	set NET y;
	# Enable IP support.
	set INET y;
	# Enable ipv6
	set IPV6 y;
	# Disable ipv6 in ipv4 tunnel
	set IPV6_SIT n;

	# Enable universal TUN/TAP (e.g. for openvpn)
	set TUN y;
	# Allow ethernet bridging
	set BRIDGE y;

	# Allow encapsulation of any IP protocol in UDP
	set NET_FOU y;

	# Enable nftables
	use nftables;

	# Enable wireguard tunnel
	if $kernel_version >= 5.6 {
		set WIREGUARD y;
	}
}
