# vim: set ft=ruby ts=4 sw=4 sts=-1 noet:

module misc {
	# No boot logo
	set LOGO n;

	# Only enable safe sysrq functions (i.e. disable process debugging, signalling and alike)
	# [*]   2 =   0x2 - enable control of console logging level
	# [*]   4 =   0x4 - enable control of keyboard (SAK, unraw)
	# [ ]   8 =   0x8 - enable debugging dumps of processes etc.
	# [*]  16 =  0x10 - enable sync command
	# [*]  32 =  0x20 - enable remount read-only
	# [ ]  64 =  0x40 - enable signalling of processes (term, kill, oom-kill)
	# [*] 128 =  0x80 - allow reboot/poweroff
	# [ ] 256 = 0x100 - allow nicing of all RT tasks
	# => 0xB6
	set MAGIC_SYSRQ y;
	set MAGIC_SYSRQ_SERIAL n;
	set MAGIC_SYSRQ_DEFAULT_ENABLE 0xB6;

	# Enable .config access through /proc/config.gz
	set IKCONFIG y;
	set IKCONFIG_PROC y;

	# Enable setting system time from RTC on startup and resume, as well as on shutdown
	set RTC_HCTOSYS y;
	set RTC_SYSTOHC y;

	# Enable in-kernel tls support
	set TLS y;

	# Don't precreate loop devices
	set BLK_DEV_LOOP_MIN_COUNT 0;

	# Enable cpu frequency statistics
	set CPU_FREQ_STAT y;

	# Enable lockup detector
	set SOFTLOCKUP_DETECTOR y;
	set HARDLOCKUP_DETECTOR y;

	# Enable scheduler autogroup to automatically create task groups for
	# CPU aggressive applications and separate them from desktop applications
	set SCHED_AUTOGROUP y;

	# Disable posix message queues
	set POSIX_MQUEUE n;
	# Disable legacy MPS-table (pre-acpi) support
	set X86_MPPARSE n;
	# Disable extended platform support (non-PC platforms)
	set X86_EXTENDED_PLATFORM n;
}
