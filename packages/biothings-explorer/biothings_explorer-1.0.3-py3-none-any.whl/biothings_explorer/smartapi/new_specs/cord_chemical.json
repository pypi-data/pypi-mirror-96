{
  "openapi": "3.0.0",
  "info": {
    "contact": {
      "email": "help@biothinigs.io",
      "name": "JIWEN XIN",
      "x-id": "https://github.com/kevinxin90",
      "x-role": "responsible developer"
    },
    "description": "Documentation of the CORD Query web services. Learn more about [CORD](http://biothings.ncats.io/cord_chemical)",
    "termsOfService": "http://mychemical.info/terms/",
    "title": "CORD Chemical API",
    "version": "1.0"
  },
  "servers": [
    {
      "description": "Encrypted Production server",
      "url": "https://biothings.ncats.io/cord_chemical"
    },
    {
      "description": "Production server",
      "url": "http://biothings.ncats.io/cord_chemical"
    }
  ],
  "tags": [
    {
      "name": "chemical"
    },
    {
      "name": "annotation"
    },
    {
      "name": "query"
    },
    {
      "name": "translator"
    },
    {
      "name": "biothings"
    }
  ],
  "paths": {
    "/chemical": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/fields",
            "name": "fields"
          },
          {
            "$ref": "#/components/parameters/dotfield",
            "name": "dotfield"
          },
          {
            "$ref": "#/components/parameters/email",
            "name": "email"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "ids": {
                    "description": "multiple CHEBI chemicalids seperated by comma, e.g., \"ids=387,388\" Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted.",
                    "type": "string"
                  }
                },
                "required": [
                  "ids"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "A query response object with \"hits\" property"
          }
        },
        "summary": "For a list of chemical ids, return the matching chemical objects",
        "tags": [
          "annotation"
        ]
      }
    },
    "/chemical/{chemicalid}": {
      "get": {
        "parameters": [
          {
            "description": "CHEBI Chemical ID, e.g. CHEBI:63577",
            "example": "CHEBI:63577",
            "in": "path",
            "name": "chemicalid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/fields",
            "name": "fields"
          },
          {
            "$ref": "#/components/parameters/dotfield",
            "name": "dotfield"
          },
          {
            "$ref": "#/components/parameters/callback",
            "name": "callback"
          },
          {
            "$ref": "#/components/parameters/email",
            "name": "email"
          }
        ],
        "responses": {
          "200": {
            "description": "A matching chemical object"
          }
        },
        "summary": "Retrieve chemical annotation object based on pr chemical id, support JSONP and CORS as well.",
        "tags": [
          "annotation"
        ]
      }
    },
    "/metadata": {
      "get": {
        "parameters": [
          {
            "$ref": "#/components/parameters/callback",
            "name": "callback"
          }
        ],
        "responses": {
          "200": {
            "description": "CORD API metadata object"
          }
        },
        "summary": "Get metadata about the data available from CORD API."
      }
    },
    "/metadata/fields": {
      "get": {
        "parameters": [
          {
            "description": "Pass a search term to filter the available fields, e.g. \"search=associated_with\".",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Pass a prefix string to filter the available fields, e.g. \"prefix=refseq\".",
            "in": "query",
            "name": "prefix",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/callback",
            "name": "callback"
          }
        ],
        "responses": {
          "200": {
            "description": "MyChemical.info metadata fields object"
          }
        },
        "summary": "Get metadata about the data fields available from MyChemical.info."
      }
    },
    "/query": {
      "get": {
        "parameters": [
          {
            "description": "Query string. Examples \"PMC6836328\", \"31045\", \"PR:000001978\".",
            "example": "chebi:CHEBI:63577",
            "in": "query",
            "name": "q",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/fields",
            "name": "fields"
          },
          {
            "$ref": "#/components/parameters/size",
            "name": "size"
          },
          {
            "$ref": "#/components/parameters/sort",
            "name": "sort"
          },
          {
            "description": "a single field or comma-separated fields to return facets, for example, \"facets=pr\"",
            "in": "query",
            "name": "facets",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/callback",
            "name": "callback"
          },
          {
            "$ref": "#/components/parameters/dotfield",
            "name": "dotfield"
          },
          {
            "$ref": "#/components/parameters/email",
            "name": "email"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryResult"
                }
              }
            },
            "description": "A query response object with \"hits\" property"
          }
        },
        "summary": "Make chemical query and return matching chemical list. Support JSONP and CORS as well.",
        "tags": [
          "query"
        ]
      },
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/fields",
            "name": "fields"
          },
          {
            "$ref": "#/components/parameters/dotfield",
            "name": "dotfield"
          },
          {
            "$ref": "#/components/parameters/email",
            "name": "email"
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "q": {
                    "description": "multiple query terms seperated by comma (also support \"+\" or white space), but no wildcard, e.g., \"q=1017,1018\" or \"q=CDK2+BTK\"",
                    "type": "string"
                  },
                  "scopes": {
                    "description": "Specify one or more fields (separated by comma) as the search \"scopes\", e.g., \"scopes=entrezchemical\", \"scopes=entrezchemical,ensemblchemical\". The available \"fields\" can be passed to \"scopes\" parameter are listed [here](http://mychemical.info/doc/query_service.html#available-fields). Default: \"scopes=entrezchemical,ensemblchemical,retired\" (either Entrez or Ensembl chemical ids).",
                    "type": "string"
                  }
                },
                "required": [
                  "q"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryPOSTResult"
                }
              }
            },
            "description": "Query response objects with \"hits\" property",
            "x-bte-response-mapping": {
              "$ref": "#/components/x-bte-response-mapping/query-post"
            }
          }
        },
        "summary": "Make chemical batch query and return matching chemical hits",
        "tags": [
          "query"
        ],
        "x-bte-kgs-operations": [
          {
            "$ref": "#/components/x-bte-kgs-operations/chemical2gene"
          },
          {
            "$ref": "#/components/x-bte-kgs-operations/chemical2protein"
          },
          {
            "$ref": "#/components/x-bte-kgs-operations/chemical2cell"
          },
          {
            "$ref": "#/components/x-bte-kgs-operations/chemical2cc"
          },
          {
            "$ref": "#/components/x-bte-kgs-operations/chemical2ma"
          },
          {
            "$ref": "#/components/x-bte-kgs-operations/chemical2bp"
          },
          {
            "$ref": "#/components/x-bte-kgs-operations/chemical2genomicentity"
          },
          {
            "$ref": "#/components/x-bte-kgs-operations/chemical2chemical"
          },
          {
            "$ref": "#/components/x-bte-kgs-operations/chemical2disease"
          },
          {
            "$ref": "#/components/x-bte-kgs-operations/chemical2anatomy"
          }
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "callback": {
        "description": "you can pass a \"callback\" parameter to make a JSONP call.",
        "in": "query",
        "name": "callback",
        "schema": {
          "type": "string"
        }
      },
      "dotfield": {
        "description": "control the format of the returned fields when passed \"fields\" parameter contains dot notation, e.g. \"fields=assoicated_with.pmd\". If \"true\" or \"1\", the returned data object contains a single \"associated_with\" field, otherwise (\"false\" or \"0\"), a single \"refseq\" field with a sub-field of \"rna\". Default: true.",
        "in": "query",
        "name": "dotfield",
        "schema": {
          "type": "boolean"
        }
      },
      "email": {
        "description": "If you are regular users of our services, we encourage you to provide us an email, so that we can better track the usage or follow up with you.",
        "in": "query",
        "name": "email",
        "schema": {
          "type": "string"
        }
      },
      "fields": {
        "description": "a comma-separated fields to limit the fields returned from the matching chemical hits.",
        "in": "query",
        "name": "fields",
        "schema": {
          "type": "string"
        }
      },
      "from": {
        "description": "the number of matching chemical hits to skip, starting from 0. Combining with \"size\" parameter, this can be useful for paging. Default: 0.",
        "in": "query",
        "name": "from",
        "schema": {
          "type": "integer"
        }
      },
      "size": {
        "description": "the maximum number of matching chemical hits to return (with a cap of 1000 at the moment). Default: 10.",
        "in": "query",
        "name": "size",
        "schema": {
          "type": "integer"
        }
      },
      "sort": {
        "description": "the comma-separated fields to sort on. Prefix with \"-\" for descending order, otherwise in ascending order. Default: sort by matching scores in decending order.",
        "in": "query",
        "name": "sort",
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "QueryPOSTResult": {
        "items": {
          "allOf": [
            {
              "properties": {
                "_score": {
                  "format": "float",
                  "type": "number"
                },
                "query": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          ]
        },
        "type": "array"
      },
      "QueryResult": {
        "properties": {
          "max_score": {
            "format": "float",
            "type": "number"
          },
          "took": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          }
        },
        "type": "object"
      },
      "int64_or_array": {
        "oneOf": [
          {
            "items": {
              "format": "int64",
              "type": "integer"
            },
            "type": "array"
          },
          {
            "format": "int64",
            "type": "integer"
          }
        ]
      },
      "string_or_array": {
        "oneOf": [
          {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          {
            "type": "string"
          }
        ]
      }
    },
    "x-bte-kgs-operations": {
      "chemical2ma": [
        {
          "inputSeparator": ",",
          "inputs": [
            {
              "id": "CHEBI",
              "semantic": "ChemicalSubstance"
            }
          ],
          "method": "post",
          "predicate": "related_to",
          "source": "Translator Text Mining Provider",
          "outputs": [
            {
              "id": "GO",
              "semantic": "MolecularActivity"
            },
            {
              "id": "MOP",
              "semantic": "MolecularActivity"
            }
          ],
          "parameters": {
            "fields": "associated_with"
          },
          "path": "/query",
          "requestBody": {
            "body": {
              "q": "{inputs[0]}",
              "scopes": "chebi"
            },
            "header": "application/x-www-form-urlencoded"
          },
          "supportBatch": true,
          "response_mapping": {
            "$ref": "#/components/x-bte-response-mapping/chemical2ma"
          }
        }
      ],
      "chemical2cc": [
        {
          "inputSeparator": ",",
          "inputs": [
            {
              "id": "CHEBI",
              "semantic": "ChemicalSubstance"
            }
          ],
          "method": "post",
          "predicate": "related_to",
          "source": "Translator Text Mining Provider",
          "outputs": [
            {
              "id": "GO",
              "semantic": "CellularComponent"
            }
          ],
          "parameters": {
            "fields": "associated_with"
          },
          "path": "/query",
          "requestBody": {
            "body": {
              "q": "{inputs[0]}",
              "scopes": "chebi"
            },
            "header": "application/x-www-form-urlencoded"
          },
          "supportBatch": true,
          "response_mapping": {
            "$ref": "#/components/x-bte-response-mapping/chemical2cc"
          }
        }
      ],
      "chemical2bp": [
        {
          "inputSeparator": ",",
          "inputs": [
            {
              "id": "CHEBI",
              "semantic": "ChemicalSubstance"
            }
          ],
          "method": "post",
          "predicate": "related_to",
          "source": "Translator Text Mining Provider",
          "outputs": [
            {
              "id": "GO",
              "semantic": "BiologicalProcess"
            }
          ],
          "parameters": {
            "fields": "associated_with"
          },
          "path": "/query",
          "requestBody": {
            "body": {
              "q": "{inputs[0]}",
              "scopes": "chebi"
            },
            "header": "application/x-www-form-urlencoded"
          },
          "supportBatch": true,
          "response_mapping": {
            "$ref": "#/components/x-bte-response-mapping/chemical2bp"
          }
        }
      ],
      "chemical2anatomy": [
        {
          "inputSeparator": ",",
          "inputs": [
            {
              "id": "CHEBI",
              "semantic": "ChemicalSubstance"
            }
          ],
          "method": "post",
          "predicate": "related_to",
          "source": "Translator Text Mining Provider",
          "outputs": [
            {
              "id": "UBERON",
              "semantic": "AnatomicalEntity"
            }
          ],
          "parameters": {
            "fields": "associated_with"
          },
          "path": "/query",
          "requestBody": {
            "body": {
              "q": "{inputs[0]}",
              "scopes": "chebi"
            },
            "header": "application/x-www-form-urlencoded"
          },
          "supportBatch": true,
          "response_mapping": {
            "$ref": "#/components/x-bte-response-mapping/chemical2anatomy"
          }
        }
      ],
      "chemical2gene": [
        {
          "inputSeparator": ",",
          "inputs": [
            {
              "id": "CHEBI",
              "semantic": "ChemicalSubstance"
            }
          ],
          "method": "post",
          "predicate": "related_to",
          "source": "Translator Text Mining Provider",
          "outputs": [
            {
              "id": "HGNC",
              "semantic": "Gene"
            }
          ],
          "parameters": {
            "fields": "associated_with"
          },
          "path": "/query",
          "requestBody": {
            "body": {
              "q": "{inputs[0]}",
              "scopes": "chebi"
            },
            "header": "application/x-www-form-urlencoded"
          },
          "supportBatch": true,
          "response_mapping": {
            "$ref": "#/components/x-bte-response-mapping/chemical2gene"
          }
        }
      ],
      "chemical2genomicentity": [
        {
          "inputSeparator": ",",
          "inputs": [
            {
              "id": "CHEBI",
              "semantic": "ChemicalSubstance"
            }
          ],
          "method": "post",
          "predicate": "related_to",
          "source": "Translator Text Mining Provider",
          "outputs": [
            {
              "id": "SO",
              "semantic": "GenomicEntity"
            }
          ],
          "parameters": {
            "fields": "associated_with"
          },
          "path": "/query",
          "requestBody": {
            "body": {
              "q": "{inputs[0]}",
              "scopes": "chebi"
            },
            "header": "application/x-www-form-urlencoded"
          },
          "supportBatch": true,
          "response_mapping": {
            "$ref": "#/components/x-bte-response-mapping/chemical2genomicentity"
          }
        }
      ],
      "chemical2protein": [
        {
          "inputSeparator": ",",
          "inputs": [
            {
              "id": "CHEBI",
              "semantic": "ChemicalSubstance"
            }
          ],
          "method": "post",
          "predicate": "related_to",
          "source": "Translator Text Mining Provider",
          "outputs": [
            {
              "id": "PR",
              "semantic": "Protein"
            }
          ],
          "parameters": {
            "fields": "associated_with"
          },
          "path": "/query",
          "requestBody": {
            "body": {
              "q": "{inputs[0]}",
              "scopes": "chebi"
            },
            "header": "application/x-www-form-urlencoded"
          },
          "supportBatch": true,
          "response_mapping": {
            "$ref": "#/components/x-bte-response-mapping/chemical2protein"
          }
        }
      ],
      "chemical2cell": [
        {
          "inputSeparator": ",",
          "inputs": [
            {
              "id": "CHEBI",
              "semantic": "ChemicalSubstance"
            }
          ],
          "method": "post",
          "predicate": "related_to",
          "source": "Translator Text Mining Provider",
          "outputs": [
            {
              "id": "CL",
              "semantic": "Cell"
            }
          ],
          "parameters": {
            "fields": "associated_with"
          },
          "path": "/query",
          "requestBody": {
            "body": {
              "q": "{inputs[0]}",
              "scopes": "chebi"
            },
            "header": "application/x-www-form-urlencoded"
          },
          "supportBatch": true,
          "response_mapping": {
            "$ref": "#/components/x-bte-response-mapping/chemical2cell"
          }
        }
      ],
      "chemical2disease": [
        {
          "inputSeparator": ",",
          "inputs": [
            {
              "id": "CHEBI",
              "semantic": "ChemicalSubstance"
            }
          ],
          "method": "post",
          "predicate": "related_to",
          "source": "Translator Text Mining Provider",
          "outputs": [
            {
              "id": "DOID",
              "semantic": "Disease"
            }
          ],
          "parameters": {
            "fields": "associated_with"
          },
          "path": "/query",
          "requestBody": {
            "body": {
              "q": "{inputs[0]}",
              "scopes": "chebi"
            },
            "header": "application/x-www-form-urlencoded"
          },
          "supportBatch": true,
          "response_mapping": {
            "$ref": "#/components/x-bte-response-mapping/chemical2disease"
          }
        }
      ],
      "chemical2chemical": [
        {
          "inputSeparator": ",",
          "inputs": [
            {
              "id": "CHEBI",
              "semantic": "ChemicalSubstance"
            }
          ],
          "method": "post",
          "predicate": "related_to",
          "source": "Translator Text Mining Provider",
          "outputs": [
            {
              "id": "CHEBI",
              "semantic": "ChemicalSubstance"
            }
          ],
          "parameters": {
            "fields": "associated_with"
          },
          "path": "/query",
          "requestBody": {
            "body": {
              "q": "{inputs[0]}",
              "scopes": "chebi"
            },
            "header": "application/x-www-form-urlencoded"
          },
          "supportBatch": true,
          "response_mapping": {
            "$ref": "#/components/x-bte-response-mapping/chemical2chemical"
          }
        }
      ]
    },
    "x-bte-response-mapping": {
      "chemical2ma": {
        "pmc": "associated_with.pmc",
        "MOP": "associated_with.mop",
        "GO": "associated_with.go"
      },
      "chemical2cc": {
        "pmc": "associated_with.pmc",
        "GO": "associated_with.go"
      },
      "chemical2bp": {
        "pmc": "associated_with.pmc",
        "GO": "associated_with.go"
      },
      "chemical2anatomy": {
        "pmc": "associated_with.pmc",
        "UBERON": "associated_with.uberon"
      },
      "chemical2gene": {
        "pmc": "associated_with.pmc",
        "HGNC": "associated_with.hgnc"
      },
      "chemical2genomicentity": {
        "pmc": "associated_with.pmc",
        "SO": "associated_with.so"
      },
      "chemical2protein": {
        "pmc": "associated_with.pmc",
        "PR": "associated_with.pr"
      },
      "chemical2cell": {
        "pmc": "associated_with.pmc",
        "CL": "associated_with.cl"
      },
      "chemical2disease": {
        "pmc": "associated_with.pmc",
        "DOID": "associated_with.doid"
      },
      "chemical2chemical": {
        "pmc": "associated_with.pmc",
        "CHEBI": "associated_with.chebi"
      }
    }
  }
}