# The observation file is a YAML file yielding a Python dictionary structure.
# At top level, there is a string determining the datatype/category,
# that is referring to something that the ensemble or realization objects
# are able to internalize, "smry, rft, txt, scalar"
#
# Below the top level, the structure can vary between the datatypes.

# There is an implied concept of a "single" observation from this data structure
# Returned dataframes must be able to refer to single observations based on data
# in this file. If multiple dates are listed for "one" observations, this
# is multiple observations. 
# 
# Eclipse summary vectors.
smry:
  - key: FOPT
    observations:
      - FOPTH
    comment: Allocated FOPTH can take part in mismatch calculation
  - key: WBP4:OP_1
    comment: foo
    observations:
      - value: 185
        error: 5
        date: 2001-01-01
      - {value: 178, error: 10, date: 2002-01-01}
  - key: FOPR
    comment: Platform rate at an important date
    observations:
      - {value: 2000, error: 10, date: 2003-01-01}
# These observations will be internalized as
# smry/FOPT
# smry/WBP4:OP_1@2001-01-01
# smry/WBP4:OP_1@2002-01-01
# smry/FOPR@2003-01-01
# (The date component can be taken out and presented in its own column)


# Data internalized from Eclipse RFT file output
rft:
  - well: OP_1
    date: 2001-09-10
    comment: RFT pressure OP_1 before well startup
    observations:
      - {value: 303.5, error: 3, zone: BelowTopReek, MDmsl: 2396, x: 462698, y: 5934227, z: 1609.58}
  - well: OP_2
    date: 2001-09-10
    comment: RFT pressure OP_1 before well startup
    observations:
      - value: 305
        error: 5
        i: 39
        j: 90
        k: 10
# Internalized as
# rft/OP_1/0@2001-09-10
# rft/OP_2/0@2001-09-10
# The numerical index here refers to the list of observations. Zero-indexed.

# Referring to a value that is contained in a <key>-<value> txt file
# in each realization This could be relevant for conditioning, but can
# also be used for anything else The group name 'txt' is chosen here
# due to the relationship with the load_txt() function
txt:
  - localpath: output.txt
    key: inplace_stoiip
    value: 3220000
    comment: "Example of misuse as an observation, but which can be used for ranking"
    unit: m3  # this is a string that can be used, but does not have to be used.
  - localpath: welldata.txt
    key: well_length_OP3
    value: 1000
    comment: Compare to the output of a script that calculate well lengths for a planned well
    unit: meter
  - localpath: parameters.txt
    key: INTERPOLATE_GO
    value: 1
    comment: >
      By comparing with this, we can get an impression of how the consequences
      of high-case for gas oil relperm looks like
    
# Pointing to data internalized by load_scalar()
scalar:
  # Optimizing on NPV could be the same as realization ranking on this:
  - key: npv.txt
    value: 3000
    comment: "Calculated NPV of the run from STEA is dumped to npv.txt"
