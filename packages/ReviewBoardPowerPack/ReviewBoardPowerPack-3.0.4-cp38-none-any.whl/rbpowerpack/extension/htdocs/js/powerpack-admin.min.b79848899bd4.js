(function(){if(!window.PowerPack){PowerPack={}}PowerPack.Admin={};(function(){var LicenseType,LicenseUpdateState;PowerPack.Admin.LicenseType={UNLICENSED:0,TRIAL:1,PURCHASED:2};PowerPack.Admin.LicenseUpdateState={CHECKING:"checking",HAS_LATEST:"has-latest",APPLYING:"applying",APPLIED:"applied",ERROR_CHECKING:"error",ERROR_APPLYING:"error"};LicenseType=PowerPack.Admin.LicenseType;LicenseUpdateState=PowerPack.Admin.LicenseUpdateState;PowerPack.Admin.License=Backbone.Model.extend({defaults:{applyLicenseURL:null,company:null,expirationDate:null,expired:false,features:null,hardExpired:false,hardExpirationDate:null,hasUserCap:false,inPerpetualUserMode:false,installKey:null,licenseType:LicenseType.UNLICENSED,updateRequestPayload:null,updateState:null,userCap:0,userCount:0},getSummary:function(){var licenseType=this.get("licenseType"),summary,expired;if(licenseType===LicenseType.UNLICENSED){summary=gettext("Power Pack needs a license")}else{expired=this.get("expired");if(licenseType===LicenseType.TRIAL){if(expired){summary=gettext("Expired trial license for %s")}else{summary=gettext("Active trial license for %s")}}else{if(expired){summary=gettext("Expired license for %s")}else{summary=gettext("Active license for %s")}}summary=interpolate(summary,[this.get("company")])}return summary},expiresSoon:function(){var licenseType=this.get("licenseType"),days;if(licenseType===LicenseType.UNLICENSED){return true}else if(licenseType===LicenseType.TRIAL){days=10}else{days=30}return moment(this.get("expirationDate")).diff(moment(),"days")<=days},getManageURL:function(){return"https://www.reviewboard.org/licenses/powerpack/"+this.get("installKey")+"/"},getRenewURL:function(){return this.getManageURL()+"renewals/"},checkForUpdates:function(){this.set("updateState",LicenseUpdateState.CHECKING);$.ajax({method:"POST",url:"https://www.reviewboard.org/licenses/powerpack/"+this.get("installKey")+"/download/",data:{license_request:this.get("updateRequestPayload")},success:_.bind(function(rsp){if(!rsp||rsp.has_latest===undefined){return}if(rsp.has_latest){this.set("updateState",LicenseUpdateState.HAS_LATEST)}else{this._applyLicenseUpdate(rsp.license_data)}},this),error:_.bind(function(rsp){console.error("Error checking for Power Pack license: "+"payload=%o",rsp);this.set("updateState",LicenseUpdateState.ERROR_CHECKING)},this)})},parse:function(data){if(data.expirationDate){data.expirationDate=new Date(data.expirationDate)}if(data.hardExpirationDate){data.hardExpirationDate=new Date(data.hardExpirationDate)}data.licenseType=PowerPack.Admin.LicenseType[data.licenseType];return data},_applyLicenseUpdate:function(licenseData){this.set("updateState",LicenseUpdateState.APPLYING);$.ajax({method:"POST",url:this.get("applyLicenseURL"),data:{"license-data":licenseData},dataType:"json",success:_.bind(function(rsp){this.set(rsp,this.parse(rsp));this.set("updateState",LicenseUpdateState.APPLIED)},this),error:_.bind(function(rsp){console.error("Error applying Power Pack license: payload=%o",rsp);this.set("updateState",LicenseUpdateState.ERROR_APPLYING)},this)})}})})();PowerPack.Admin.AutoAddLicensedUsersView=Backbone.View.extend({events:{"change .powerpack-auto-add-mode input[type=radio]":"_updateState"},render:function(){this._$modes=this.$(".powerpack-auto-add-mode input[type=radio]");this._$groupFields=this.$(".powerpack-auto-add-groups").find("select, input");this._updateState();return this},_updateState:function(){var $checked=this._$modes.filter(":checked");this._$groupFields.prop("disabled",$checked.val()!=="groups")}});(function(){var LicenseType=PowerPack.Admin.LicenseType,LicenseUpdateState=PowerPack.Admin.LicenseUpdateState;PowerPack.Admin.ConfigurePowerPackView=Backbone.View.extend({events:{"change #field-license-file":"_onLicenseUploaded"},GET_TRIAL_LICENSE_TEXT:gettext("Try it free for 30 days"),MANAGE_LICENSE_TEXT:gettext("Manage your license"),PURCHASE_LICENSE_TEXT:gettext("Purchase a license"),UPLOAD_LICENSE_TEXT:gettext("Upload a new license file"),RENEW_PURCHASED_TEXT:gettext("Renew your license"),RENEW_TRIAL_TEXT:gettext("Request a new trial"),licenseInfoTemplate:_.template(["<div>",' <div id="powerpack-license-info-header">','  <h3 class="powerpack-license-info-summary"><%- summaryText %></h3>',"  <% if (noticeHTML) { %>",'   <div class="powerpack-license-info-notice"><%= noticeHTML %></div>',"  <% } %>",'  <div id="powerpack-license-update-state"></div>'," </div>",' <div class="powerpack-license-buttons">',"  <% _.each(buttons, function(buttonInfo) { %>",'   <a class="btn primary" href="<%- buttonInfo.url %>">',"    <%- buttonInfo.text %>","   </a>","  <% }) %>",'  <label class="btn primary" id="powerpack-upload-license-button"','         for="field-license-file">',"   <%- uploadLicenseText %>","  </label>"," </div>"," <ul>","  <% if (isLicensed) { %>",'   <li id="powerpack-license-info-expiration">',"    <div>","     <p><%= expirationHTML %></p>","     <% if (perpetualUserModeText) { %>","      <p><%= perpetualUserModeText %></p>","     <% } %>","    </div>","   </li>","  <% } %>","  <% if (userCap) { %>",'   <li id="powerpack-license-info-users">',"    <div>","     <%- assignedUsersText %>","     <% if (usersWarningText) { %>",'      <div class="powerpack-users-warning">','       <span class="rb-icon rb-icon-warning"></span>',"       <%= usersWarningText %>","      </div>","     <% } %>",'     <a href="users/" class="powerpack-manage-licensed-users">',"      <%- manageUsersText %>","     </a>","    </div>","   </li>","  <% } %>"," </ul>","</div>"].join("")),featureTemplate:_.template(['<div class="form-row checkbox-row field-<%- id %>"','     id="row-<%- id %>">',' <input type="checkbox" id="id_<%- id %>" name="<%- id %>"',"        <% if (disabled) { %>disabled<% } %>","        <% if (enabled) { %>checked<% } %>","        >",' <label for="id_<%- id %>"','        class="vCheckboxLabel"><%- name %></label>'," <% if (summary) { %>",'  <p class="help"><%- summary %></p>'," <% } %>"," <% if (!available) { %>",'  <p class="help powerpack-feature-unavailable">',"   <%- unavailableReason %>","  </p>"," <% } %>","</div>"].join("")),uploadLicenseForm:_.template(['<form action="." method="post" enctype="multipart/form-data"','      style="display: none">',' <input type="hidden" name="csrfmiddlewaretoken"','        value="<%- csrfToken %>">',' <input id="field-license-file" name="license_file" type="file">',"</form>"].join("")),initialize:function(options){this.csrfToken=options.csrfToken;this.features=options.features;this.license=options.license;this.purchaseLicenseURL=options.purchaseLicenseURL;this.trialLicenseURL=options.trialLicenseURL;this._$features=null;this._$licenseInfoDetails=null;this._$saveButton=null;this._$updateState=null;this._$uploadForm=null;this._$uploadLicenseButton=null},render:function(){this._$uploadForm=$(this.uploadLicenseForm({csrfToken:this.csrfToken}));this.$el.append(this._$uploadForm);this._$features=$("#powerpack-features-info");this._$featuresContainer=$("#powerpack-features-info-container");this._$licenseInfoDetails=$("#powerpack-license-info");this._$saveButton=$("#powerpack-save-button");this._showLicenseDetails();this.listenTo(this.license,"change:updateState",this._onUpdateStateChanged);this.license.checkForUpdates();return this},_showLicenseDetails:function(){var buttons=[],license=this.license,licenseFeatures=license.get("features"),licenseType=license.get("licenseType"),expired=license.get("expired"),userCap=license.get("userCap"),userCount=license.get("userCount"),numPerpetualUsers=license.get("numPerpetualUsers"),isLicensed=licenseType!==LicenseType.UNLICENSED,expiresSoon=false,expirationDate,licenseStatus,assignedUsersText,perpetualUserModeText,usersWarningText,expirationHTML,noticeHTML,feature,i;if(isLicensed){if(expired){expirationHTML=gettext('Expired <time class="timesince" datetime="%(timestamp)s"></time> on %(date)s');if(!license.get("hardExpired")){noticeHTML=interpolate(gettext('Your grace period is now active. Unless renewed, Power Pack will be disabled <time class="timesince" datetime="%s"></time>.'),[moment(license.get("hardExpirationDate")).format()])}}else{expiresSoon=license.expiresSoon();expirationHTML=gettext('Expires <time class="timesince" datetime="%(timestamp)s"></time> on %(date)s');if(expiresSoon){if(licenseType===LicenseType.TRIAL){noticeHTML=interpolate(gettext('Your license expires soon! Make sure to <a href="%s">purchase a license</a> before the expiration date.'),[this.purchaseLicenseURL])}else{noticeHTML=interpolate(gettext('Your license expires soon! Make sure to <a href="%s">renew your license</a> before the expiration date.'),[license.getRenewURL()])}}}expirationDate=moment(license.get("expirationDate"));expirationHTML=interpolate(expirationHTML,{date:expirationDate.format("MMM. DD, YYYY, h:m A"),timestamp:expirationDate.format()},true);if(license.get("inPerpetualUserMode")){noticeHTML=interpolate(gettext("Your trial has expired, but you can still use Power Pack for free for up to %s users!"),[numPerpetualUsers])}}else{noticeHTML=interpolate(gettext("Some features can be used for free for up to %s users. Purchase a license to gain full access to Power Pack."),[numPerpetualUsers])}if(userCap===0){assignedUsersText=gettext("Unlimited seats available")}else{assignedUsersText=interpolate(gettext("%(userCount)s out of %(userCap)s users assigned"),{userCap:userCap,userCount:userCount},true);if(userCount===0){usersWarningText=gettext("Power Pack is enabled, but there are no assigned users.")}else if(userCount===userCap){if(isLicensed&&licenseType===LicenseType.PURCHASED){usersWarningText=interpolate(gettext('You\'ve hit the maximum number of assigned users. You can <a href="%s">upgrade your license</a> to add more.'),[license.getManageURL()])}else{usersWarningText=interpolate(gettext('You\'ve hit the maximum number of assigned users. You can <a href="%s">purchase a license</a> to add more.'),[this.purchaseLicenseURL])}}}if(!isLicensed||expired){licenseStatus="bad"}else if(usersWarningText||license.expiresSoon()){licenseStatus="warning"}else{licenseStatus="good"}this._$licenseInfoDetails.html(this.licenseInfoTemplate({assignedUsersText:assignedUsersText,buttons:this._buildLicenseButtons(),expirationHTML:expirationHTML,isLicensed:isLicensed,manageUsersText:gettext("Manage users"),noticeHTML:noticeHTML,perpetualUserModeText:perpetualUserModeText,summaryText:license.getSummary(),uploadLicenseText:this.UPLOAD_LICENSE_TEXT,userCap:userCap,userCount:userCount,usersWarningText:usersWarningText})).attr("class","powerpack-license-status-"+licenseStatus).find(".timesince").timesince();this._$features.empty();for(i=0;i<this.features.length;i++){feature=this.features[i];this._$features.append(this.featureTemplate({available:feature.available,disabled:!feature.available||feature.always_enabled,enabled:!!licenseFeatures[feature.id],id:feature.id,name:feature.name,summary:feature.summary,unavailableReason:feature.unavailable_reason}))}this._$featuresContainer.show();this._$saveButton.show();this._$updateState=$("#powerpack-license-update-state");this._$uploadLicenseButton=$("#powerpack-upload-license-button")},_buildLicenseButtons:function(){var license=this.license,licenseType=license.get("licenseType"),expired=license.get("expired"),buttons;if(licenseType===LicenseType.UNLICENSED){buttons=[{text:this.GET_TRIAL_LICENSE_TEXT,url:this.trialLicenseURL},{text:this.PURCHASE_LICENSE_TEXT,url:this.purchaseLicenseURL}]}else if(licenseType===LicenseType.TRIAL){if(expired){buttons=[{text:this.RENEW_TRIAL_TEXT,url:license.getRenewURL()},{text:this.PURCHASE_LICENSE_TEXT,url:this.purchaseLicenseURL}]}else{buttons=[{text:this.PURCHASE_LICENSE_TEXT,url:this.purchaseLicenseURL}]}}else{if(expired){buttons=[{text:this.RENEW_PURCHASED_TEXT,url:license.getRenewURL()}]}else{buttons=[{text:this.MANAGE_LICENSE_TEXT,url:license.getManageURL()}]}}return buttons},_onLicenseUploaded:function(){this._$uploadLicenseButton.empty().text(gettext("Uploading license file...")).prepend($('<span class="fa fa-spinner fa-spin">'));this._$uploadForm.submit()},_onUpdateStateChanged:function(){var state=this.license.get("updateState"),newText;if(state===LicenseUpdateState.CHECKING){newText=gettext("Checking for updates...")}else if(state===LicenseUpdateState.HAS_LATEST){newText=gettext("Your license is up-to-date.")}else if(state===LicenseUpdateState.APPLYING){newText=gettext("Applying license update...")}else if(state===LicenseUpdateState.APPLIED){newText=gettext("Your license has been automatically updated.");this._showLicenseDetails()}else if(state===LicenseUpdateState.ERROR_CHECKING){newText=gettext("An error occurred when trying to check for license updates. Please contact support.")}else if(state===LicenseUpdateState.ERROR_APPLYING){newText=gettext("An error occurred when trying to update to a new license. Please contact support.")}if(newText){this._$updateState.text(newText)}}})})();PowerPack.Admin.ImportLicensedUsersView=Backbone.View.extend({events:{"change #id_source input[type=radio]":"_updateState"},render:function(){this._$radios=this.$("#id_source input[type=radio]");this._$groups=this.$("#id_group");this._$importButton=this.$("#powerpack_import_users");this._updateState();return this},_updateState:function(){var $checked=this._$radios.filter(":checked");this._$importButton.prop("disabled",$checked.length===0);this._$groups.prop("disabled",$checked.val()!=="group")}});PowerPack.Admin.ManageLicensedUsersView=Backbone.View.extend({events:{"change #powerpack_users input[type=checkbox]":"_onCheckboxesChanged","click #powerpack_users input[type=checkbox]":"_onCheckboxesClicked"},initialize:function(){this._$checkboxes=null;this._$removeButton=null;this._lastChecked=null},render:function(){this._$checkboxes=this.$("#powerpack_users input[type=checkbox]");this._$removeButton=this.$("#powerpack_remove_users");this.$("#id_users").rbautocomplete({url:SITE_ROOT+"api/users/",matchCase:false,multiple:true,width:350,extraParams:{fullname:1},parse:function(data){var items=data.users,parsed=[],value,i;for(i=0;i<items.length;i++){value=items[i];parsed.push({data:value,value:value.username,result:value.username})}return parsed},formatItem:function(data){var s=data.username;if(data.fullname){s+=" <span>("+_.escape(data.fullname)+")</span>"}return s},cmp:function(term,a,b){var aUsername=a.data.username,bUsername=b.data.username,aFullname=a.data.fullname,bFullname=a.data.fullname;if(aUsername.indexOf(term)===0){if(bUsername.indexOf(term)===0){return aUsername.localeCompare(bUsername)}return-1}else if(bUsername.indexOf(term)===0){return 1}else{return aFullname.localeCompare(bFullname)}},error:function(xhr){var text;try{text=$.parseJSON(xhr.responseText).err.msg}catch(e){text="HTTP "+xhr.status+" "+xhr.statusText}alert(text)}}).on("autocompleteshow",function(){var $resultsPane=$(".ui-autocomplete-results:not("+":has(.ui-autocomplete-footer))");if($resultsPane.length>0){$("<div/>").addClass("ui-autocomplete-footer").text(gettext("Press Tab to auto-complete.")).appendTo($resultsPane)}});return this},_onCheckboxesChanged:function(){var checkedCount=this._$checkboxes.filter(":checked").length;this._$removeButton.prop("disabled",checkedCount===0)},_onCheckboxesClicked:function(evt){var $rangedCheckboxes,start,end;if(this._lastChecked&&evt.shiftKey){start=this._$checkboxes.index(evt.target);end=this._$checkboxes.index(this._lastChecked);$rangedCheckboxes=this._$checkboxes.slice(Math.min(start,end),Math.max(start,end)+1);$rangedCheckboxes.prop("checked",this._lastChecked.checked)}this._lastChecked=evt.target}})}).call(this);
