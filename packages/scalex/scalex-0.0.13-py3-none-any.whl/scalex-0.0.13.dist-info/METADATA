Metadata-Version: 2.1
Name: scalex
Version: 0.0.13
Summary: Single-cell integrative Analysis via Latent feature EXtraction
Home-page: https://github.com/jsxlei/scalex
Author: Lei Xiong
Author-email: jsxlei@gmail.com
License: MIT
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3.7
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Requires-Python: >3.6.0
Requires-Dist: numpy (>=1.17.2)
Requires-Dist: pandas (>=0.25.1)
Requires-Dist: scipy (>=1.3.1)
Requires-Dist: scikit-learn (>=0.22.1)
Requires-Dist: torch (>=1.0.0)
Requires-Dist: scanpy (>=1.4.5)
Requires-Dist: tqdm (>=4.28.1)
Requires-Dist: matplotlib (>=3.0.3)
Requires-Dist: seaborn (>=0.9.0)

# SCALEX: Single-cell integrative Analysis via latent Feature EXtraction 

## Installation  	
#### install from PyPI

    pip install scalex

#### install from GitHub

	git clone git://github.com/jsxlei/scalex.git
	cd scalex
	python setup.py install

scalex is implemented in [Pytorch](https://pytorch.org/) framework.  
Running scalex on CUDA is recommended if available.   
Installation only requires a few minutes.  

## Quick Start


### 1. Command line

    SCALEX.py --data_list data1 data2 --batch_categories batch1 batch2 

    data_list: data path of each batch of single-cell dataset
    batch_categories: name of each batch


#### Output
Output will be saved in the output folder including:
* **checkpoint**:  saved model to reproduce results cooperated with option --checkpoint or -c
* **adata.h5ad**:  preprocessed data and results including, latent, clustering and imputation
* **umap.png**:  UMAP visualization of latent representations of cells 
* **log.txt**:  log file of training process


#### Useful options  
* output folder for saveing results: [-o] or [--outdir] 
* filter rare genes, default 3: [--min_cell]
* filter low quality cells, default 600: [--min_gene]  
* select the number of highly variable genes, keep all genes with -1, default 2000: [--n_top_genes]


#### Help
Look for more usage of scalex

	SCALEX.py --help 


### 2. API function

    from scalex.function import SCALEX
    adata = SCALEX(data_list, batch_categories)

Function of parameters are similar to command line options.
Output is a Anndata object for further analysis with scanpy.

#### Tutorial


