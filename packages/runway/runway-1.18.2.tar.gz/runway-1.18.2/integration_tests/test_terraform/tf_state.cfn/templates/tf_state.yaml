AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  BucketNameOmitted: !Or
    - !Equals
      - !Ref 'BucketName'
      - ''
    - !Equals
      - !Ref 'BucketName'
      - undefined
  TableNameOmitted: !Or
    - !Equals
      - !Ref 'TableName'
      - ''
    - !Equals
      - !Ref 'TableName'
      - undefined
Description: Create Terraform backend components
Outputs:
  TerraformLockTableName:
    Description: Name of DynamoDB table for Terraform locks
    Export:
      Name: !Sub '${AWS::StackName}-TerraformLockTableName'
    Value: !Ref 'TerraformLockTable'
  TerraformStateBucketArn:
    Description: Arn of bucket storing Terraform state
    Export:
      Name: !Sub '${AWS::StackName}-TerraformStateBucketArn'
    Value: !GetAtt 'TerraformStateBucket.Arn'
  TerraformStateBucketName:
    Description: Name of bucket storing Terraform state
    Export:
      Name: !Sub '${AWS::StackName}-TerraformStateBucketName'
    Value: !Ref 'TerraformStateBucket'
Parameters:
  BucketName:
    Default: ''
    Description: (optional) Name for the S3 bucket
    Type: String
  TableName:
    Default: ''
    Description: (optional) Name for the DynamoDB table
    Type: String
Resources:
  TerraformLockTable:
    Properties:
      AttributeDefinitions:
        - AttributeName: LockID
          AttributeType: S
      KeySchema:
        - AttributeName: LockID
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
      TableName: !If
        - TableNameOmitted
        - !Ref 'AWS::NoValue'
        - !Ref 'TableName'
    Type: AWS::DynamoDB::Table
  TerraformStateBucket:
    Properties:
      AccessControl: Private
      BucketName: !If
        - BucketNameOmitted
        - !Ref 'AWS::NoValue'
        - !Ref 'BucketName'
      LifecycleConfiguration:
        Rules:
          - NoncurrentVersionExpirationInDays: 90
            Status: Enabled
      VersioningConfiguration:
        Status: Enabled
    Type: AWS::S3::Bucket
