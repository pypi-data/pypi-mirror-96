(self.webpackChunk_here_map_widget_for_jupyter=self.webpackChunk_here_map_widget_for_jupyter||[]).push([[495],{3495:(e,r,t)=>{"use strict";t.r(r),t.d(r,{default:()=>i});var n=t(7287);function o(e,r,t){if(null!==e)for(var n,i,l,a,u,f,g,s,c=0,y=0,h=e.type,p="FeatureCollection"===h,k="Feature"===h,m=p?e.features.length:1,_=0;_<m;_++){u=(s=!!(g=p?e.features[_].geometry:k?e.geometry:e)&&"GeometryCollection"===g.type)?g.geometries.length:1;for(var P=0;P<u;P++){var b=0,w=0;if(null!==(a=s?g.geometries[P]:g)){f=a.coordinates;var d=a.type;switch(c=!t||"Polygon"!==d&&"MultiPolygon"!==d?0:1,d){case null:break;case"Point":if(!1===r(f,y,_,b,w))return!1;y++,b++;break;case"LineString":case"MultiPoint":for(n=0;n<f.length;n++){if(!1===r(f[n],y,_,b,w))return!1;y++,"MultiPoint"===d&&b++}"LineString"===d&&b++;break;case"Polygon":case"MultiLineString":for(n=0;n<f.length;n++){for(i=0;i<f[n].length-c;i++){if(!1===r(f[n][i],y,_,b,w))return!1;y++}"MultiLineString"===d&&b++,"Polygon"===d&&w++}"Polygon"===d&&b++;break;case"MultiPolygon":for(n=0;n<f.length;n++){for(w=0,i=0;i<f[n].length;i++){for(l=0;l<f[n][i].length-c;l++){if(!1===r(f[n][i][l],y,_,b,w))return!1;y++}w++}b++}break;case"GeometryCollection":for(n=0;n<a.geometries.length;n++)if(!1===o(a.geometries[n],r,t))return!1;break;default:throw new Error("Unknown Geometry Type")}}}}}const i=function(e,r){void 0===r&&(r={});var t=0,i=0,l=0;return o(e,(function(e){t+=e[0],i+=e[1],l++}),!0),(0,n.point)([t/l,i/l],r.properties)}}}]);