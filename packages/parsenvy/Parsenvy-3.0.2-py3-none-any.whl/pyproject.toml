[tool.poetry]
name = "Parsenvy"
version = "3.0.2"
description = "Enviously elegant environment variable parsing"
license = "BSD-3-Clause"
authors = ["Nik Kantar <nik@nkantar.com>"]
readme = "README.rst"
homepage = "https://pypi.org/project/Parsenvy"
repository = "https://github.com/nkantar/Parsenvy"
documentation = "https://parsenvy.readthedocs.io"

keywords = ["environment", "variables"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Utilities",
  "Typing :: Typed",
]

include = [
  "CHANGELOG.md",
  "CODE_OF_CONDUCT.rst",
  "CONTRIBUTING.rst",
  "LICENSE",
  "Makefile",
  "README.rst",
  "bin/*.sh",
  "docs/Makefile",
  "docs/make.bat",
  "docs/source/*.rst",
  "docs/source/conf.py",
  "parsenvy/*.py",
  "poetry.lock",
  "pyproject.toml",
  "tests/test_*.py",
]

[tool.poetry.dependencies]
python = "^3.6"

# Docs
sphinx = {version = "^3.5.1", optional = true}
sphinx-rtd-theme = {version = "^0.5.1", optional = true}
m2r2 = {version = "^0.2.7", optional = true}

[tool.poetry.dev-dependencies]
mypy = "^0.812"
black = "^20.8b1"
flake8 = "^3.8.4"
pydocstyle = "^5.1.1"
pytest = "^6.2.2"
pytest-watch = "^4.2.0"
coverage = "^5.4"
pytest-cov = "^2.11.1"
pytest-pythonpath = "^0.7.3"
pdbpp = "^0.10.2"

# Docs
# NOTE: Please also add to:
#   - [tool.poetry.dependencies] above as optional
#   - [tool.poetry.extras] below
sphinx = "^3.5.1"
sphinx-rtd-theme = "^0.5.1"
m2r2 = "^0.2.7"

[tool.poetry.extras]
docs = [
  "sphinx",
  "sphinx-rtd-theme",
  "m2r2",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest]
python_paths = "parsenvy"

[tool.coverage.run]
branch = true
source = ["parsenvy"]

[tool.coverage.report]
show_missing = true
