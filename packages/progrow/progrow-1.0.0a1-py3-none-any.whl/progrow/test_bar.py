from pytest import mark

from progrow.bar import bar, block


@mark.parametrize(
    "width, percent, expect",
    [
        (2, 0.00, "  "),  # 0/8
        (2, 0.05, "▏ "),  # 1/8
        (2, 0.10, "▎ "),  # 2/8
        (2, 0.15, "▍ "),  # 3/8
        (2, 0.20, "▍ "),  # 3/8
        (2, 0.25, "▌ "),  # 4/8
        (2, 0.30, "▋ "),  # 5/8
        (2, 0.35, "▋ "),  # 5/8
        (2, 0.40, "▊ "),  # 6/8
        (2, 0.45, "▉ "),  # 7/8
        (2, 0.50, "█ "),  # 8/8
        (2, 0.55, "█▏"),  # 8/8 + 1/8
        (2, 0.60, "█▎"),  # 8/8 + 2/8
        (2, 0.65, "█▍"),  # 8/8 + 3/8
        (2, 0.70, "█▍"),  # 8/8 + 3/8
        (2, 0.75, "█▌"),  # 8/8 + 4/8
        (2, 0.80, "█▋"),  # 8/8 + 5/8
        (2, 0.85, "█▋"),  # 8/8 + 5/8
        (2, 0.90, "█▊"),  # 8/8 + 6/8
        (2, 0.95, "█▉"),  # 8/8 + 7/8
        (2, 1.00, "██"),  # 8/8 + 8/8
    ],
)
def test_bar(width: int, percent: float, expect: str) -> None:
    assert bar(width=width, percent=percent) == expect


@mark.parametrize(
    "percent, expect",
    [
        (0.0, " "),  # 0/8
        (0.1, "▏"),  # 1/8
        (0.2, "▎"),  # 2/8
        (0.3, "▍"),  # 3/8
        (0.4, "▍"),  # 3/8
        (0.5, "▌"),  # 4/8
        (0.6, "▋"),  # 5/8
        (0.7, "▋"),  # 5/8
        (0.8, "▊"),  # 6/8
        (0.9, "▉"),  # 7/8
        (1.0, "█"),  # 8/8
    ],
)
def test_block(percent: float, expect: str) -> None:
    assert block(percent) == expect
