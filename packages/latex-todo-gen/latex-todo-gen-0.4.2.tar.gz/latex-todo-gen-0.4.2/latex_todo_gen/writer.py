from . import latex


def write_markdown(keywords: list, todos: dict, outfile: str, *, description, footer, quote=True):
    """Write contents

    keywords:    list of defined keywords
    todos:       dictionary generated by get_todos()
    outfile:     path to output file
    description: Line describing the file. Pass None to disable.
    footer:      Link to repository. Pass None to disable.
    quote:       Add line below the keyword line. Pass False to disable.

    ----------

    # TODO
    description

    ## FIXME
    ### path-to-file
    ```latex
    66 | % FIXME Change this
    67 | Lorem ipsum
    70 | % FIXME Change that
    71 | Lorem ipsum
    ```

    ## TODO
    ### path-to-file
    ```latex
    24 | % TODO How to do this?
    25 | Lorem ipsum
    30 | % TODO How to do that?
    31 | Lorem ipsum
    ```
    ### path-to-another-file
    ```latex
    12 | % TODO Make this better
    13 | Lorem ipsum
    ```

    ---
    footer
    """
    if footer is None:
        footer = "Generated by [latex-todo-gen](https://gitlab.com/matyashorky/latex-todo-gen)."

    with open(outfile, "w") as handle:
        handle.write("# TODO\n")
        if type(description) == str:
            handle.write(description + "\n")
        handle.write("\n")

        for keyword in keywords:
            handle.write("# " + keyword + "\n")
            for filename, quotes in todos.items():
                occurences = quotes[keyword]

                if not len(occurences):
                    # File does not have this keyword present
                    continue

                handle.write("### " + filename + "\n")
                handle.write("```latex\n")
                for i, occurence in enumerate(occurences, 1):
                    # Write keyword line
                    handle.write(str(occurence[0]) + " | " + occurence[1] + "\n")
                    # Write quote line, if enabled and present
                    if quote and len(occurence[2]):
                        handle.write(str(occurence[0] + 1) + " | " + occurence[2] + "\n")

                    # Do not write blank line before the closing tag
                    if i < len(occurences):
                        handle.write("\n")
                handle.write("```\n")
                handle.write("\n")

        if footer:
            handle.write("---\n\n")
            handle.write(footer + "\n")


def write_latex(
    keywords: list,
    todos: dict,
    outfile: str,
    *,
    description,
    footer,
    quote=True,
    scheme: str = "light"
):
    """Write contents

    keywords:    list of defined keywords
    todos:       dictionary generated by get_todos()
    outfile:     path to output file
    description: Line describing the file. Pass None to disable.
    footer:      Link to repository. Pass None to disable.
    quote:       Add line below the keyword line. Pass False to disable.
    scheme:      Color scheme. Defaults to "light".

    ----------

    For the format, see latex.py.
    """
    if footer is None:
        footer = (
            "Generated by \\href{https://gitlab.com/matyashorky/latex-todo-gen}{latex-todo-gen}."
        )

    with open(outfile, "w") as handle:
        template = latex.get(scheme)
        handle.write(template)

        handle.write("\\begin{document}\n")
        handle.write("\\begin{center}\n")
        handle.write("\\textbf{\\Huge TODO}\n")
        if description:
            handle.write("\n" + description + "\n")
        handle.write("\\end{center}\n")

        for keyword in keywords:
            handle.write("\\section*{" + keyword + "}\n")
            for filename, quotes in todos.items():
                occurences = quotes[keyword]

                if not len(occurences):
                    # File does not have this keyword present
                    continue

                handle.write("\\vspace{1em}\n")
                handle.write(filename + "\n")

                for occurence in occurences:
                    num, line, quote = occurence

                    # Begin listing
                    handle.write("\\begin{lstlisting}[firstnumber=" + str(num) + "]\n")
                    # Write keyword line
                    handle.write(line + "\n")
                    # Write quote line, if enabled and present
                    if quote and len(quote):
                        handle.write(quote + "\n")
                    # Close listing
                    handle.write("\\end{lstlisting}\n")

        if footer:
            handle.write("\n\\hrulefill\n\n")
            handle.write("\\begin{center}\n")
            handle.write("{\\small " + footer + "}\n")
            handle.write("\\end{center}\n")

        handle.write("\\end{document}\n")
