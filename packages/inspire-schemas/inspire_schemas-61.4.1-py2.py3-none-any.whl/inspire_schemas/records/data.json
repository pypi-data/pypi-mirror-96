{
    "$schema": "http://json-schema.org/schema#",
    "additionalProperties": false,
    "description": "Schema is not yet specified",
    "properties": {
        "$schema": {
            "format": "uri",
            "minLength": 1,
            "type": "string"
        },
        "_bucket": {
            "description": "Used by `invenio-records-files` to store information about the\nbucket attached to this record.\n\n.. note::\n\n    This field is maintained by `invenio-records-files` and should\n    not be edited manually.",
            "minLength": 1,
            "type": "string"
        },
        "_collections": {
            "description": ":MARC: ``980__a``",
            "items": {
                "enum": [
                    "Data"
                ],
                "minLength": 1,
                "type": "string"
            },
            "minItems": 1,
            "title": "Collections to which record belongs",
            "type": "array",
            "uniqueItems": true
        },
        "control_number": {
            "description": ":MARC: ``001``\n\nRead-only field. Also called ``record ID`` or ``recid``.",
            "title": "ID of current record",
            "type": "integer"
        },
        "deleted": {
            "description": ":MARC: ``980__a/c:deleted``",
            "title": "Whether this record has been deleted",
            "type": "boolean"
        },
        "deleted_records": {
            "description": ":MARC: ``981__a``\n\nList of records that were deleted because they were replaced by\nthis one. This typically happens when merging two records: one of\nthem gets enriched with the information of the other one, which is\nthen superfluous and gets deleted.\n\nFor the opposite concept, see :ref:`new_record`.",
            "items": {
                "additionalProperties": false,
                "properties": {
                    "$ref": {
                        "description": "data record",
                        "format": "uri",
                        "minLength": 1,
                        "pattern": ".*/api/data/\\d+$",
                        "type": "string"
                    }
                },
                "required": [
                    "$ref"
                ],
                "title": "Reference to data record",
                "type": "object"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
        },
        "dois": {
            "items": {
                "additionalProperties": false,
                "properties": {
                    "source": {
                        "description": "Source of the information in this field. As several records can be merged,\nthis information allows us to remember where every bit of metadata came\nfrom and make decisions based on it.\n\n:MARC: Often not present.",
                        "minLength": 1,
                        "type": "string"
                    },
                    "value": {
                        "description": ":MARC: ``0247_a``\n:example: ``10.1023/A:1026654312961``",
                        "minLength": 1,
                        "pattern": "^10\\.\\d+(\\.\\d+)?/\\S+$",
                        "title": "DOI",
                        "type": "string"
                    }
                },
                "required": [
                    "value"
                ],
                "type": "object"
            },
            "minItems": 1,
            "title": "List of DOIs",
            "type": "array",
            "uniqueItems": true
        },
        "legacy_version": {
            "description": ":MARC: ``005``\n\nUsed to indicate the version of the record on legacy.",
            "minLength": 1,
            "title": "Last record update",
            "type": "string"
        },
        "new_record": {
            "additionalProperties": false,
            "properties": {
                "$ref": {
                    "description": "data record",
                    "format": "uri",
                    "minLength": 1,
                    "pattern": ".*/api/data/\\d+$",
                    "type": "string"
                }
            },
            "required": [
                "$ref"
            ],
            "title": "Reference to data record",
            "type": "object"
        },
        "self": {
            "additionalProperties": false,
            "properties": {
                "$ref": {
                    "description": "data record",
                    "format": "uri",
                    "minLength": 1,
                    "pattern": ".*/api/data/\\d+$",
                    "type": "string"
                }
            },
            "required": [
                "$ref"
            ],
            "title": "Reference to data record",
            "type": "object"
        }
    },
    "title": "A data record",
    "type": "object"
}
