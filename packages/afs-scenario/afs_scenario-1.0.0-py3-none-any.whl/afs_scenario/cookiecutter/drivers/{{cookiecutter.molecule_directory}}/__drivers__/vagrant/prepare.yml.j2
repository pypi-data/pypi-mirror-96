---
- name: Wait for instances
  hosts: all
  gather_facts: no
  tasks:
    - name: Waiting for system to start
      wait_for_connection:
{#- ===================================================================================== #}
[% if prepare is defined %]
[% if prepare.import_playbook is defined %]

- name: Prepare instances
  import_playbook: [[ prepare.import_playbook ]]
[% endif %]
{#- ===================================================================================== #}

- name: Update kernel
  hosts: all
  tasks:
    - set_fact:
        afs_prep_update_kernel: "{% raw %}{{ lookup('env', 'AFS_PREP_UPDATE_KERNEL') | d('yes', true) | bool }}{% endraw %}"
      when: afs_prep_update_kernel is undefined

    - name: Update kernel
      when:
        - afs_prep_update_kernel
        - ansible_pkg_mgr in ('yum', 'dnf')
      become: yes
      block:
        - name: Update kernel with yum
          yum:
            state: latest
            name:
              - kernel
              - kernel-devel
          register: yum_update_results

        - name: Reboot
          reboot:
            reboot_timeout: 600
          when: yum_update_results.changed

    - name: Update kernel
      when:
        - afs_prep_update_kernel
        - ansible_pkg_mgr == 'apt'
      become: yes
      block:
        - name: Update kernel with apt
          apt:
            state: latest
            name: 'linux-image*'
            only_upgrade: yes
            update_cache: yes
          register: apt_update_results

        - name: Reboot
          reboot:
            reboot_timeout: 600
          when: apt_update_results.changed
{#- ===================================================================================== #}
[% if prepare.rewrite_etc_hosts is defined and prepare.rewrite_etc_hosts | d('no') | bool %]

- name: Configure hosts file
  hosts: all
  tasks:
    - name: Configure /etc/hosts
      become: yes
      copy:
        backup: yes
        dest: /etc/hosts
        content: |
          127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
          ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
        {%- raw %}
          {% for name in hostvars | sort %}
          {{ hostvars[name].ansible_default_ipv4.address }}    {{ hostvars[name].ansible_hostname }}
          {% endfor %}
        {%- endraw %}
[% endif %]

- name: Setup selinux mode
  hosts: all
  tasks:
    - set_fact:
        afs_prep_selinux_mode: "{% raw %}{{ lookup('env', 'AFS_PREP_SELINUX_MODE') | d('permissive', true) }}{% endraw %}"
      when: afs_prep_selinux_mode is undefined

    - name: Configure selinux mode
      become: yes
      selinux:
        policy: targeted
        state: "{% raw %}{{ afs_prep_selinux_mode }}{% endraw %}"
      when:
        - afs_prep_selinux_mode in ('permissive', 'enforcing', 'disabled')
        - ansible_selinux is defined
        - ansible_selinux.status is defined
        - ansible_selinux.status == 'enabled'
[% endif %]