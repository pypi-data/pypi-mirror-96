# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ncbi/datasets/v1alpha1/reports/prokaryote.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from ncbi.datasets.v1alpha1.reports import common_pb2 as ncbi_dot_datasets_dot_v1alpha1_dot_reports_dot_common__pb2
from ncbi.datasets.v1alpha1.reports import options_pb2 as ncbi_dot_datasets_dot_v1alpha1_dot_reports_dot_options__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='ncbi/datasets/v1alpha1/reports/prokaryote.proto',
  package='ncbi.datasets.v1alpha1.reports',
  syntax='proto3',
  serialized_options=b'Z\036ncbi/datasets/v1alpha1/reports\370\001\001\302\363\030\353\010\n\026Prokaryote Gene Report\022\016ProkaryoteGene\0323<p>The prokaryote gene package contains two reports\032\211\002in <a href=\"https://jsonlines.readthedocs.io/\">JSON lines</a> format. The first contains one entry per requested prokaryote gene at: <em>ncbi_dataset/data/data_report.jsonl</em>, and each record corresopnds to a <em>ProkaryoteGene</em> object, documented below.<br>\032\266\002The second contains one entry per pair of prokaryote gene and its genomic mapping at: <em>ncbi_dataset/data/annotation_report.jsonl</em> and each record corresponds to a <em>ProkaryoteGeneLocation</em> object, documented below.</p><p>The second column in each table documents the mnemonic string used by the <a\032Phref=\"https://api.ncbi.nlm.nih.gov/datasets/docs/cli/dataformat/\">dataformat</a>\032ccommand-line tool to transform genome assembly data reports from JSON lines to tabular formats.</p>\032k<p>Check the <a href=\"https://api.ncbi.nlm.nih.gov/datasets/docs/data-report-schemas-overview/\">Data Report\032DOverview</a> documentation for examples of using this table with the\032]<a href=\"https://api.ncbi.nlm.nih.gov/datasets/docs/cli/dataformat/\">dataformat</a> tool.</p>',
  serialized_pb=b'\n/ncbi/datasets/v1alpha1/reports/prokaryote.proto\x12\x1encbi.datasets.v1alpha1.reports\x1a+ncbi/datasets/v1alpha1/reports/common.proto\x1a,ncbi/datasets/v1alpha1/reports/options.proto\"\x87\t\n\x0eProkaryoteGene\x12H\n\taccession\x18\x01 \x01(\tB*\xc2\xf3\x18&\n\taccession\x12\tAccession2\x0eWP_000443665.1R\taccession\x12\x45\n\x0bgene_symbol\x18\x02 \x01(\tB$\xc2\xf3\x18 \n\x0bgene_symbol\x12\x0bGene Symbol2\x04ligAR\ngeneSymbol\x12\x62\n\x0cprotein_name\x18\x03 \x01(\tB?\xc2\xf3\x18;\n\x0cprotein_name\x12\x0cProtein Name2\x1dNAD-dependent DNA ligase LigAR\x0bproteinName\x12P\n\x0eprotein_length\x18\x04 \x01(\rB)\xc2\xf3\x18%\n\x0eprotein_length\x12\x0eProtein Length2\x03\x36\x37\x31R\rproteinLength\x12O\n\x0etaxonomy_scope\x18\x05 \x01(\x0b\x32(.ncbi.datasets.v1alpha1.reports.OrganismR\rtaxonomyScope\x12o\n\x19number_of_genome_mappings\x18\x06 \x01(\rB4\xc2\xf3\x18\x30\n\rmapping_count\x12\x19Number of Genome Mappings2\x04\x37\x36\x34\x32R\x16numberOfGenomeMappings\x12\xa3\x01\n\x15protein_name_evidence\x18\x07 \x01(\x0b\x32\x42.ncbi.datasets.v1alpha1.reports.ProkaryoteGene.ProteinNameEvidenceB+\xc2\xf3\x18\'\n\x0ename-evidence-\x12\x15Protein Name EvidenceR\x13proteinNameEvidence\x12\xa0\x01\n\x0b\x64\x65scription\x18\x08 \x01(\tB~\xc2\xf3\x18z\n\x0b\x64\x65scription\x12\x0b\x44\x65scription2^Catalyzes the formation of a phosphodiester at the site of a single-strand break in duplex DNAR\x0b\x64\x65scription\x12@\n\tec_number\x18\t \x03(\tB#\xc2\xf3\x18\x1f\n\tec_number\x12\tEC Number2\x07\x36.5.1.2R\x08\x65\x63Number\x1a\xe0\x01\n\x13ProteinNameEvidence\x12\x44\n\taccession\x18\x01 \x01(\tB&\xc2\xf3\x18\"\n\taccession\x12\tAccession2\nNF005932.1R\taccession\x12\x39\n\x08\x63\x61tegory\x18\x02 \x01(\tB\x1d\xc2\xf3\x18\x19\n\x08\x63\x61tegory\x12\x08\x43\x61tegory2\x03HMMR\x08\x63\x61tegory\x12H\n\x06source\x18\x03 \x01(\tB0\xc2\xf3\x18,\n\x06source\x12\x06Source2\x1aNCBI Protein Cluster (PRK)R\x06source\"\x80\x02\n\x14SeqRangeWithAssembly\x12l\n\x12\x61ssembly_accession\x18\x01 \x01(\tB=\xc2\xf3\x18\x39\n\x12\x61ssembly_accession\x12\x12\x41ssembly Accession2\x0fGCF_000010385.1R\x11\x61ssemblyAccession\x12z\n\x0esequence_range\x18\x02 \x01(\x0b\x32+.ncbi.datasets.v1alpha1.reports.SeqRangeSetB&\xc2\xf3\x18\"\n\x0fsequence_range-\x12\x0fSequence Range R\rsequenceRange\"\xb8\x04\n\x16ProkaryoteGeneLocation\x12g\n\x11protein_accession\x18\x01 \x01(\tB:\xc2\xf3\x18\x36\n\x11protein_accession\x12\x11Protein Accession2\x0eWP_000443665.1R\x10proteinAccession\x12\xa5\x01\n\x17refseq_genomic_location\x18\x02 \x01(\x0b\x32\x34.ncbi.datasets.v1alpha1.reports.SeqRangeWithAssemblyB7\xc2\xf3\x18\x33\n\x17reseq_genomic_location-\x12\x18RefSeq Genomic Location R\x15refseqGenomicLocation\x12\xaa\x01\n\x18genbank_genomic_location\x18\x03 \x01(\x0b\x32\x34.ncbi.datasets.v1alpha1.reports.SeqRangeWithAssemblyB:\xc2\xf3\x18\x36\n\x19genbank_genomic_location-\x12\x19GenBank Genomic Location R\x16genbankGenomicLocation\x12`\n\x08organism\x18\x04 \x01(\x0b\x32(.ncbi.datasets.v1alpha1.reports.OrganismB\x1a\xc2\xf3\x18\x16\n\torganism-\x12\tOrganism R\x08organismB\x93\tZ\x1encbi/datasets/v1alpha1/reports\xf8\x01\x01\xc2\xf3\x18\xeb\x08\n\x16Prokaryote Gene Report\x12\x0eProkaryoteGene\x1a\x33<p>The prokaryote gene package contains two reports\x1a\x89\x02in <a href=\"https://jsonlines.readthedocs.io/\">JSON lines</a> format. The first contains one entry per requested prokaryote gene at: <em>ncbi_dataset/data/data_report.jsonl</em>, and each record corresopnds to a <em>ProkaryoteGene</em> object, documented below.<br>\x1a\xb6\x02The second contains one entry per pair of prokaryote gene and its genomic mapping at: <em>ncbi_dataset/data/annotation_report.jsonl</em> and each record corresponds to a <em>ProkaryoteGeneLocation</em> object, documented below.</p><p>The second column in each table documents the mnemonic string used by the <a\x1aPhref=\"https://api.ncbi.nlm.nih.gov/datasets/docs/cli/dataformat/\">dataformat</a>\x1a\x63\x63ommand-line tool to transform genome assembly data reports from JSON lines to tabular formats.</p>\x1ak<p>Check the <a href=\"https://api.ncbi.nlm.nih.gov/datasets/docs/data-report-schemas-overview/\">Data Report\x1a\x44Overview</a> documentation for examples of using this table with the\x1a]<a href=\"https://api.ncbi.nlm.nih.gov/datasets/docs/cli/dataformat/\">dataformat</a> tool.</p>b\x06proto3'
  ,
  dependencies=[ncbi_dot_datasets_dot_v1alpha1_dot_reports_dot_common__pb2.DESCRIPTOR,ncbi_dot_datasets_dot_v1alpha1_dot_reports_dot_options__pb2.DESCRIPTOR,])




_PROKARYOTEGENE_PROTEINNAMEEVIDENCE = _descriptor.Descriptor(
  name='ProteinNameEvidence',
  full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGene.ProteinNameEvidence',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='accession', full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGene.ProteinNameEvidence.accession', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\030\"\n\taccession\022\tAccession2\nNF005932.1', json_name='accession', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='category', full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGene.ProteinNameEvidence.category', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\030\031\n\010category\022\010Category2\003HMM', json_name='category', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source', full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGene.ProteinNameEvidence.source', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\030,\n\006source\022\006Source2\032NCBI Protein Cluster (PRK)', json_name='source', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1110,
  serialized_end=1334,
)

_PROKARYOTEGENE = _descriptor.Descriptor(
  name='ProkaryoteGene',
  full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGene',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='accession', full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGene.accession', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\030&\n\taccession\022\tAccession2\016WP_000443665.1', json_name='accession', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='gene_symbol', full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGene.gene_symbol', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\030 \n\013gene_symbol\022\013Gene Symbol2\004ligA', json_name='geneSymbol', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='protein_name', full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGene.protein_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\030;\n\014protein_name\022\014Protein Name2\035NAD-dependent DNA ligase LigA', json_name='proteinName', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='protein_length', full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGene.protein_length', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\030%\n\016protein_length\022\016Protein Length2\003671', json_name='proteinLength', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='taxonomy_scope', full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGene.taxonomy_scope', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='taxonomyScope', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='number_of_genome_mappings', full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGene.number_of_genome_mappings', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\0300\n\rmapping_count\022\031Number of Genome Mappings2\0047642', json_name='numberOfGenomeMappings', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='protein_name_evidence', full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGene.protein_name_evidence', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\030\'\n\016name-evidence-\022\025Protein Name Evidence', json_name='proteinNameEvidence', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='description', full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGene.description', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\030z\n\013description\022\013Description2^Catalyzes the formation of a phosphodiester at the site of a single-strand break in duplex DNA', json_name='description', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ec_number', full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGene.ec_number', index=8,
      number=9, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\030\037\n\tec_number\022\tEC Number2\0076.5.1.2', json_name='ecNumber', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_PROKARYOTEGENE_PROTEINNAMEEVIDENCE, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=175,
  serialized_end=1334,
)


_SEQRANGEWITHASSEMBLY = _descriptor.Descriptor(
  name='SeqRangeWithAssembly',
  full_name='ncbi.datasets.v1alpha1.reports.SeqRangeWithAssembly',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='assembly_accession', full_name='ncbi.datasets.v1alpha1.reports.SeqRangeWithAssembly.assembly_accession', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\0309\n\022assembly_accession\022\022Assembly Accession2\017GCF_000010385.1', json_name='assemblyAccession', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sequence_range', full_name='ncbi.datasets.v1alpha1.reports.SeqRangeWithAssembly.sequence_range', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\030\"\n\017sequence_range-\022\017Sequence Range ', json_name='sequenceRange', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1337,
  serialized_end=1593,
)


_PROKARYOTEGENELOCATION = _descriptor.Descriptor(
  name='ProkaryoteGeneLocation',
  full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGeneLocation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='protein_accession', full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGeneLocation.protein_accession', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\0306\n\021protein_accession\022\021Protein Accession2\016WP_000443665.1', json_name='proteinAccession', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='refseq_genomic_location', full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGeneLocation.refseq_genomic_location', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\0303\n\027reseq_genomic_location-\022\030RefSeq Genomic Location ', json_name='refseqGenomicLocation', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='genbank_genomic_location', full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGeneLocation.genbank_genomic_location', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\0306\n\031genbank_genomic_location-\022\031GenBank Genomic Location ', json_name='genbankGenomicLocation', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='organism', full_name='ncbi.datasets.v1alpha1.reports.ProkaryoteGeneLocation.organism', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=b'\302\363\030\026\n\torganism-\022\tOrganism ', json_name='organism', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1596,
  serialized_end=2164,
)

_PROKARYOTEGENE_PROTEINNAMEEVIDENCE.containing_type = _PROKARYOTEGENE
_PROKARYOTEGENE.fields_by_name['taxonomy_scope'].message_type = ncbi_dot_datasets_dot_v1alpha1_dot_reports_dot_common__pb2._ORGANISM
_PROKARYOTEGENE.fields_by_name['protein_name_evidence'].message_type = _PROKARYOTEGENE_PROTEINNAMEEVIDENCE
_SEQRANGEWITHASSEMBLY.fields_by_name['sequence_range'].message_type = ncbi_dot_datasets_dot_v1alpha1_dot_reports_dot_common__pb2._SEQRANGESET
_PROKARYOTEGENELOCATION.fields_by_name['refseq_genomic_location'].message_type = _SEQRANGEWITHASSEMBLY
_PROKARYOTEGENELOCATION.fields_by_name['genbank_genomic_location'].message_type = _SEQRANGEWITHASSEMBLY
_PROKARYOTEGENELOCATION.fields_by_name['organism'].message_type = ncbi_dot_datasets_dot_v1alpha1_dot_reports_dot_common__pb2._ORGANISM
DESCRIPTOR.message_types_by_name['ProkaryoteGene'] = _PROKARYOTEGENE
DESCRIPTOR.message_types_by_name['SeqRangeWithAssembly'] = _SEQRANGEWITHASSEMBLY
DESCRIPTOR.message_types_by_name['ProkaryoteGeneLocation'] = _PROKARYOTEGENELOCATION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ProkaryoteGene = _reflection.GeneratedProtocolMessageType('ProkaryoteGene', (_message.Message,), {

  'ProteinNameEvidence' : _reflection.GeneratedProtocolMessageType('ProteinNameEvidence', (_message.Message,), {
    'DESCRIPTOR' : _PROKARYOTEGENE_PROTEINNAMEEVIDENCE,
    '__module__' : 'ncbi.datasets.v1alpha1.reports.prokaryote_pb2'
    # @@protoc_insertion_point(class_scope:ncbi.datasets.v1alpha1.reports.ProkaryoteGene.ProteinNameEvidence)
    })
  ,
  'DESCRIPTOR' : _PROKARYOTEGENE,
  '__module__' : 'ncbi.datasets.v1alpha1.reports.prokaryote_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1alpha1.reports.ProkaryoteGene)
  })
_sym_db.RegisterMessage(ProkaryoteGene)
_sym_db.RegisterMessage(ProkaryoteGene.ProteinNameEvidence)

SeqRangeWithAssembly = _reflection.GeneratedProtocolMessageType('SeqRangeWithAssembly', (_message.Message,), {
  'DESCRIPTOR' : _SEQRANGEWITHASSEMBLY,
  '__module__' : 'ncbi.datasets.v1alpha1.reports.prokaryote_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1alpha1.reports.SeqRangeWithAssembly)
  })
_sym_db.RegisterMessage(SeqRangeWithAssembly)

ProkaryoteGeneLocation = _reflection.GeneratedProtocolMessageType('ProkaryoteGeneLocation', (_message.Message,), {
  'DESCRIPTOR' : _PROKARYOTEGENELOCATION,
  '__module__' : 'ncbi.datasets.v1alpha1.reports.prokaryote_pb2'
  # @@protoc_insertion_point(class_scope:ncbi.datasets.v1alpha1.reports.ProkaryoteGeneLocation)
  })
_sym_db.RegisterMessage(ProkaryoteGeneLocation)


DESCRIPTOR._options = None
_PROKARYOTEGENE_PROTEINNAMEEVIDENCE.fields_by_name['accession']._options = None
_PROKARYOTEGENE_PROTEINNAMEEVIDENCE.fields_by_name['category']._options = None
_PROKARYOTEGENE_PROTEINNAMEEVIDENCE.fields_by_name['source']._options = None
_PROKARYOTEGENE.fields_by_name['accession']._options = None
_PROKARYOTEGENE.fields_by_name['gene_symbol']._options = None
_PROKARYOTEGENE.fields_by_name['protein_name']._options = None
_PROKARYOTEGENE.fields_by_name['protein_length']._options = None
_PROKARYOTEGENE.fields_by_name['number_of_genome_mappings']._options = None
_PROKARYOTEGENE.fields_by_name['protein_name_evidence']._options = None
_PROKARYOTEGENE.fields_by_name['description']._options = None
_PROKARYOTEGENE.fields_by_name['ec_number']._options = None
_SEQRANGEWITHASSEMBLY.fields_by_name['assembly_accession']._options = None
_SEQRANGEWITHASSEMBLY.fields_by_name['sequence_range']._options = None
_PROKARYOTEGENELOCATION.fields_by_name['protein_accession']._options = None
_PROKARYOTEGENELOCATION.fields_by_name['refseq_genomic_location']._options = None
_PROKARYOTEGENELOCATION.fields_by_name['genbank_genomic_location']._options = None
_PROKARYOTEGENELOCATION.fields_by_name['organism']._options = None
# @@protoc_insertion_point(module_scope)
