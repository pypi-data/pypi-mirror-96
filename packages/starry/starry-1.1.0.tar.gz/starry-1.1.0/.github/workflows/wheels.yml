name: wheels
on:
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.7"

      - uses: ilammy/msvc-dev-cmd@v1

      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel==1.10.0

      - name: Build wheels on Windows
        if: runner.os == 'Windows'
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BEFORE_BUILD: pip install pybind11
          CIBW_BUILD: "cp3?-win_amd64"
          DISTUTILS_USE_SDK: 1
          MSSdk: 1

      - name: Build wheels on Mac and Linux
        if: runner.os != 'Windows'
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BEFORE_BUILD: pip install pybind11
          CIBW_BUILD: "cp3?-*"
          CIBW_SKIP: "*-manylinux_i686"
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: "3.7"

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
