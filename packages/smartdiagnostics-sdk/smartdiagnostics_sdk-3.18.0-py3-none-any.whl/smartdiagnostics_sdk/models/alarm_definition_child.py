# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AlarmDefinitionChild(Model):
    """AlarmDefinitionChild.

    :param low_alarm_value:
    :type low_alarm_value: float
    :param low_warning_value:
    :type low_warning_value: float
    :param high_alarm_value:
    :type high_alarm_value: float
    :param high_warning_value:
    :type high_warning_value: float
    :param off_threshold_value:
    :type off_threshold_value: float
    :param classification:
    :type classification: str
    :param notification_criteria_percentage:
    :type notification_criteria_percentage: float
    :param notification_criteria_points:
    :type notification_criteria_points: int
    """

    _attribute_map = {
        'low_alarm_value': {'key': 'LowAlarmValue', 'type': 'float'},
        'low_warning_value': {'key': 'LowWarningValue', 'type': 'float'},
        'high_alarm_value': {'key': 'HighAlarmValue', 'type': 'float'},
        'high_warning_value': {'key': 'HighWarningValue', 'type': 'float'},
        'off_threshold_value': {'key': 'OffThresholdValue', 'type': 'float'},
        'classification': {'key': 'Classification', 'type': 'str'},
        'notification_criteria_percentage': {'key': 'NotificationCriteriaPercentage', 'type': 'float'},
        'notification_criteria_points': {'key': 'NotificationCriteriaPoints', 'type': 'int'},
    }

    def __init__(self, **kwargs):
        super(AlarmDefinitionChild, self).__init__(**kwargs)
        self.low_alarm_value = kwargs.get('low_alarm_value', None)
        self.low_warning_value = kwargs.get('low_warning_value', None)
        self.high_alarm_value = kwargs.get('high_alarm_value', None)
        self.high_warning_value = kwargs.get('high_warning_value', None)
        self.off_threshold_value = kwargs.get('off_threshold_value', None)
        self.classification = kwargs.get('classification', None)
        self.notification_criteria_percentage = kwargs.get('notification_criteria_percentage', None)
        self.notification_criteria_points = kwargs.get('notification_criteria_points', None)
