# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class DescendantChild(Model):
    """DescendantChild.

    :param child_id:
    :type child_id: str
    :param child_name:
    :type child_name: str
    :param child_abbreviation:
    :type child_abbreviation: str
    :param child_type: Possible values include: 'Asset', 'MonitoringPoint',
     'IndicatorGroup', 'Group', 'AnalyticModel'
    :type child_type: str or ~smartdiagnostics_sdk.models.enum
    :param child_sort_order:
    :type child_sort_order: int
    :param child_has_children:
    :type child_has_children: bool
    :param child_alarm_severity_level:
    :type child_alarm_severity_level: int
    :param child_is_paused:
    :type child_is_paused: bool
    :param child_is_snoozed:
    :type child_is_snoozed: bool
    """

    _attribute_map = {
        'child_id': {'key': 'ChildId', 'type': 'str'},
        'child_name': {'key': 'ChildName', 'type': 'str'},
        'child_abbreviation': {'key': 'ChildAbbreviation', 'type': 'str'},
        'child_type': {'key': 'ChildType', 'type': 'str'},
        'child_sort_order': {'key': 'ChildSortOrder', 'type': 'int'},
        'child_has_children': {'key': 'ChildHasChildren', 'type': 'bool'},
        'child_alarm_severity_level': {'key': 'ChildAlarmSeverityLevel', 'type': 'int'},
        'child_is_paused': {'key': 'ChildIsPaused', 'type': 'bool'},
        'child_is_snoozed': {'key': 'ChildIsSnoozed', 'type': 'bool'},
    }

    def __init__(self, *, child_id: str=None, child_name: str=None, child_abbreviation: str=None, child_type=None, child_sort_order: int=None, child_has_children: bool=None, child_alarm_severity_level: int=None, child_is_paused: bool=None, child_is_snoozed: bool=None, **kwargs) -> None:
        super(DescendantChild, self).__init__(**kwargs)
        self.child_id = child_id
        self.child_name = child_name
        self.child_abbreviation = child_abbreviation
        self.child_type = child_type
        self.child_sort_order = child_sort_order
        self.child_has_children = child_has_children
        self.child_alarm_severity_level = child_alarm_severity_level
        self.child_is_paused = child_is_paused
        self.child_is_snoozed = child_is_snoozed
