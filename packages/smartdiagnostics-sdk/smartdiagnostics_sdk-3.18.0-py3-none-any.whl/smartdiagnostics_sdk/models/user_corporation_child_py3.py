# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class UserCorporationChild(Model):
    """UserCorporationChild.

    All required parameters must be populated in order to send to Azure.

    :param corporation_id: Required.
    :type corporation_id: str
    :param corporation_name: Required.
    :type corporation_name: str
    :param corporation_abbreviation:
    :type corporation_abbreviation: str
    :param corporation_user_role: Possible values include: 'Invalid',
     'SaasAdmin', 'AccountAdmin', 'ApplicationUser', 'Technician', 'User',
     'SystemProcess', 'Sentry', 'Sales', 'CorporationAdmin', 'CorporationUser',
     'CorporationNone'
    :type corporation_user_role: str or ~smartdiagnostics_sdk.models.enum
    """

    _validation = {
        'corporation_id': {'required': True},
        'corporation_name': {'required': True},
    }

    _attribute_map = {
        'corporation_id': {'key': 'CorporationId', 'type': 'str'},
        'corporation_name': {'key': 'CorporationName', 'type': 'str'},
        'corporation_abbreviation': {'key': 'CorporationAbbreviation', 'type': 'str'},
        'corporation_user_role': {'key': 'CorporationUserRole', 'type': 'str'},
    }

    def __init__(self, *, corporation_id: str, corporation_name: str, corporation_abbreviation: str=None, corporation_user_role=None, **kwargs) -> None:
        super(UserCorporationChild, self).__init__(**kwargs)
        self.corporation_id = corporation_id
        self.corporation_name = corporation_name
        self.corporation_abbreviation = corporation_abbreviation
        self.corporation_user_role = corporation_user_role
