# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class SystemOverviewResponse(Model):
    """SystemOverviewResponse.

    All required parameters must be populated in order to send to Azure.

    :param is_snoozed: Required.
    :type is_snoozed: bool
    :param description:
    :type description: str
    :param is_collector_dependent_system: Required.
    :type is_collector_dependent_system: bool
    :param is_favorited: Required.
    :type is_favorited: bool
    :param is_visible: Required.
    :type is_visible: bool
    :param asset_count: Required.
    :type asset_count: int
    :param asset_status_count:
    :type asset_status_count:
     ~smartdiagnostics_sdk.models.AssetsStatusCountChild
    :param id: Required.
    :type id: str
    :param name: Required.
    :type name: str
    :param abbreviation:
    :type abbreviation: str
    :param active: Required.
    :type active: bool
    :param is_paused: Required.
    :type is_paused: bool
    :param created: Required.
    :type created: datetime
    :param corporation: Required.
    :type corporation: ~smartdiagnostics_sdk.models.CorporationChild
    :param location: Required.
    :type location: ~smartdiagnostics_sdk.models.LocationChild
    """

    _validation = {
        'is_snoozed': {'required': True},
        'is_collector_dependent_system': {'required': True},
        'is_favorited': {'required': True},
        'is_visible': {'required': True},
        'asset_count': {'required': True},
        'id': {'required': True},
        'name': {'required': True},
        'active': {'required': True},
        'is_paused': {'required': True},
        'created': {'required': True},
        'corporation': {'required': True},
        'location': {'required': True},
    }

    _attribute_map = {
        'is_snoozed': {'key': 'IsSnoozed', 'type': 'bool'},
        'description': {'key': 'Description', 'type': 'str'},
        'is_collector_dependent_system': {'key': 'IsCollectorDependentSystem', 'type': 'bool'},
        'is_favorited': {'key': 'IsFavorited', 'type': 'bool'},
        'is_visible': {'key': 'IsVisible', 'type': 'bool'},
        'asset_count': {'key': 'AssetCount', 'type': 'int'},
        'asset_status_count': {'key': 'AssetStatusCount', 'type': 'AssetsStatusCountChild'},
        'id': {'key': 'Id', 'type': 'str'},
        'name': {'key': 'Name', 'type': 'str'},
        'abbreviation': {'key': 'Abbreviation', 'type': 'str'},
        'active': {'key': 'Active', 'type': 'bool'},
        'is_paused': {'key': 'IsPaused', 'type': 'bool'},
        'created': {'key': 'Created', 'type': 'iso-8601'},
        'corporation': {'key': 'Corporation', 'type': 'CorporationChild'},
        'location': {'key': 'Location', 'type': 'LocationChild'},
    }

    def __init__(self, *, is_snoozed: bool, is_collector_dependent_system: bool, is_favorited: bool, is_visible: bool, asset_count: int, id: str, name: str, active: bool, is_paused: bool, created, corporation, location, description: str=None, asset_status_count=None, abbreviation: str=None, **kwargs) -> None:
        super(SystemOverviewResponse, self).__init__(**kwargs)
        self.is_snoozed = is_snoozed
        self.description = description
        self.is_collector_dependent_system = is_collector_dependent_system
        self.is_favorited = is_favorited
        self.is_visible = is_visible
        self.asset_count = asset_count
        self.asset_status_count = asset_status_count
        self.id = id
        self.name = name
        self.abbreviation = abbreviation
        self.active = active
        self.is_paused = is_paused
        self.created = created
        self.corporation = corporation
        self.location = location
