# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class RepeaterModelV3(Model):
    """RepeaterModelV3.

    All required parameters must be populated in order to send to Azure.

    :param id:
    :type id: long
    :param serial_number: Required.
    :type serial_number: str
    :param radio_mac_address:
    :type radio_mac_address: str
    :param location_id:
    :type location_id: str
    :param location_name:
    :type location_name: str
    :param corporation_id:
    :type corporation_id: str
    :param corporation_name:
    :type corporation_name: str
    :param last_status_update:
    :type last_status_update: datetime
    :param active:
    :type active: bool
    :param type: Possible values include: 'Unknown', 'BaseStation', 'Repeater'
    :type type: str or ~smartdiagnostics_sdk.models.enum
    """

    _validation = {
        'serial_number': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'Id', 'type': 'long'},
        'serial_number': {'key': 'SerialNumber', 'type': 'str'},
        'radio_mac_address': {'key': 'RadioMacAddress', 'type': 'str'},
        'location_id': {'key': 'LocationId', 'type': 'str'},
        'location_name': {'key': 'LocationName', 'type': 'str'},
        'corporation_id': {'key': 'CorporationId', 'type': 'str'},
        'corporation_name': {'key': 'CorporationName', 'type': 'str'},
        'last_status_update': {'key': 'LastStatusUpdate', 'type': 'iso-8601'},
        'active': {'key': 'Active', 'type': 'bool'},
        'type': {'key': 'Type', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(RepeaterModelV3, self).__init__(**kwargs)
        self.id = kwargs.get('id', None)
        self.serial_number = kwargs.get('serial_number', None)
        self.radio_mac_address = kwargs.get('radio_mac_address', None)
        self.location_id = kwargs.get('location_id', None)
        self.location_name = kwargs.get('location_name', None)
        self.corporation_id = kwargs.get('corporation_id', None)
        self.corporation_name = kwargs.get('corporation_name', None)
        self.last_status_update = kwargs.get('last_status_update', None)
        self.active = kwargs.get('active', None)
        self.type = kwargs.get('type', None)
