# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class UserLocationChild(Model):
    """UserLocationChild.

    All required parameters must be populated in order to send to Azure.

    :param location_id: Required.
    :type location_id: str
    :param location_name: Required.
    :type location_name: str
    :param location_abbreviation:
    :type location_abbreviation: str
    :param location_user_role: Possible values include: 'Invalid',
     'SaasAdmin', 'AccountAdmin', 'ApplicationUser', 'Technician', 'User',
     'SystemProcess', 'Sentry', 'Sales', 'CorporationAdmin', 'CorporationUser',
     'CorporationNone'
    :type location_user_role: str or ~smartdiagnostics_sdk.models.enum
    """

    _validation = {
        'location_id': {'required': True},
        'location_name': {'required': True},
    }

    _attribute_map = {
        'location_id': {'key': 'LocationId', 'type': 'str'},
        'location_name': {'key': 'LocationName', 'type': 'str'},
        'location_abbreviation': {'key': 'LocationAbbreviation', 'type': 'str'},
        'location_user_role': {'key': 'LocationUserRole', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(UserLocationChild, self).__init__(**kwargs)
        self.location_id = kwargs.get('location_id', None)
        self.location_name = kwargs.get('location_name', None)
        self.location_abbreviation = kwargs.get('location_abbreviation', None)
        self.location_user_role = kwargs.get('location_user_role', None)
