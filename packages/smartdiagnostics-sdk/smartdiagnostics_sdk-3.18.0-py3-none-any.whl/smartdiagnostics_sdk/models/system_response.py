# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class SystemResponse(Model):
    """SystemResponse.

    All required parameters must be populated in order to send to Azure.

    :param is_collector_dependent_system: Required.
    :type is_collector_dependent_system: bool
    :param children:
    :type children: list[~smartdiagnostics_sdk.models.DescendantChild]
    :param description:
    :type description: str
    :param is_visible: Required.
    :type is_visible: bool
    :param cds_base_stations:
    :type cds_base_stations:
     list[~smartdiagnostics_sdk.models.BaseStationChild]
    :param cds_master_systems:
    :type cds_master_systems: list[~smartdiagnostics_sdk.models.SystemChild]
    :param id: Required.
    :type id: str
    :param name: Required.
    :type name: str
    :param abbreviation:
    :type abbreviation: str
    :param active: Required.
    :type active: bool
    :param is_paused: Required.
    :type is_paused: bool
    :param is_snoozed: Required.
    :type is_snoozed: bool
    :param created: Required.
    :type created: datetime
    :param corporation: Required.
    :type corporation: ~smartdiagnostics_sdk.models.CorporationChild
    :param location: Required.
    :type location: ~smartdiagnostics_sdk.models.LocationChild
    """

    _validation = {
        'is_collector_dependent_system': {'required': True},
        'is_visible': {'required': True},
        'id': {'required': True},
        'name': {'required': True},
        'active': {'required': True},
        'is_paused': {'required': True},
        'is_snoozed': {'required': True},
        'created': {'required': True},
        'corporation': {'required': True},
        'location': {'required': True},
    }

    _attribute_map = {
        'is_collector_dependent_system': {'key': 'IsCollectorDependentSystem', 'type': 'bool'},
        'children': {'key': 'Children', 'type': '[DescendantChild]'},
        'description': {'key': 'Description', 'type': 'str'},
        'is_visible': {'key': 'IsVisible', 'type': 'bool'},
        'cds_base_stations': {'key': 'CdsBaseStations', 'type': '[BaseStationChild]'},
        'cds_master_systems': {'key': 'CdsMasterSystems', 'type': '[SystemChild]'},
        'id': {'key': 'Id', 'type': 'str'},
        'name': {'key': 'Name', 'type': 'str'},
        'abbreviation': {'key': 'Abbreviation', 'type': 'str'},
        'active': {'key': 'Active', 'type': 'bool'},
        'is_paused': {'key': 'IsPaused', 'type': 'bool'},
        'is_snoozed': {'key': 'IsSnoozed', 'type': 'bool'},
        'created': {'key': 'Created', 'type': 'iso-8601'},
        'corporation': {'key': 'Corporation', 'type': 'CorporationChild'},
        'location': {'key': 'Location', 'type': 'LocationChild'},
    }

    def __init__(self, **kwargs):
        super(SystemResponse, self).__init__(**kwargs)
        self.is_collector_dependent_system = kwargs.get('is_collector_dependent_system', None)
        self.children = kwargs.get('children', None)
        self.description = kwargs.get('description', None)
        self.is_visible = kwargs.get('is_visible', None)
        self.cds_base_stations = kwargs.get('cds_base_stations', None)
        self.cds_master_systems = kwargs.get('cds_master_systems', None)
        self.id = kwargs.get('id', None)
        self.name = kwargs.get('name', None)
        self.abbreviation = kwargs.get('abbreviation', None)
        self.active = kwargs.get('active', None)
        self.is_paused = kwargs.get('is_paused', None)
        self.is_snoozed = kwargs.get('is_snoozed', None)
        self.created = kwargs.get('created', None)
        self.corporation = kwargs.get('corporation', None)
        self.location = kwargs.get('location', None)
