# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ProfileChild(Model):
    """ProfileChild.

    :param acceleration_units:
    :type acceleration_units: str
    :param pressure_units:
    :type pressure_units: str
    :param temperature_units:
    :type temperature_units: str
    :param velocity_units:
    :type velocity_units: str
    :param last_updated_time:
    :type last_updated_time: datetime
    :param date_format:
    :type date_format: str
    :param time_format:
    :type time_format: str
    :param time_zones:
    :type time_zones: str
    """

    _attribute_map = {
        'acceleration_units': {'key': 'AccelerationUnits', 'type': 'str'},
        'pressure_units': {'key': 'PressureUnits', 'type': 'str'},
        'temperature_units': {'key': 'TemperatureUnits', 'type': 'str'},
        'velocity_units': {'key': 'VelocityUnits', 'type': 'str'},
        'last_updated_time': {'key': 'LastUpdatedTime', 'type': 'iso-8601'},
        'date_format': {'key': 'DateFormat', 'type': 'str'},
        'time_format': {'key': 'TimeFormat', 'type': 'str'},
        'time_zones': {'key': 'TimeZones', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(ProfileChild, self).__init__(**kwargs)
        self.acceleration_units = kwargs.get('acceleration_units', None)
        self.pressure_units = kwargs.get('pressure_units', None)
        self.temperature_units = kwargs.get('temperature_units', None)
        self.velocity_units = kwargs.get('velocity_units', None)
        self.last_updated_time = kwargs.get('last_updated_time', None)
        self.date_format = kwargs.get('date_format', None)
        self.time_format = kwargs.get('time_format', None)
        self.time_zones = kwargs.get('time_zones', None)
