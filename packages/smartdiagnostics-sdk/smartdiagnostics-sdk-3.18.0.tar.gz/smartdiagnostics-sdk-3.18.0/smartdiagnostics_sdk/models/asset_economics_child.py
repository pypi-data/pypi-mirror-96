# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class AssetEconomicsChild(Model):
    """AssetEconomicsChild.

    :param asset_cost:
    :type asset_cost: float
    :param date_installed:
    :type date_installed: datetime
    :param annual_run_time:
    :type annual_run_time: float
    :param lost_production_cost:
    :type lost_production_cost: float
    :param overhaul_cost:
    :type overhaul_cost: float
    :param power_consumption:
    :type power_consumption: float
    :param life_expectancy:
    :type life_expectancy: float
    :param unscheduled_downtime:
    :type unscheduled_downtime: float
    """

    _attribute_map = {
        'asset_cost': {'key': 'AssetCost', 'type': 'float'},
        'date_installed': {'key': 'DateInstalled', 'type': 'iso-8601'},
        'annual_run_time': {'key': 'AnnualRunTime', 'type': 'float'},
        'lost_production_cost': {'key': 'LostProductionCost', 'type': 'float'},
        'overhaul_cost': {'key': 'OverhaulCost', 'type': 'float'},
        'power_consumption': {'key': 'PowerConsumption', 'type': 'float'},
        'life_expectancy': {'key': 'LifeExpectancy', 'type': 'float'},
        'unscheduled_downtime': {'key': 'UnscheduledDowntime', 'type': 'float'},
    }

    def __init__(self, **kwargs):
        super(AssetEconomicsChild, self).__init__(**kwargs)
        self.asset_cost = kwargs.get('asset_cost', None)
        self.date_installed = kwargs.get('date_installed', None)
        self.annual_run_time = kwargs.get('annual_run_time', None)
        self.lost_production_cost = kwargs.get('lost_production_cost', None)
        self.overhaul_cost = kwargs.get('overhaul_cost', None)
        self.power_consumption = kwargs.get('power_consumption', None)
        self.life_expectancy = kwargs.get('life_expectancy', None)
        self.unscheduled_downtime = kwargs.get('unscheduled_downtime', None)
