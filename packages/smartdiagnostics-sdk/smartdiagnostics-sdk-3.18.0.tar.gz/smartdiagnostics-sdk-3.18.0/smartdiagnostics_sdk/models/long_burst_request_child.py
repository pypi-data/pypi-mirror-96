# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class LongBurstRequestChild(Model):
    """LongBurstRequestChild.

    :param long_burst_request_id:
    :type long_burst_request_id: long
    :param long_burst_request_status: Possible values include: 'Unknown',
     'Failed', 'Canceled', 'TimedOut', 'Initiated', 'Enqueued', 'Capturing',
     'Processing', 'Completed'
    :type long_burst_request_status: str or ~smartdiagnostics_sdk.models.enum
    :param requested_time:
    :type requested_time: datetime
    :param completed_time:
    :type completed_time: datetime
    :param requested_by_user:
    :type requested_by_user: ~smartdiagnostics_sdk.models.UserChild
    :param xaxis_long_burst_file:
    :type xaxis_long_burst_file: str
    :param yaxis_long_burst_file:
    :type yaxis_long_burst_file: str
    """

    _attribute_map = {
        'long_burst_request_id': {'key': 'LongBurstRequestId', 'type': 'long'},
        'long_burst_request_status': {'key': 'LongBurstRequestStatus', 'type': 'str'},
        'requested_time': {'key': 'RequestedTime', 'type': 'iso-8601'},
        'completed_time': {'key': 'CompletedTime', 'type': 'iso-8601'},
        'requested_by_user': {'key': 'RequestedByUser', 'type': 'UserChild'},
        'xaxis_long_burst_file': {'key': 'XAxisLongBurstFile', 'type': 'str'},
        'yaxis_long_burst_file': {'key': 'YAxisLongBurstFile', 'type': 'str'},
    }

    def __init__(self, **kwargs):
        super(LongBurstRequestChild, self).__init__(**kwargs)
        self.long_burst_request_id = kwargs.get('long_burst_request_id', None)
        self.long_burst_request_status = kwargs.get('long_burst_request_status', None)
        self.requested_time = kwargs.get('requested_time', None)
        self.completed_time = kwargs.get('completed_time', None)
        self.requested_by_user = kwargs.get('requested_by_user', None)
        self.xaxis_long_burst_file = kwargs.get('xaxis_long_burst_file', None)
        self.yaxis_long_burst_file = kwargs.get('yaxis_long_burst_file', None)
