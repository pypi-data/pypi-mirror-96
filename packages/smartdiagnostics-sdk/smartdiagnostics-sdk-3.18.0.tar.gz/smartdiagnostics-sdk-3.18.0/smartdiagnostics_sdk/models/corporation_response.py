# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class CorporationResponse(Model):
    """CorporationResponse.

    All required parameters must be populated in order to send to Azure.

    :param id: Required.
    :type id: str
    :param name: Required.
    :type name: str
    :param abbreviation:
    :type abbreviation: str
    :param icon_url:
    :type icon_url: str
    :param active:
    :type active: bool
    :param created:
    :type created: datetime
    :param industry:
    :type industry: ~smartdiagnostics_sdk.models.CorporationIndustryChild
    :param locations:
    :type locations: list[~smartdiagnostics_sdk.models.LocationChild]
    """

    _validation = {
        'id': {'required': True},
        'name': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'Id', 'type': 'str'},
        'name': {'key': 'Name', 'type': 'str'},
        'abbreviation': {'key': 'Abbreviation', 'type': 'str'},
        'icon_url': {'key': 'IconUrl', 'type': 'str'},
        'active': {'key': 'Active', 'type': 'bool'},
        'created': {'key': 'Created', 'type': 'iso-8601'},
        'industry': {'key': 'Industry', 'type': 'CorporationIndustryChild'},
        'locations': {'key': 'Locations', 'type': '[LocationChild]'},
    }

    def __init__(self, **kwargs):
        super(CorporationResponse, self).__init__(**kwargs)
        self.id = kwargs.get('id', None)
        self.name = kwargs.get('name', None)
        self.abbreviation = kwargs.get('abbreviation', None)
        self.icon_url = kwargs.get('icon_url', None)
        self.active = kwargs.get('active', None)
        self.created = kwargs.get('created', None)
        self.industry = kwargs.get('industry', None)
        self.locations = kwargs.get('locations', None)
