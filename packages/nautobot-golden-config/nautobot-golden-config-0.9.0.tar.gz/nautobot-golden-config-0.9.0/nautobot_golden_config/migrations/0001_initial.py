# Generated by Django 3.1.7 on 2021-02-23 22:54

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("dcim", "0004_initial_part_4"),
    ]

    operations = [
        migrations.CreateModel(
            name="GoldenConfigSettings",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("backup_path_template", models.CharField(blank=True, max_length=255)),
                ("intended_path_template", models.CharField(blank=True, max_length=255)),
                ("jinja_path_template", models.CharField(blank=True, max_length=255)),
                ("backup_test_connectivity", models.BooleanField(default=True)),
                ("shorten_sot_query", models.BooleanField(default=False)),
                ("sot_agg_query", models.TextField(blank=True)),
                ("remove_lines", models.TextField(blank=True)),
                ("substitute_lines", models.TextField(blank=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GoldenConfiguration",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("backup_config", models.TextField(blank=True)),
                ("backup_last_attempt_date", models.DateTimeField(null=True)),
                ("backup_last_success_date", models.DateTimeField(null=True)),
                ("intended_config", models.TextField(blank=True)),
                ("intended_last_attempt_date", models.DateTimeField(null=True)),
                ("intended_last_success_date", models.DateTimeField(null=True)),
                ("compliance_config", models.TextField(blank=True)),
                ("compliance_last_attempt_date", models.DateTimeField(null=True)),
                ("compliance_last_success_date", models.DateTimeField(null=True)),
                ("device", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="dcim.device")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ConfigCompliance",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("feature", models.CharField(max_length=32)),
                ("compliance", models.BooleanField(null=True)),
                ("actual", models.TextField(blank=True)),
                ("intended", models.TextField(blank=True)),
                ("missing", models.TextField(blank=True)),
                ("extra", models.TextField(blank=True)),
                ("ordered", models.BooleanField(default=True)),
                ("device", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="dcim.device")),
            ],
            options={
                "unique_together": {("device", "feature")},
            },
        ),
        migrations.CreateModel(
            name="ComplianceFeature",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("description", models.CharField(blank=True, max_length=200)),
                ("config_ordered", models.BooleanField()),
                ("match_config", models.TextField()),
                (
                    "platform",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="compliance_features",
                        to="dcim.platform",
                    ),
                ),
            ],
            options={
                "ordering": ("name", "platform"),
                "unique_together": {("name", "platform")},
            },
        ),
    ]
