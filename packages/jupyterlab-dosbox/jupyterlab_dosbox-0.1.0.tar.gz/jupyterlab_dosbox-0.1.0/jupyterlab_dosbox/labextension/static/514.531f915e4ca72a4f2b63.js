(self.webpackChunkjupyterlab_dosbox=self.webpackChunkjupyterlab_dosbox||[]).push([[514],{6630:(e,t,s)=>{"use strict";s.d(t,{g:()=>r});var i=s(1797),n=s(6168),a=s(8275),o=s(8233);class r{constructor(e,t){this._fileChanged=new n.Signal(this),this.fs=e,this.rescan=t,this.uName=i.UUID.uuid4()}async get(e,t){const s=await this.pathToContentsModel("",e,{getContents:!0});return"directory"===s.type&&(s.content=this.fs.readdir("/"+e),s.content=await Promise.all(s.content.map((async t=>await this.pathToContentsModel(e,t)))),s.content=s.content.filter((e=>null!==e))),Promise.resolve(s)}getDownloadUrl(e){throw new Error("Method not implemented.")}newUntitled(e){let t,s="";"directory"!==e.type&&(s=a.PathExt.normalizeExtension(e.ext));let i=0;for(;void 0===t;)try{this.fs.stat("/"+a.PathExt.join(e.path,"Untitled"+i+s)),i+=1}catch(n){t="/"+a.PathExt.join(e.path,"Untitled"+i+s)}return"directory"===e.type?this.fs.mkdir(t):this.fs.writeFile(t,""),this.rescan(),this.pathToContentsModel("/"+e.path,a.PathExt.basename(t),{getContents:!0})}delete(e){return this.fs.unlink("/"+e),this.rescan(),new Promise((()=>null))}rename(e,t){return this.fs.rename("/"+e,"/"+t),this.rescan(),this.pathToContentsModel("",t)}async save(e,t){let s;if("base64"===t.format){const s=new Uint8Array((0,o.base64ToBuffer)(t.content)),i=this.fs.open("/"+e,"w");return this.fs.write(i,s,0,s.length),this.fs.close(i),this.rescan(),this.pathToContentsModel(a.PathExt.dirname(e),a.PathExt.basename(e))}return s="json"===t.format?JSON.stringify(t.content):t.content,this.fs.writeFile("/"+e,s),this.rescan(),this.pathToContentsModel(a.PathExt.dirname(e),a.PathExt.basename(e))}copy(e,t){const s=a.PathExt.basename(e),i=this.fs.readFile("/"+e);return this.fs.writeFile("/"+a.PathExt.join(t,s),i),this.rescan(),this.pathToContentsModel(t,s)}_getCheckpointBase(e){return"/"+a.PathExt.join(a.PathExt.dirname(e),".ipynb_checkpoints")}createCheckpoint(e){const t=this._getCheckpointBase(e);let s;try{if(s=this.fs.stat(t),!this.fs.isDir(s.mode))throw new Error(`${t} exists and is not a directory!`)}catch(e){this.fs.mkdir(t)}const n="/"+a.PathExt.join(t,a.PathExt.basename(e))+i.UUID.uuid4();this.fs.writeFile(n,""),s=this.fs.stat(n);const o={path:n,id:""+s.ino,last_modified:s.mtime.toISOString()};return this.rescan(),Promise.resolve(o)}listCheckpoints(e){const t=this._getCheckpointBase(e);let s;try{s=this.fs.readdir(t)}catch(e){return Promise.resolve([])}const i=[];for(const n in s.filter((t=>t.startsWith(e)))){const e=this.fs.stat("/"+a.PathExt.join(t,n));i.push({id:""+e.ino,path:"/"+a.PathExt.join(t,n),last_modified:e.mtime.toISOString()})}return Promise.resolve(i)}restoreCheckpoint(e,t){return this.listCheckpoints(e).then((s=>s.filter((e=>e.id===t)).forEach((t=>{const s=this.fs.readFile(t.path);this.fs.writeFile(e,s),this.rescan()}))))}deleteCheckpoint(e,t){return this.listCheckpoints(e).then((e=>e.filter((e=>e.id===t)).forEach((e=>this.fs.unlink(e.path))))).then((()=>this.rescan()))}dispose(){this.isDisposed||(this.isDisposed=!0,n.Signal.clearData(this))}get name(){return"EmscriptenFS-"+this.uName}get fileChanged(){return this._fileChanged}async pathToContentsModel(e,t,s={getContents:!1}){if("."===t)return null;let i;const n=a.PathExt.join(e,t);try{i=this.fs.stat("/"+n)}catch(e){throw console.log(`Issue with getting stat: ${e}`),e}let r,l,d="text",c="text/text-plain";if(s.getContents&&this.fs.isFile(i.mode))switch(r=(0,o.bufferToBase64)(this.fs.readFile("/"+n,{encoding:"binary"})),a.PathExt.normalizeExtension(a.PathExt.extname(t))){case".json":l=JSON.parse(atob(r)),c="application/json",d="json";break;case".txt":l=atob(r),c="text/text-plain",d="text";break;default:l=r,c="application/octet-stream",d="base64"}return{name:t,path:n,type:this.fs.isDir(i.mode)?"directory":"file",writable:!0,created:i.ctime.toISOString(),last_modified:i.mtime.toISOString(),mimetype:c,content:l,format:d,size:i.size}}}},4885:(e,t,s)=>{"use strict";function i(e){return void 0!==e.layers?e.layers:{default:{name:"fallback",gestures:e.gestures||[],buttons:e.buttons||[],mapper:e.mapper||{}}}}s.d(t,{q:()=>i})},6651:(e,t,s)=>{"use strict";s.a(e,(async e=>{s.d(t,{c:()=>o});var i=s(6510),n=s(8275),a=s(9290);await s.e(30).then(s.t.bind(s,30,23)),await s.e(873).then(s.t.bind(s,1873,23));class o extends i.Widget{constructor(){super(),this.dosInitialized=!1,emulators.pathPrefix="/jupyterlab_dosbox/wasm/",this.addClass("dosbox-widget"),console.log("Creating a new canvas and appending."),this.dosDiv=document.createElement("div"),this.dosDiv.setAttribute("id","dos-"+this.id),this.node.appendChild(this.dosDiv)}async startDos(){const e=a.ServerConnection.makeSettings(),t=n.URLExt.join(e.baseUrl,"jupyterlab_dosbox","bundles","null_bundle.jsdos");this.dos=Dos(this.dosDiv,{emulatorFunction:"dosDirect"}),this.ci=await this.dos.run(t),this.dosInitialized=!0}async onUpdateRequest(){this.dosInitialized||(this.dosInitialized=!0,console.log("Creating a new Dos instance"),this.startDos())}}e()}),1)},8657:(e,t,s)=>{"use strict";s.d(t,{Y:()=>n,o:()=>a});const i=s(306),n=i.version,a=i.name},1367:(e,t,s)=>{"use strict";s.a(e,(async e=>{s.d(t,{X:()=>u,I:()=>p});var i=s(1797),n=s(8233),a=s(8657),o=s(4885),r=s(8275),l=s(9290),d=s(6630);function c(e){return new DataView(e.buffer.slice(0))}await s.e(30).then(s.t.bind(s,30,23)),await s.e(873).then(s.t.bind(s,1873,23));const h=new Uint8Array;class u extends n.DOMWidgetModel{constructor(){super(...arguments),this._shouldPopout=!1,this.activelayer="default"}defaults(){return Object.assign(Object.assign({},super.defaults()),{running:!1,activelayer:"default",_shouldPopout:!1,_last_registerdump:void 0,_last_coredump:void 0,_last_screenshot:void 0,_model_name:u.model_name,_model_module:u.model_module,_model_module_version:u.model_module_version,_view_name:u.view_name,_view_module:u.view_module,_view_module_version:u.view_module_version})}async initialize(e,t){emulators.pathPrefix="/jupyterlab_dosbox/wasm/",this.on("msg:custom",this.onCommand.bind(this)),super.initialize(e,t),this.emulatorsUi=emulatorsUi;const s=l.ServerConnection.makeSettings(),i=r.URLExt.join(s.baseUrl,"jupyterlab_dosbox","bundles","null_bundle.jsdos");this.ci=await this.run(i),this.set("running",!0),this.get("_shouldPopout")?await this.popOut():this.once("change:_shouldPopout",this.popOut)}async popOut(){const e=this.getAppInfo(),t=await this.widget_manager.create_view(this,{});t.pWidget.id=this.id+"-shell-widget",t.pWidget.addClass("dosbox-widget"),t.pWidget.title.label="DosBox Instance",t.pWidget.title.closable=!0,e.app.shell.add(t.pWidget,"main",{activate:!1});const s=new d.g(this.ci.module.FS,this.ci.module._rescanFilesystem);e.manager.services.contents.addDrive(s);const i=e.factory.createFileBrowser("EMFS-"+this.id,{driveName:s.name});i.title.caption="DosBox FS",e.app.shell.add(i,"left",{rank:101})}async onCommand(e,t){let s,i,n,a,o,r,l,d=0;switch(e.name){case"sendKeys":l=e.args;for(const e of l){d+=1;const t=this.emulatorsUi.controls.namedKeyCodes[e[0]];this.ci.addKey(t,e[1],d)}break;case"screenshot":s=await this.ci.screenshot(),this.set("_last_screenshot",s.data.slice(0)),this.save();break;case"coreDump":n=this.ci.module,await n._dumpMemory(!!e.args[0]),i={},a=e.args[0]?n.memoryContents.memoryCopy:h,this.set("_last_coredump",a),["memBase","ip","flags","registers","segments_physical","segments_values"].forEach((e=>i[e]=n.memoryContents[e])),this.set("_last_registerdump",i),this.save();break;case"sendZipfile":for(r of(n=this.ci.module,n.FS.chdir("/home/web_user"),t)){o=new Uint8Array(r.buffer);const e=n._malloc(o.length);n.HEAPU8.set(o,e),n._zip_to_fs(e,o.length),n._free(e)}n._rescanFilesystem();break;case"debug":window.dosboxWidget=this;break;case"popOut":this.set("_shouldPopout",!0),this.save()}}async run(e,t){await this.stop();const s=t||e+".changed",i=this.emulatorsUi;console.log("Starting download");const n=i.network.resolveBundle(e,{onprogress:e=>console.log("Downloading bundle "+e+"%")});try{const e=await i.persist.load(s,emulators).catch((()=>i.network.resolveBundle(s,{cache:null}))),t=await n;this.ciPromise=emulators.dosDirect([t,e])}catch(e){const t=await n;this.ciPromise=emulators.dosDirect([t])}let a;try{a=await this.ciPromise}catch(e){throw console.log("Unexpected error occurred"),console.error(e),e}return a}async stop(){if(void 0===this.ciPromise)return;const e=await this.ciPromise;delete this.ciPromise,await e.exit(),this.set("running",!1)}}u.serializers=Object.assign(Object.assign({},n.DOMWidgetModel.serializers),{_last_screenshot:{serialize:c,deserialize:function(e){return null===e?null:new Uint8ClampedArray(e.buffer)}},_last_coredump:{serialize:c,deserialize:function(e){return null===e?null:new Uint8Array(e.buffer)}}}),u.model_name="DosboxRuntimeModel",u.model_module=a.o,u.model_module_version=a.Y,u.view_name="DosboxRuntimeView",u.view_module=a.o,u.view_module_version=a.Y;class p extends n.DOMWidgetView{constructor(){super(...arguments),this.layerNames=null,this.layerConfig=null,this.addCanvasListeners=!1}render(){this.div=document.createElement("div"),this.divId="dos-"+i.UUID.uuid4(),this.div.setAttribute("id",this.divId),this.el.classList.add("jsdos"),this.el.appendChild(this.div),this.setupEventListeners(),this.model.get("running")&&this.connectLayers()}setupEventListeners(){this.model.on("change:running",this.connectLayers,this),this.model.on("change:activelayer",this.changeLayer,this)}async connectLayers(){this.ci=await this.model.ciPromise,this.layers=this.model.emulatorsUi.dom.layers(this.div),emulatorsUi.persist.save("",this.layers,this.ci,emulators),this.model.emulatorsUi.graphics.webGl(this.layers,this.ci),this.model.emulatorsUi.sound.audioNode(this.ci);const e=await this.ci.config();this.layerConfig=(0,o.q)(e),this.layerNames=Object.keys(this.layerConfig),emulatorsUi.controls.options(this.layers,this.ci,this.layerNames,this.changeLayer),this.layers.clickToStart.style.display="none",this.layers.hideLoadingLayer(),this.layers.canvas.setAttribute("tabindex","1"),this.layers.video.style.display="none",this.layers.loading.style.display="none",this.changeLayer(),this.resetEventListeners()}resetEventListeners(){const e=this.layers,t=emulatorsUi.controls.domToKeyCode;this.layerKeyHandlers=[e.onKeyDown,e.onKeyUp],this.layers.setOnKeyDown((()=>null)),this.layers.setOnKeyUp((()=>null)),!0===this.addCanvasListeners&&(this.layers.canvas.addEventListener("keydown",(e=>{e.preventDefault(),e.stopPropagation(),this.layerKeyHandlers[0](t(e.keyCode))})),this.layers.canvas.addEventListener("keyup",(e=>{e.preventDefault(),e.stopPropagation(),this.layerKeyHandlers[1](t(e.keyCode))})))}changeLayer(){if(void 0===this.layerNames)return;const e=this.model.get("activelayer"),t=this.layerConfig[e];void 0!==t&&(emulatorsUi.controls.keyboard(this.layers,this.ci,t.mapper),emulatorsUi.controls.mouse(this.layers,this.ci))}}e()}),1)},306:e=>{"use strict";e.exports=JSON.parse('{"name":"jupyterlab-dosbox","version":"0.1.0","description":"Run DosBox in jupyterlab","keywords":["jupyter","jupyterlab","jupyterlab-extension"],"homepage":"https://github.com/matthewturk/jupyterlab_dosbox","bugs":{"url":"https://github.com/matthewturk/jupyterlab_dosbox/issues"},"license":"BSD-3-Clause","author":"Matthew Turk","files":["lib/**/*.{d.ts,eot,gif,html,jpg,js,js.map,json,png,svg,woff2,ttf,wasm}","style/**/*.{css,eot,gif,html,jpg,json,png,svg,woff2,ttf}","style/index.js"],"main":"lib/index.js","types":"lib/index.d.ts","style":"style/index.css","repository":{"type":"git","url":"https://github.com/matthewturk/jupyterlab_dosbox.git"},"scripts":{"build":"jlpm run build:lib && jlpm run build:labextension:dev","build:prod":"jlpm run build:lib && jlpm run build:labextension","build:labextension":"jupyter labextension build .","build:labextension:dev":"jupyter labextension build --development True .","build:lib":"tsc","clean":"jlpm run clean:lib","clean:lib":"rimraf lib tsconfig.tsbuildinfo","clean:labextension":"rimraf myextension/labextension","clean:all":"jlpm run clean:lib && jlpm run clean:labextension","eslint":"eslint . --ext .ts,.tsx --fix","eslint:check":"eslint . --ext .ts,.tsx","install:extension":"jupyter labextension develop --overwrite .","prepare":"jlpm run clean && jlpm run build:prod","watch":"run-p watch:src watch:labextension","watch:src":"tsc -w","watch:labextension":"jupyter labextension watch ."},"dependencies":{"@jupyter-widgets/base":"^1.1.10 || ^2 || ^3 || ^4","@jupyter-widgets/jupyterlab-manager":"^3.0.0","@jupyterlab/application":"^3.0.4","@jupyterlab/apputils":"^3.0.0","@jupyterlab/coreutils":"^5.0.2","@jupyterlab/docmanager":"^3.0.5","@jupyterlab/filebrowser":"^3.0.5","@jupyterlab/mainmenu":"^3.0.3","@jupyterlab/services":"^6.0.3","@types/emscripten":"^1.39.4","@types/node":"^10.11.6","emulators":"^0.0.55","emulators-ui":"^0.0.51"},"devDependencies":{"@jupyterlab/builder":"^3.0.0","@types/expect.js":"^0.3.29","@types/mocha":"^5.2.5","@types/node":"^10.11.6","@types/webpack-env":"^1.13.6","@typescript-eslint/eslint-plugin":"^3.6.0","@typescript-eslint/parser":"^3.6.0","acorn":"^7.2.0","css-loader":"^3.2.0","eslint":"^7.4.0","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.4","expect.js":"^0.3.1","fs-extra":"^7.0.0","karma":"^3.1.0","karma-chrome-launcher":"^2.2.0","karma-firefox-launcher":"^1.1.0","karma-ie-launcher":"^1.0.0","karma-mocha":"^1.3.0","karma-mocha-reporter":"^2.2.5","karma-typescript":"^5.0.3","karma-typescript-es6-transform":"^5.0.3","mkdirp":"^0.5.1","mocha":"^5.2.0","npm-run-all":"^4.1.3","prettier":"^2.0.5","rimraf":"^2.6.2","source-map-loader":"^0.2.4","style-loader":"^1.0.0","ts-loader":"^5.2.1","typescript":"^4.1.3","webpack":"^4.20.2","webpack-cli":"^3.1.2"},"sideEffects":["style/*.css","style/index.js"],"styleModule":"style/index.js","jupyterlab":{"discovery":{"server":{"managers":["pip"],"base":{"name":"jupyterlab_dosbox"}}},"extension":"lib/plugin","outputDir":"jupyterlab_dosbox/labextension","webpackConfig":"./webpack.config.js"}}')}}]);