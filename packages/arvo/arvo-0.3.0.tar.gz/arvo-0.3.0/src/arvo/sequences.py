import itertools

# Linear sequence
_linearList = []
for i in range(1, 200):
    _linearList.append(i)
LINEAR = _linearList

# Prime numbers
PRIMES = [
    2,
    3,
    5,
    7,
    11,
    13,
    17,
    19,
    23,
    29,
    31,
    37,
    41,
    43,
    47,
    53,
    59,
    61,
    67,
    71,
    73,
    79,
    83,
    89,
    97,
    101,
    103,
    107,
    109,
    113,
    127,
    131,
    137,
    139,
    149,
    151,
    157,
    163,
    167,
    173,
    179,
    181,
    191,
    193,
    197,
    199,
    211,
    223,
    227,
    229,
    233,
    239,
    241,
    251,
    257,
    263,
    269,
    271,
]

PRIME_POWERS = [
    2,
    3,
    4,
    5,
    7,
    8,
    9,
    11,
    13,
    16,
    17,
    19,
    23,
    25,
    27,
    29,
    31,
    32,
    37,
    41,
    43,
    47,
    49,
    53,
    59,
    61,
    64,
    67,
    71,
    73,
    79,
    81,
    83,
    89,
    97,
    101,
    103,
    107,
    109,
    113,
    121,
    125,
    127,
    128,
    131,
    137,
    139,
    149,
    151,
    157,
    163,
    167,
    169,
    173,
    179,
    181,
    191,
    193,
    197,
    199,
    211,
]

# Fibonacci & Tribonacci numbers
FIBONACCI = [
    1,
    1,
    2,
    3,
    5,
    8,
    13,
    21,
    34,
    55,
    89,
    144,
    233,
    377,
    610,
    987,
    1597,
    2584,
    4181,
    6765,
    10946,
    17711,
    28657,
    46368,
    75025,
    121393,
    196418,
    317811,
    514229,
    832040,
    1346269,
    2178309,
    3524578,
    5702887,
    9227465,
    14930352,
    24157817,
    39088169,
    63245986,
    102334155,
]

TRIBONACCI = [
    1,
    1,
    2,
    4,
    7,
    13,
    24,
    44,
    81,
    149,
    274,
    504,
    927,
    1705,
    3136,
    5768,
    10609,
    19513,
    35890,
    66012,
    121415,
    223317,
    410744,
    755476,
    1389537,
    2555757,
    4700770,
    8646064,
    15902591,
    29249425,
    53798080,
    98950096,
    181997601,
    334745777,
    615693474,
    1132436852,
]

# Divisors
DIVISORS = [
    1,
    2,
    2,
    3,
    2,
    4,
    2,
    4,
    3,
    4,
    2,
    6,
    2,
    4,
    4,
    5,
    2,
    6,
    2,
    6,
    4,
    4,
    2,
    8,
    3,
    4,
    4,
    6,
    2,
    8,
    2,
    6,
    4,
    4,
    4,
    9,
    2,
    4,
    4,
    8,
    2,
    8,
    2,
    6,
    6,
    4,
    2,
    10,
    3,
    6,
    4,
    6,
    2,
    8,
    4,
    8,
    4,
    4,
    2,
    12,
    2,
    4,
    6,
    7,
    4,
    8,
    2,
    6,
    4,
    8,
    2,
    12,
    2,
    4,
    6,
    6,
    4,
    8,
    2,
    10,
    5,
    4,
    2,
    12,
    4,
    4,
    4,
    8,
    2,
    12,
    4,
    6,
    4,
    4,
    4,
    12,
    2,
    6,
    6,
    9,
    2,
    8,
    2,
    8,
]


# Kolakoski sequences (credit to rosettacode.org)
def _cycler(start_items):
    return itertools.cycle(start_items).__next__


def _kolakoski_gen(start_items):
    s, k = [], 0
    c = _cycler(start_items)
    while True:
        c_next = c()
        s.append(c_next)
        sk = s[k]
        yield sk
        if sk > 1:
            s += [c_next] * (sk - 1)
        k += 1


def kolakoski(start_items=(1, 2), length=100):
    return list(itertools.islice(_kolakoski_gen(start_items), length))
