# coding: utf-8

"""
    STACKL

    stackl  # noqa: E501

    The version of the OpenAPI document: 0.3.0.dev0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import stackl_client
from stackl_client.models.infrastructure_base_document import InfrastructureBaseDocument  # noqa: E501
from stackl_client.rest import ApiException

class TestInfrastructureBaseDocument(unittest.TestCase):
    """InfrastructureBaseDocument unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test InfrastructureBaseDocument
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = stackl_client.models.infrastructure_base_document.InfrastructureBaseDocument()  # noqa: E501
        if include_optional :
            return InfrastructureBaseDocument(
                name = '0', 
                category = '0', 
                type = '0', 
                cloud_provider = '0', 
                params = stackl_client.models.params.Params(), 
                secrets = stackl_client.models.secrets.Secrets(), 
                outputs = stackl_client.models.outputs.Outputs(), 
                resources = stackl_client.models.resources.Resources(), 
                policies = stackl_client.models.policies.Policies(), 
                packages = [
                    '0'
                    ], 
                tags = stackl_client.models.tags.Tags(), 
                agent = '0', 
                description = 'Base Document'
            )
        else :
            return InfrastructureBaseDocument(
                name = '0',
                category = '0',
                type = '0',
        )

    def testInfrastructureBaseDocument(self):
        """Test InfrastructureBaseDocument"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
