
 

// This file is autogenerated. DO NOT EDIT

#pragma once
#include <robotpy_build.h>


#include <..\src\include\frc2\command\CommandBase.h>

#include <src/helpers.h>




#include <rpygen/frc2__Command.hpp>
#include <rpygen/frc__Sendable.hpp>

namespace rpygen {

using namespace frc2;


template <typename PyTrampolineBase, typename CxxBase = PyTrampolineBase>
using PyBasefrc2__CommandBase = 
    Pyfrc2__Command<
    Pyfrc__Sendable<
        PyTrampolineBase
    
    , CxxBase
    >
    
    , CxxBase
    >
;

template <typename PyTrampolineBase, typename CxxBase = PyTrampolineBase>
struct Pyfrc2__CommandBase : PyBasefrc2__CommandBase<PyTrampolineBase, CxxBase> {
    using PyBasefrc2__CommandBase<PyTrampolineBase, CxxBase>::PyBasefrc2__CommandBase;

#ifdef RPYGEN_ENABLE_frc2__CommandBase_PROTECTED_CONSTRUCTORS
    Pyfrc2__CommandBase() :
PyBasefrc2__CommandBase<PyTrampolineBase, CxxBase>()
    {}
#endif


#ifndef RPYGEN_DISABLE_KGetRequirements_v
    wpi::SmallSet<std::shared_ptr<Subsystem>, 4 > GetRequirements() const override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(wpi::SmallSet<std::shared_ptr<Subsystem>, 4 >), CxxBase, "getRequirements", GetRequirements,);    }
#endif

#ifndef RPYGEN_DISABLE_KGetName_v
    std::string GetName() const override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(std::string), CxxBase, "getName", GetName,);    }
#endif

#ifndef RPYGEN_DISABLE_InitSendable_RTSendableBuilder
    void InitSendable(frc::SendableBuilder& builder) override {
PYBIND11_OVERRIDE_NAME(PYBIND11_TYPE(void), CxxBase, "initSendable", InitSendable,builder);    }
#endif



    using frc2::CommandBase::m_requirements;

};

}; // namespace rpygen
